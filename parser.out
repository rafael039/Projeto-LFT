Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    DOUBLEQUOTE
    EXIT
    SINGLEQUOTE
    SPACE
    UMINUS
    WHEN

Grammar

Rule 0     S' -> program
Rule 1     program -> PROCEDURE ID IS decl BEGIN cmd END ID SEMICOLON
Rule 2     program -> PROCEDURE ID IS BEGIN cmd END ID SEMICOLON
Rule 3     subprogram -> FUNCTION ID decl_param IS decl BEGIN cmd END ID SEMICOLON
Rule 4     subprogram -> FUNCTION ID decl_param IS BEGIN cmd END ID SEMICOLON
Rule 5     decl -> var SEMICOLON decl_loop
Rule 6     decl -> subprogram decl_loop
Rule 7     decl_loop -> subprogram decl_loop
Rule 8     decl_loop -> subprogram
Rule 9     decl_loop -> var SEMICOLON decl_loop
Rule 10    decl_loop -> var SEMICOLON
Rule 11    var -> ID COMMA TYPE ASSIGN value
Rule 12    var -> ID COLON TYPE
Rule 13    var -> var_loop ID COLON TYPE
Rule 14    var -> array
Rule 15    var_loop -> var_loop ID COMMA
Rule 16    var_loop -> ID COMMA
Rule 17    decl_param -> LPAREN param RPAREN
Rule 18    decl_param -> LPAREN param RPAREN RETURN TYPE
Rule 19    param -> ID COLON TYPE n_param
Rule 20    n_param -> SEMICOLON ID COLON TYPE n_param
Rule 21    n_param -> SEMICOLON ID COLON TYPE
Rule 22    function_call -> ID LPAREN param_pass RPAREN SEMICOLON
Rule 23    function_call_exp -> ID LPAREN param_pass RPAREN
Rule 24    param_pass -> expression param_pass_loop
Rule 25    param_pass -> op_arithmetic param_pass_loop
Rule 26    param_pass_loop -> SEMICOLON expression param_pass_loop
Rule 27    param_pass_loop -> SEMICOLON op_arithmetic param_pass_loop
Rule 28    param_pass_loop -> SEMICOLON expression
Rule 29    param_pass_loop -> SEMICOLON op_arithmetic
Rule 30    value -> NUMBER_INT
Rule 31    value -> NUMBER_FLOAT
Rule 32    value -> NUMBER_EXPONENT
Rule 33    value -> BOOLEAN
Rule 34    value -> STRING
Rule 35    value -> CHAR
Rule 36    cmd -> if_statement
Rule 37    cmd -> repeat_statement
Rule 38    cmd -> puts
Rule 39    cmd -> return
Rule 40    cmd -> assign
Rule 41    cmd -> function_call
Rule 42    cmd -> cmd cmd_loop
Rule 43    cmd -> cmd
Rule 44    puts -> PUTS LPAREN STRING RPAREN SEMICOLON
Rule 45    if_statement -> IF expression THEN cmd if_statement_loop
Rule 46    if_statement_loop -> ELSIF expression cmd if_statement_loop
Rule 47    if_statement_loop -> ELSE expression cmd END IF SEMICOLON
Rule 48    if_statement_loop -> END IF SEMICOLON
Rule 49    repeat_statement -> loop_statement
Rule 50    repeat_statement -> for_statement
Rule 51    repeat_statement -> while_statement
Rule 52    loop_statement -> LOOP cmd END LOOP
Rule 53    while_statement -> WHILE expression NUMBER_INT LOOP cmd END LOOP SEMICOLON
Rule 54    for_statement -> FOR ID IN range LOOP cmd END LOOP SEMICOLON
Rule 55    range -> ID DOTDOT ID
Rule 56    assign -> ID ASSIGN op_arithmetic SEMICOLON
Rule 57    expression -> expression AND or_exp
Rule 58    or_exp -> or_exp OR comp_exp
Rule 59    comp_exp -> comp_exp comp_op bterm
Rule 60    bterm -> ID
Rule 61    bterm -> function_call_exp
Rule 62    bterm -> LPAREN expression RPAREN
Rule 63    comp_op -> GREATERTHAN
Rule 64    comp_op -> GREATERTHANEQUAL
Rule 65    comp_op -> LESSTHAN
Rule 66    comp_op -> LESSTHANEQUAL
Rule 67    comp_op -> NOTEQUAL
Rule 68    comp_op -> EQUAL
Rule 69    op_arithmetic -> op_arithmetic PLUS factor
Rule 70    op_arithmetic -> op_arithmetic MINUS factor
Rule 71    op_arithmetic -> factor
Rule 72    factor -> factor TIMES power
Rule 73    factor -> factor DIVIDE power
Rule 74    factor -> power
Rule 75    power -> power POWER term
Rule 76    term -> LPAREN op_arithmetic RPAREN
Rule 77    term -> ID
Rule 78    term -> function_call_exp
Rule 79    array -> TYPE ID IS ARRAY LPAREN range RPAREN OF TYPE SEMICOLON
Rule 80    return -> RETURN expression
Rule 81    return -> RETURN op_arithmetic

Terminals, with rules where they appear

AND                  : 57
ARRAY                : 79
ASSIGN               : 11 56
BEGIN                : 1 2 3 4
BOOLEAN              : 33
CHAR                 : 35
COLON                : 12 13 19 20 21
COMMA                : 11 15 16
COMMENT              : 
DIVIDE               : 73
DOTDOT               : 55
DOUBLEQUOTE          : 
ELSE                 : 47
ELSIF                : 46
END                  : 1 2 3 4 47 48 52 53 54
EQUAL                : 68
EXIT                 : 
FOR                  : 54
FUNCTION             : 3 4
GREATERTHAN          : 63
GREATERTHANEQUAL     : 64
ID                   : 1 1 2 2 3 3 4 4 11 12 13 15 16 19 20 21 22 23 54 55 55 56 60 77 79
IF                   : 45 47 48
IN                   : 54
IS                   : 1 2 3 4 79
LESSTHAN             : 65
LESSTHANEQUAL        : 66
LOOP                 : 52 52 53 53 54 54
LPAREN               : 17 18 22 23 44 62 76 79
MINUS                : 70
NOTEQUAL             : 67
NUMBER_EXPONENT      : 32
NUMBER_FLOAT         : 31
NUMBER_INT           : 30 53
OF                   : 79
OR                   : 58
PLUS                 : 69
POWER                : 75
PROCEDURE            : 1 2
PUTS                 : 44
RETURN               : 18 80 81
RPAREN               : 17 18 22 23 44 62 76 79
SEMICOLON            : 1 2 3 4 5 9 10 20 21 22 26 27 28 29 44 47 48 53 54 56 79
SINGLEQUOTE          : 
SPACE                : 
STRING               : 34 44
THEN                 : 45
TIMES                : 72
TYPE                 : 11 12 13 18 19 20 21 79 79
UMINUS               : 
WHEN                 : 
WHILE                : 53
error                : 

Nonterminals, with rules where they appear

array                : 14
assign               : 40
bterm                : 59
cmd                  : 1 2 3 4 42 43 45 46 47 52 53 54
cmd_loop             : 42
comp_exp             : 58 59
comp_op              : 59
decl                 : 1 3
decl_loop            : 5 6 7 9
decl_param           : 3 4
expression           : 24 26 28 45 46 47 53 57 62 80
factor               : 69 70 71 72 73
for_statement        : 50
function_call        : 41
function_call_exp    : 61 78
if_statement         : 36
if_statement_loop    : 45 46
loop_statement       : 49
n_param              : 19 20
op_arithmetic        : 25 27 29 56 69 70 76 81
or_exp               : 57 58
param                : 17 18
param_pass           : 22 23
param_pass_loop      : 24 25 26 27
power                : 72 73 74 75
program              : 0
puts                 : 38
range                : 54 79
repeat_statement     : 37
return               : 39
subprogram           : 6 7 8
term                 : 75
value                : 11
var                  : 5 9 10
var_loop             : 13 15
while_statement      : 51

