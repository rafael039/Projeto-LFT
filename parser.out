Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    BODY
    CASE
    COMMENT
    DECLARE
    DO
    DOUBLEQUOTE
    FALSE
    FUNCTION
    OF
    RAISE
    REPEAT
    RETURN
    STRING
    TASK
    TRUE

Grammar

Rule 0     S' -> subprogram_body
Rule 1     subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON
Rule 2     subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON
Rule 3     designator -> name DOT ID
Rule 4     designator -> ID
Rule 5     subprogram_specification -> PROCEDURE defining_program_unit_name
Rule 6     declarative_part -> basic_declarative_item
Rule 7     declarative_part -> subprogram_body
Rule 8     declarative_part -> basic_declarative_item declarative_part
Rule 9     declarative_part -> subprogram_body declarative_part
Rule 10    basic_declarative_item -> basic_declaration
Rule 11    basic_declarative_item -> representation_clause
Rule 12    basic_declarative_item -> use_clause
Rule 13    representation_clause -> attribute_definition_clause
Rule 14    representation_clause -> enumeration_representation_clause
Rule 15    direct_name -> ID
Rule 16    attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON
Rule 17    attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON
Rule 18    indexed_component -> name LPAREN expression RPAREN
Rule 19    indexed_component -> name LPAREN expression COLON indexed_component RPAREN
Rule 20    type_conversion -> name LPAREN expression RPAREN
Rule 21    type_conversion -> name LPAREN name RPAREN
Rule 22    selected_component -> name DOT selector_name
Rule 23    attribute_reference -> name SINGLEQUOTE attribute_designator
Rule 24    attribute_designator -> ID
Rule 25    attribute_designator -> ID LPAREN expression RPAREN
Rule 26    expression -> relation AND relation
Rule 27    expression -> relation AND relation expression
Rule 28    expression -> relation AND THEN relation
Rule 29    expression -> relation AND THEN relation expression
Rule 30    expression -> relation OR relation
Rule 31    expression -> relation OR relation expression
Rule 32    expression -> relation OR ELSE relation
Rule 33    expression -> relation OR ELSE relation expression
Rule 34    expression -> relation XOR relation
Rule 35    expression -> relation XOR relation expression
Rule 36    relation -> simple_expression
Rule 37    relation -> simple_expression EQUAL simple_expression
Rule 38    relation -> simple_expression NOTEQUAL simple_expression
Rule 39    relation -> simple_expression LESSTHAN simple_expression
Rule 40    relation -> simple_expression LESSTHANEQUAL simple_expression
Rule 41    relation -> simple_expression GREATERTHAN simple_expression
Rule 42    relation -> simple_expression GREATERTHANEQUAL simple_expression
Rule 43    relation -> simple_expression IN range
Rule 44    relation -> simple_expression IN name
Rule 45    relation -> simple_expression NOT IN range
Rule 46    relation -> simple_expression NOT IN name
Rule 47    simple_expression -> simple_expression PLUS term
Rule 48    simple_expression -> simple_expression MINUS term
Rule 49    simple_expression -> simple_expression CONCAT term
Rule 50    simple_expression -> unaryExp
Rule 51    unaryExp -> PLUS term
Rule 52    unaryExp -> MINUS term
Rule 53    unaryExp -> term
Rule 54    term -> factor
Rule 55    term -> factor TIMES factor term
Rule 56    term -> factor DIVIDE factor term
Rule 57    term -> factor MOD factor term
Rule 58    term -> factor REM factor term
Rule 59    factor -> primary
Rule 60    factor -> primary POWER primary
Rule 61    numeric_literal -> NUMBER_INT
Rule 62    numeric_literal -> NUMBER_FLOAT
Rule 63    numeric_literal -> NUMBER_EXPONENT
Rule 64    primary -> numeric_literal
Rule 65    primary -> NULL
Rule 66    primary -> named_array_aggregate
Rule 67    primary -> name
Rule 68    primary -> qualified_expression
Rule 69    primary -> LPAREN expression RPAREN
Rule 70    qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN
Rule 71    qualified_expression -> name SINGLEQUOTE named_array_aggregate
Rule 72    named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
Rule 73    named_array_aggregate -> COMMA array_component_association
Rule 74    array_component_association -> discrete_choice_list REFASSIGN expression
Rule 75    discrete_choice_list -> discrete_choice
Rule 76    discrete_choice_list -> discrete_choice PIPE discrete_choice discrete_choice_list
Rule 77    discrete_choice -> expression
Rule 78    discrete_choice -> discrete_range
Rule 79    discrete_range -> subtype_indication
Rule 80    discrete_range -> range
Rule 81    subtype_indication -> name
Rule 82    subtype_indication -> name constraint
Rule 83    constraint -> range_constraint
Rule 84    constraint -> digits_constraint
Rule 85    constraint -> index_constraint
Rule 86    constraint -> discriminant_constraint
Rule 87    discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN
Rule 88    discriminant_constraint -> COMMA discriminant_association
Rule 89    discriminant_association -> selector_name PIPE selector_name REFASSIGN expression
Rule 90    discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression
Rule 91    discriminant_association -> PIPE selector_name
Rule 92    discriminant_association -> expression
Rule 93    index_constraint -> LPAREN discrete_range RPAREN
Rule 94    index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN
Rule 95    digits_constraint -> DIGITS expression range_constraint
Rule 96    digits_constraint -> DIGITS expression
Rule 97    range_constraint -> RANGE range
Rule 98    range -> range_attribute_reference
Rule 99    range -> simple_expression DOTDOT simple_expression
Rule 100   range_attribute_reference -> name SINGLEQUOTE range_attribute_designator
Rule 101   range_attribute_designator -> RANGE
Rule 102   range_attribute_designator -> RANGE LPAREN expression RPAREN
Rule 103   name -> direct_name
Rule 104   name -> slice
Rule 105   name -> selected_component
Rule 106   name -> attribute_reference
Rule 107   name -> type_conversion
Rule 108   name -> function_call
Rule 109   name -> character_literal
Rule 110   name -> indexed_component
Rule 111   slice -> name LPAREN discrete_range RPAREN
Rule 112   function_call -> name
Rule 113   function_call -> name actual_parameter_part
Rule 114   actual_parameter_part -> LPAREN parameter_association RPAREN
Rule 115   actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN
Rule 116   actual_parameter_part_loop -> COMMA parameter_association actual_parameter_part_loop
Rule 117   actual_parameter_part_loop -> COMMA parameter_association
Rule 118   parameter_association -> expression
Rule 119   parameter_association -> name
Rule 120   parameter_association -> selector_name REFASSIGN expression
Rule 121   parameter_association -> selector_name REFASSIGN name
Rule 122   selector_name -> ID
Rule 123   selector_name -> character_literal
Rule 124   graphic_character -> SPACE
Rule 125   graphic_character -> NUMBER_INT
Rule 126   graphic_character -> IDENTIFIER_LETTER_UPPER
Rule 127   graphic_character -> IDENTIFIER_LETTER_LOWER
Rule 128   character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE
Rule 129   enumeration_representation_clause -> FOR direct_name USE named_array_aggregate SEMICOLON
Rule 130   use_clause -> LPAREN USE name RPAREN
Rule 131   use_clause -> LPAREN TYPE name RPAREN
Rule 132   use_clause -> LPAREN USE name use_clause_loop RPAREN
Rule 133   use_clause -> LPAREN TYPE name use_clause_loop RPAREN
Rule 134   use_clause_loop -> COMMA name use_clause_loop
Rule 135   use_clause_loop -> COMMA name
Rule 136   discriminant_part -> identifier_list COLON name ASSIGN expression
Rule 137   incomplete_type_definition -> TYPE ID SEMICOLON
Rule 138   incomplete_type_definition -> TYPE ID discriminant_part SEMICOLON
Rule 139   basic_declaration -> incomplete_type_definition
Rule 140   basic_declaration -> number_declaration
Rule 141   basic_declaration -> subprogram_declaration
Rule 142   subprogram_declaration -> subprogram_specification SEMICOLON
Rule 143   defining_program_unit_name -> ID
Rule 144   defining_program_unit_name -> name DOT ID
Rule 145   number_declaration -> COLON CONSTANT ASSIGN expression SEMICOLON
Rule 146   identifier_list -> ID
Rule 147   identifier_list -> ID COMMA identifier_list
Rule 148   loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON
Rule 149   loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON
Rule 150   loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
Rule 151   loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
Rule 152   loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
Rule 153   loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
Rule 154   loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
Rule 155   loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
Rule 156   if_statement -> IF expression THEN sequence_of_statements if_statemant_loop
Rule 157   if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop
Rule 158   if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON
Rule 159   if_statemant_loop -> END IF SEMICOLON
Rule 160   sequence_of_statements -> statement sequence_of_statements
Rule 161   sequence_of_statements -> statement
Rule 162   statement -> simple_statement
Rule 163   statement -> compound_statement
Rule 164   compound_statement -> if_statement
Rule 165   compound_statement -> loop_statement
Rule 166   discrete_subtype_definition -> subtype_indication
Rule 167   discrete_subtype_definition -> range
Rule 168   simple_statement -> null_statement
Rule 169   simple_statement -> assignment_statement
Rule 170   simple_statement -> exit_statement
Rule 171   simple_statement -> entry_call_statement
Rule 172   simple_statement -> code_statement
Rule 173   entry_call_statement -> name SEMICOLON
Rule 174   entry_call_statement -> name actual_parameter_part SEMICOLON
Rule 175   code_statement -> qualified_expression SEMICOLON
Rule 176   exit_statement -> EXIT SEMICOLON
Rule 177   exit_statement -> EXIT name SEMICOLON
Rule 178   null_statement -> NULL
Rule 179   assignment_statement -> name ASSIGN expression SEMICOLON

Terminals, with rules where they appear

AND                  : 26 27 28 29
ARRAY                : 
ASSIGN               : 136 145 179
BEGIN                : 1 2
BODY                 : 
CASE                 : 
COLON                : 19 136 145
COMMA                : 72 73 87 88 94 116 117 134 135 147
COMMENT              : 
CONCAT               : 49
CONSTANT             : 145
DECLARE              : 
DIGITS               : 95 96
DIVIDE               : 56
DO                   : 
DOT                  : 3 22 144
DOTDOT               : 99
DOUBLEQUOTE          : 
ELSE                 : 32 33 158
ELSIF                : 157
END                  : 1 2 148 149 150 151 152 153 154 155 158 159
EQUAL                : 37
EXIT                 : 176 177
FALSE                : 
FOR                  : 16 17 129 152 153 154 155
FUNCTION             : 
GREATERTHAN          : 41
GREATERTHANEQUAL     : 42
ID                   : 3 4 15 24 25 122 137 138 143 144 146 147 152 153 154 155
IDENTIFIER_LETTER_LOWER : 127
IDENTIFIER_LETTER_UPPER : 126
IF                   : 156 158 159
IN                   : 43 44 45 46 152 153 154 155
IS                   : 1 2
LESSTHAN             : 39
LESSTHANEQUAL        : 40
LOOP                 : 148 148 149 149 150 150 151 151 152 152 153 153 154 154 155 155
LPAREN               : 18 19 20 21 25 69 70 72 87 93 94 102 111 114 115 130 131 132 133
MINUS                : 48 52
MOD                  : 57
NOT                  : 45 46
NOTEQUAL             : 38
NULL                 : 65 178
NUMBER_EXPONENT      : 63
NUMBER_FLOAT         : 62
NUMBER_INT           : 61 125
OF                   : 
OR                   : 30 31 32 33
PIPE                 : 76 89 90 91
PLUS                 : 47 51
POWER                : 60
PROCEDURE            : 5
RAISE                : 
RANGE                : 97 101 102
REFASSIGN            : 74 89 90 120 121
REM                  : 58
REPEAT               : 
RETURN               : 
REVERSE              : 154 155
RPAREN               : 18 19 20 21 25 69 70 72 87 93 94 102 111 114 115 130 131 132 133
SEMICOLON            : 1 2 16 17 129 137 138 142 145 148 149 150 151 152 153 154 155 158 159 173 174 175 176 177 179
SINGLEQUOTE          : 16 17 23 70 71 100 128 128
SPACE                : 124
STRING               : 
TASK                 : 
THEN                 : 28 29 156
TIMES                : 55
TRUE                 : 
TYPE                 : 131 133 137 138
USE                  : 16 17 129 130 132
WHILE                : 150 151
XOR                  : 34 35
error                : 

Nonterminals, with rules where they appear

actual_parameter_part : 113 174
actual_parameter_part_loop : 115 116
array_component_association : 72 72 73
assignment_statement : 169
attribute_definition_clause : 13
attribute_designator : 16 17 23
attribute_reference  : 106
basic_declaration    : 10
basic_declarative_item : 6 8
character_literal    : 109 123
code_statement       : 172
compound_statement   : 163
constraint           : 82
declarative_part     : 1 2 8 9
defining_program_unit_name : 5
designator           : 1
digits_constraint    : 84
direct_name          : 103 129
discrete_choice      : 75 76 76
discrete_choice_list : 74 76
discrete_range       : 78 93 94 94 111
discrete_subtype_definition : 152 153 154 155
discriminant_association : 87 87 88 90
discriminant_constraint : 86
discriminant_part    : 138
entry_call_statement : 171
enumeration_representation_clause : 14
exit_statement       : 170
expression           : 16 18 19 20 25 27 29 31 33 35 69 70 74 77 89 90 92 95 96 102 118 120 136 145 150 151 156 179
factor               : 54 55 55 56 56 57 57 58 58
function_call        : 108
graphic_character    : 128
identifier_list      : 136 147
if_statemant_loop    : 156 157
if_statement         : 164
incomplete_type_definition : 139
index_constraint     : 85 94
indexed_component    : 19 110
loop_statement       : 165
name                 : 3 16 17 17 18 19 20 21 21 22 23 44 46 67 70 71 81 82 100 111 112 113 119 121 130 131 132 133 134 135 136 144 149 151 153 155 173 174 177 179
named_array_aggregate : 66 71 72 129
null_statement       : 168
number_declaration   : 140
numeric_literal      : 64
parameter_association : 114 115 116 117
primary              : 59 60 60
qualified_expression : 68 175
range                : 43 45 80 97 167
range_attribute_designator : 100
range_attribute_reference : 98
range_constraint     : 83 95
relation             : 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35
representation_clause : 11
selected_component   : 105
selector_name        : 22 89 89 90 90 91 120 121
sequence_of_statements : 1 2 148 149 150 151 152 153 154 155 156 157 158 160
simple_expression    : 36 37 37 38 38 39 39 40 40 41 41 42 42 43 44 45 46 47 48 49 99 99
simple_statement     : 162
slice                : 104
statement            : 160 161
subprogram_body      : 7 9 0
subprogram_declaration : 141
subprogram_specification : 1 2 142
subtype_indication   : 79 166
term                 : 47 48 49 51 52 53 55 56 57 58
type_conversion      : 107
unaryExp             : 50
use_clause           : 12
use_clause_loop      : 132 133 134

Parsing method: LALR

state 0

    (0) S' -> . subprogram_body
    (1) subprogram_body -> . subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON
    (2) subprogram_body -> . subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON
    (5) subprogram_specification -> . PROCEDURE defining_program_unit_name

    PROCEDURE       shift and go to state 3

    subprogram_body                shift and go to state 1
    subprogram_specification       shift and go to state 2

state 1

    (0) S' -> subprogram_body .



state 2

    (1) subprogram_body -> subprogram_specification . IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON
    (2) subprogram_body -> subprogram_specification . IS declarative_part BEGIN sequence_of_statements END SEMICOLON

    IS              shift and go to state 4


state 3

    (5) subprogram_specification -> PROCEDURE . defining_program_unit_name
    (143) defining_program_unit_name -> . ID
    (144) defining_program_unit_name -> . name DOT ID
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    ID              shift and go to state 6
    SINGLEQUOTE     shift and go to state 16

    defining_program_unit_name     shift and go to state 5
    name                           shift and go to state 7
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 4

    (1) subprogram_body -> subprogram_specification IS . declarative_part BEGIN sequence_of_statements END designator SEMICOLON
    (2) subprogram_body -> subprogram_specification IS . declarative_part BEGIN sequence_of_statements END SEMICOLON
    (6) declarative_part -> . basic_declarative_item
    (7) declarative_part -> . subprogram_body
    (8) declarative_part -> . basic_declarative_item declarative_part
    (9) declarative_part -> . subprogram_body declarative_part
    (10) basic_declarative_item -> . basic_declaration
    (11) basic_declarative_item -> . representation_clause
    (12) basic_declarative_item -> . use_clause
    (1) subprogram_body -> . subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON
    (2) subprogram_body -> . subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON
    (139) basic_declaration -> . incomplete_type_definition
    (140) basic_declaration -> . number_declaration
    (141) basic_declaration -> . subprogram_declaration
    (13) representation_clause -> . attribute_definition_clause
    (14) representation_clause -> . enumeration_representation_clause
    (130) use_clause -> . LPAREN USE name RPAREN
    (131) use_clause -> . LPAREN TYPE name RPAREN
    (132) use_clause -> . LPAREN USE name use_clause_loop RPAREN
    (133) use_clause -> . LPAREN TYPE name use_clause_loop RPAREN
    (5) subprogram_specification -> . PROCEDURE defining_program_unit_name
    (137) incomplete_type_definition -> . TYPE ID SEMICOLON
    (138) incomplete_type_definition -> . TYPE ID discriminant_part SEMICOLON
    (145) number_declaration -> . COLON CONSTANT ASSIGN expression SEMICOLON
    (142) subprogram_declaration -> . subprogram_specification SEMICOLON
    (16) attribute_definition_clause -> . FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON
    (17) attribute_definition_clause -> . FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON
    (129) enumeration_representation_clause -> . FOR direct_name USE named_array_aggregate SEMICOLON

    LPAREN          shift and go to state 29
    PROCEDURE       shift and go to state 3
    TYPE            shift and go to state 30
    COLON           shift and go to state 31
    FOR             shift and go to state 32

    subprogram_specification       shift and go to state 17
    declarative_part               shift and go to state 18
    basic_declarative_item         shift and go to state 19
    subprogram_body                shift and go to state 20
    basic_declaration              shift and go to state 21
    representation_clause          shift and go to state 22
    use_clause                     shift and go to state 23
    incomplete_type_definition     shift and go to state 24
    number_declaration             shift and go to state 25
    subprogram_declaration         shift and go to state 26
    attribute_definition_clause    shift and go to state 27
    enumeration_representation_clause shift and go to state 28

state 5

    (5) subprogram_specification -> PROCEDURE defining_program_unit_name .

    IS              reduce using rule 5 (subprogram_specification -> PROCEDURE defining_program_unit_name .)
    SEMICOLON       reduce using rule 5 (subprogram_specification -> PROCEDURE defining_program_unit_name .)


state 6

    (143) defining_program_unit_name -> ID .
    (15) direct_name -> ID .

    IS              reduce using rule 143 (defining_program_unit_name -> ID .)
    SEMICOLON       reduce using rule 143 (defining_program_unit_name -> ID .)
    DOT             reduce using rule 15 (direct_name -> ID .)
    LPAREN          reduce using rule 15 (direct_name -> ID .)
    SINGLEQUOTE     reduce using rule 15 (direct_name -> ID .)


state 7

    (144) defining_program_unit_name -> name . DOT ID
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    DOT             shift and go to state 33
    LPAREN          shift and go to state 34
    SINGLEQUOTE     shift and go to state 35

  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 8

    (103) name -> direct_name .

    DOT             reduce using rule 103 (name -> direct_name .)
    LPAREN          reduce using rule 103 (name -> direct_name .)
    SINGLEQUOTE     reduce using rule 103 (name -> direct_name .)
    RPAREN          reduce using rule 103 (name -> direct_name .)
    RANGE           reduce using rule 103 (name -> direct_name .)
    DIGITS          reduce using rule 103 (name -> direct_name .)
    COMMA           reduce using rule 103 (name -> direct_name .)
    POWER           reduce using rule 103 (name -> direct_name .)
    TIMES           reduce using rule 103 (name -> direct_name .)
    DIVIDE          reduce using rule 103 (name -> direct_name .)
    MOD             reduce using rule 103 (name -> direct_name .)
    REM             reduce using rule 103 (name -> direct_name .)
    DOTDOT          reduce using rule 103 (name -> direct_name .)
    EQUAL           reduce using rule 103 (name -> direct_name .)
    NOTEQUAL        reduce using rule 103 (name -> direct_name .)
    LESSTHAN        reduce using rule 103 (name -> direct_name .)
    LESSTHANEQUAL   reduce using rule 103 (name -> direct_name .)
    GREATERTHAN     reduce using rule 103 (name -> direct_name .)
    GREATERTHANEQUAL reduce using rule 103 (name -> direct_name .)
    IN              reduce using rule 103 (name -> direct_name .)
    NOT             reduce using rule 103 (name -> direct_name .)
    PLUS            reduce using rule 103 (name -> direct_name .)
    MINUS           reduce using rule 103 (name -> direct_name .)
    CONCAT          reduce using rule 103 (name -> direct_name .)
    AND             reduce using rule 103 (name -> direct_name .)
    OR              reduce using rule 103 (name -> direct_name .)
    XOR             reduce using rule 103 (name -> direct_name .)
    ASSIGN          reduce using rule 103 (name -> direct_name .)
    SEMICOLON       reduce using rule 103 (name -> direct_name .)
    PIPE            reduce using rule 103 (name -> direct_name .)
    REFASSIGN       reduce using rule 103 (name -> direct_name .)
    NULL            reduce using rule 103 (name -> direct_name .)
    NUMBER_INT      reduce using rule 103 (name -> direct_name .)
    NUMBER_FLOAT    reduce using rule 103 (name -> direct_name .)
    NUMBER_EXPONENT reduce using rule 103 (name -> direct_name .)
    ID              reduce using rule 103 (name -> direct_name .)
    COLON           reduce using rule 103 (name -> direct_name .)
    THEN            reduce using rule 103 (name -> direct_name .)
    LOOP            reduce using rule 103 (name -> direct_name .)


state 9

    (104) name -> slice .

    DOT             reduce using rule 104 (name -> slice .)
    LPAREN          reduce using rule 104 (name -> slice .)
    SINGLEQUOTE     reduce using rule 104 (name -> slice .)
    RPAREN          reduce using rule 104 (name -> slice .)
    RANGE           reduce using rule 104 (name -> slice .)
    DIGITS          reduce using rule 104 (name -> slice .)
    COMMA           reduce using rule 104 (name -> slice .)
    POWER           reduce using rule 104 (name -> slice .)
    TIMES           reduce using rule 104 (name -> slice .)
    DIVIDE          reduce using rule 104 (name -> slice .)
    MOD             reduce using rule 104 (name -> slice .)
    REM             reduce using rule 104 (name -> slice .)
    DOTDOT          reduce using rule 104 (name -> slice .)
    EQUAL           reduce using rule 104 (name -> slice .)
    NOTEQUAL        reduce using rule 104 (name -> slice .)
    LESSTHAN        reduce using rule 104 (name -> slice .)
    LESSTHANEQUAL   reduce using rule 104 (name -> slice .)
    GREATERTHAN     reduce using rule 104 (name -> slice .)
    GREATERTHANEQUAL reduce using rule 104 (name -> slice .)
    IN              reduce using rule 104 (name -> slice .)
    NOT             reduce using rule 104 (name -> slice .)
    PLUS            reduce using rule 104 (name -> slice .)
    MINUS           reduce using rule 104 (name -> slice .)
    CONCAT          reduce using rule 104 (name -> slice .)
    AND             reduce using rule 104 (name -> slice .)
    OR              reduce using rule 104 (name -> slice .)
    XOR             reduce using rule 104 (name -> slice .)
    ASSIGN          reduce using rule 104 (name -> slice .)
    SEMICOLON       reduce using rule 104 (name -> slice .)
    PIPE            reduce using rule 104 (name -> slice .)
    REFASSIGN       reduce using rule 104 (name -> slice .)
    NULL            reduce using rule 104 (name -> slice .)
    NUMBER_INT      reduce using rule 104 (name -> slice .)
    NUMBER_FLOAT    reduce using rule 104 (name -> slice .)
    NUMBER_EXPONENT reduce using rule 104 (name -> slice .)
    ID              reduce using rule 104 (name -> slice .)
    COLON           reduce using rule 104 (name -> slice .)
    THEN            reduce using rule 104 (name -> slice .)
    LOOP            reduce using rule 104 (name -> slice .)


state 10

    (105) name -> selected_component .

    DOT             reduce using rule 105 (name -> selected_component .)
    LPAREN          reduce using rule 105 (name -> selected_component .)
    SINGLEQUOTE     reduce using rule 105 (name -> selected_component .)
    RPAREN          reduce using rule 105 (name -> selected_component .)
    RANGE           reduce using rule 105 (name -> selected_component .)
    DIGITS          reduce using rule 105 (name -> selected_component .)
    COMMA           reduce using rule 105 (name -> selected_component .)
    POWER           reduce using rule 105 (name -> selected_component .)
    TIMES           reduce using rule 105 (name -> selected_component .)
    DIVIDE          reduce using rule 105 (name -> selected_component .)
    MOD             reduce using rule 105 (name -> selected_component .)
    REM             reduce using rule 105 (name -> selected_component .)
    DOTDOT          reduce using rule 105 (name -> selected_component .)
    EQUAL           reduce using rule 105 (name -> selected_component .)
    NOTEQUAL        reduce using rule 105 (name -> selected_component .)
    LESSTHAN        reduce using rule 105 (name -> selected_component .)
    LESSTHANEQUAL   reduce using rule 105 (name -> selected_component .)
    GREATERTHAN     reduce using rule 105 (name -> selected_component .)
    GREATERTHANEQUAL reduce using rule 105 (name -> selected_component .)
    IN              reduce using rule 105 (name -> selected_component .)
    NOT             reduce using rule 105 (name -> selected_component .)
    PLUS            reduce using rule 105 (name -> selected_component .)
    MINUS           reduce using rule 105 (name -> selected_component .)
    CONCAT          reduce using rule 105 (name -> selected_component .)
    AND             reduce using rule 105 (name -> selected_component .)
    OR              reduce using rule 105 (name -> selected_component .)
    XOR             reduce using rule 105 (name -> selected_component .)
    ASSIGN          reduce using rule 105 (name -> selected_component .)
    SEMICOLON       reduce using rule 105 (name -> selected_component .)
    PIPE            reduce using rule 105 (name -> selected_component .)
    REFASSIGN       reduce using rule 105 (name -> selected_component .)
    NULL            reduce using rule 105 (name -> selected_component .)
    NUMBER_INT      reduce using rule 105 (name -> selected_component .)
    NUMBER_FLOAT    reduce using rule 105 (name -> selected_component .)
    NUMBER_EXPONENT reduce using rule 105 (name -> selected_component .)
    ID              reduce using rule 105 (name -> selected_component .)
    COLON           reduce using rule 105 (name -> selected_component .)
    THEN            reduce using rule 105 (name -> selected_component .)
    LOOP            reduce using rule 105 (name -> selected_component .)


state 11

    (106) name -> attribute_reference .

    DOT             reduce using rule 106 (name -> attribute_reference .)
    LPAREN          reduce using rule 106 (name -> attribute_reference .)
    SINGLEQUOTE     reduce using rule 106 (name -> attribute_reference .)
    RPAREN          reduce using rule 106 (name -> attribute_reference .)
    RANGE           reduce using rule 106 (name -> attribute_reference .)
    DIGITS          reduce using rule 106 (name -> attribute_reference .)
    COMMA           reduce using rule 106 (name -> attribute_reference .)
    POWER           reduce using rule 106 (name -> attribute_reference .)
    TIMES           reduce using rule 106 (name -> attribute_reference .)
    DIVIDE          reduce using rule 106 (name -> attribute_reference .)
    MOD             reduce using rule 106 (name -> attribute_reference .)
    REM             reduce using rule 106 (name -> attribute_reference .)
    DOTDOT          reduce using rule 106 (name -> attribute_reference .)
    EQUAL           reduce using rule 106 (name -> attribute_reference .)
    NOTEQUAL        reduce using rule 106 (name -> attribute_reference .)
    LESSTHAN        reduce using rule 106 (name -> attribute_reference .)
    LESSTHANEQUAL   reduce using rule 106 (name -> attribute_reference .)
    GREATERTHAN     reduce using rule 106 (name -> attribute_reference .)
    GREATERTHANEQUAL reduce using rule 106 (name -> attribute_reference .)
    IN              reduce using rule 106 (name -> attribute_reference .)
    NOT             reduce using rule 106 (name -> attribute_reference .)
    PLUS            reduce using rule 106 (name -> attribute_reference .)
    MINUS           reduce using rule 106 (name -> attribute_reference .)
    CONCAT          reduce using rule 106 (name -> attribute_reference .)
    AND             reduce using rule 106 (name -> attribute_reference .)
    OR              reduce using rule 106 (name -> attribute_reference .)
    XOR             reduce using rule 106 (name -> attribute_reference .)
    ASSIGN          reduce using rule 106 (name -> attribute_reference .)
    SEMICOLON       reduce using rule 106 (name -> attribute_reference .)
    PIPE            reduce using rule 106 (name -> attribute_reference .)
    REFASSIGN       reduce using rule 106 (name -> attribute_reference .)
    NULL            reduce using rule 106 (name -> attribute_reference .)
    NUMBER_INT      reduce using rule 106 (name -> attribute_reference .)
    NUMBER_FLOAT    reduce using rule 106 (name -> attribute_reference .)
    NUMBER_EXPONENT reduce using rule 106 (name -> attribute_reference .)
    ID              reduce using rule 106 (name -> attribute_reference .)
    COLON           reduce using rule 106 (name -> attribute_reference .)
    THEN            reduce using rule 106 (name -> attribute_reference .)
    LOOP            reduce using rule 106 (name -> attribute_reference .)


state 12

    (107) name -> type_conversion .

    DOT             reduce using rule 107 (name -> type_conversion .)
    LPAREN          reduce using rule 107 (name -> type_conversion .)
    SINGLEQUOTE     reduce using rule 107 (name -> type_conversion .)
    RPAREN          reduce using rule 107 (name -> type_conversion .)
    RANGE           reduce using rule 107 (name -> type_conversion .)
    DIGITS          reduce using rule 107 (name -> type_conversion .)
    COMMA           reduce using rule 107 (name -> type_conversion .)
    POWER           reduce using rule 107 (name -> type_conversion .)
    TIMES           reduce using rule 107 (name -> type_conversion .)
    DIVIDE          reduce using rule 107 (name -> type_conversion .)
    MOD             reduce using rule 107 (name -> type_conversion .)
    REM             reduce using rule 107 (name -> type_conversion .)
    DOTDOT          reduce using rule 107 (name -> type_conversion .)
    EQUAL           reduce using rule 107 (name -> type_conversion .)
    NOTEQUAL        reduce using rule 107 (name -> type_conversion .)
    LESSTHAN        reduce using rule 107 (name -> type_conversion .)
    LESSTHANEQUAL   reduce using rule 107 (name -> type_conversion .)
    GREATERTHAN     reduce using rule 107 (name -> type_conversion .)
    GREATERTHANEQUAL reduce using rule 107 (name -> type_conversion .)
    IN              reduce using rule 107 (name -> type_conversion .)
    NOT             reduce using rule 107 (name -> type_conversion .)
    PLUS            reduce using rule 107 (name -> type_conversion .)
    MINUS           reduce using rule 107 (name -> type_conversion .)
    CONCAT          reduce using rule 107 (name -> type_conversion .)
    AND             reduce using rule 107 (name -> type_conversion .)
    OR              reduce using rule 107 (name -> type_conversion .)
    XOR             reduce using rule 107 (name -> type_conversion .)
    ASSIGN          reduce using rule 107 (name -> type_conversion .)
    SEMICOLON       reduce using rule 107 (name -> type_conversion .)
    PIPE            reduce using rule 107 (name -> type_conversion .)
    REFASSIGN       reduce using rule 107 (name -> type_conversion .)
    NULL            reduce using rule 107 (name -> type_conversion .)
    NUMBER_INT      reduce using rule 107 (name -> type_conversion .)
    NUMBER_FLOAT    reduce using rule 107 (name -> type_conversion .)
    NUMBER_EXPONENT reduce using rule 107 (name -> type_conversion .)
    ID              reduce using rule 107 (name -> type_conversion .)
    COLON           reduce using rule 107 (name -> type_conversion .)
    THEN            reduce using rule 107 (name -> type_conversion .)
    LOOP            reduce using rule 107 (name -> type_conversion .)


state 13

    (108) name -> function_call .

    DOT             reduce using rule 108 (name -> function_call .)
    LPAREN          reduce using rule 108 (name -> function_call .)
    SINGLEQUOTE     reduce using rule 108 (name -> function_call .)
    RPAREN          reduce using rule 108 (name -> function_call .)
    RANGE           reduce using rule 108 (name -> function_call .)
    DIGITS          reduce using rule 108 (name -> function_call .)
    COMMA           reduce using rule 108 (name -> function_call .)
    POWER           reduce using rule 108 (name -> function_call .)
    TIMES           reduce using rule 108 (name -> function_call .)
    DIVIDE          reduce using rule 108 (name -> function_call .)
    MOD             reduce using rule 108 (name -> function_call .)
    REM             reduce using rule 108 (name -> function_call .)
    DOTDOT          reduce using rule 108 (name -> function_call .)
    EQUAL           reduce using rule 108 (name -> function_call .)
    NOTEQUAL        reduce using rule 108 (name -> function_call .)
    LESSTHAN        reduce using rule 108 (name -> function_call .)
    LESSTHANEQUAL   reduce using rule 108 (name -> function_call .)
    GREATERTHAN     reduce using rule 108 (name -> function_call .)
    GREATERTHANEQUAL reduce using rule 108 (name -> function_call .)
    IN              reduce using rule 108 (name -> function_call .)
    NOT             reduce using rule 108 (name -> function_call .)
    PLUS            reduce using rule 108 (name -> function_call .)
    MINUS           reduce using rule 108 (name -> function_call .)
    CONCAT          reduce using rule 108 (name -> function_call .)
    AND             reduce using rule 108 (name -> function_call .)
    OR              reduce using rule 108 (name -> function_call .)
    XOR             reduce using rule 108 (name -> function_call .)
    ASSIGN          reduce using rule 108 (name -> function_call .)
    SEMICOLON       reduce using rule 108 (name -> function_call .)
    PIPE            reduce using rule 108 (name -> function_call .)
    REFASSIGN       reduce using rule 108 (name -> function_call .)
    NULL            reduce using rule 108 (name -> function_call .)
    NUMBER_INT      reduce using rule 108 (name -> function_call .)
    NUMBER_FLOAT    reduce using rule 108 (name -> function_call .)
    NUMBER_EXPONENT reduce using rule 108 (name -> function_call .)
    ID              reduce using rule 108 (name -> function_call .)
    COLON           reduce using rule 108 (name -> function_call .)
    THEN            reduce using rule 108 (name -> function_call .)
    LOOP            reduce using rule 108 (name -> function_call .)


state 14

    (109) name -> character_literal .

    DOT             reduce using rule 109 (name -> character_literal .)
    LPAREN          reduce using rule 109 (name -> character_literal .)
    SINGLEQUOTE     reduce using rule 109 (name -> character_literal .)
    ASSIGN          reduce using rule 109 (name -> character_literal .)
    SEMICOLON       reduce using rule 109 (name -> character_literal .)
    RPAREN          reduce using rule 109 (name -> character_literal .)
    COMMA           reduce using rule 109 (name -> character_literal .)
    RANGE           reduce using rule 109 (name -> character_literal .)
    DIGITS          reduce using rule 109 (name -> character_literal .)
    PIPE            reduce using rule 109 (name -> character_literal .)
    REFASSIGN       reduce using rule 109 (name -> character_literal .)
    POWER           reduce using rule 109 (name -> character_literal .)
    TIMES           reduce using rule 109 (name -> character_literal .)
    DIVIDE          reduce using rule 109 (name -> character_literal .)
    MOD             reduce using rule 109 (name -> character_literal .)
    REM             reduce using rule 109 (name -> character_literal .)
    EQUAL           reduce using rule 109 (name -> character_literal .)
    NOTEQUAL        reduce using rule 109 (name -> character_literal .)
    LESSTHAN        reduce using rule 109 (name -> character_literal .)
    LESSTHANEQUAL   reduce using rule 109 (name -> character_literal .)
    GREATERTHAN     reduce using rule 109 (name -> character_literal .)
    GREATERTHANEQUAL reduce using rule 109 (name -> character_literal .)
    IN              reduce using rule 109 (name -> character_literal .)
    NOT             reduce using rule 109 (name -> character_literal .)
    PLUS            reduce using rule 109 (name -> character_literal .)
    MINUS           reduce using rule 109 (name -> character_literal .)
    CONCAT          reduce using rule 109 (name -> character_literal .)
    DOTDOT          reduce using rule 109 (name -> character_literal .)
    AND             reduce using rule 109 (name -> character_literal .)
    OR              reduce using rule 109 (name -> character_literal .)
    XOR             reduce using rule 109 (name -> character_literal .)
    NULL            reduce using rule 109 (name -> character_literal .)
    NUMBER_INT      reduce using rule 109 (name -> character_literal .)
    NUMBER_FLOAT    reduce using rule 109 (name -> character_literal .)
    NUMBER_EXPONENT reduce using rule 109 (name -> character_literal .)
    ID              reduce using rule 109 (name -> character_literal .)
    COLON           reduce using rule 109 (name -> character_literal .)
    THEN            reduce using rule 109 (name -> character_literal .)
    LOOP            reduce using rule 109 (name -> character_literal .)


state 15

    (110) name -> indexed_component .

    DOT             reduce using rule 110 (name -> indexed_component .)
    LPAREN          reduce using rule 110 (name -> indexed_component .)
    SINGLEQUOTE     reduce using rule 110 (name -> indexed_component .)
    RPAREN          reduce using rule 110 (name -> indexed_component .)
    RANGE           reduce using rule 110 (name -> indexed_component .)
    DIGITS          reduce using rule 110 (name -> indexed_component .)
    COMMA           reduce using rule 110 (name -> indexed_component .)
    POWER           reduce using rule 110 (name -> indexed_component .)
    TIMES           reduce using rule 110 (name -> indexed_component .)
    DIVIDE          reduce using rule 110 (name -> indexed_component .)
    MOD             reduce using rule 110 (name -> indexed_component .)
    REM             reduce using rule 110 (name -> indexed_component .)
    DOTDOT          reduce using rule 110 (name -> indexed_component .)
    EQUAL           reduce using rule 110 (name -> indexed_component .)
    NOTEQUAL        reduce using rule 110 (name -> indexed_component .)
    LESSTHAN        reduce using rule 110 (name -> indexed_component .)
    LESSTHANEQUAL   reduce using rule 110 (name -> indexed_component .)
    GREATERTHAN     reduce using rule 110 (name -> indexed_component .)
    GREATERTHANEQUAL reduce using rule 110 (name -> indexed_component .)
    IN              reduce using rule 110 (name -> indexed_component .)
    NOT             reduce using rule 110 (name -> indexed_component .)
    PLUS            reduce using rule 110 (name -> indexed_component .)
    MINUS           reduce using rule 110 (name -> indexed_component .)
    CONCAT          reduce using rule 110 (name -> indexed_component .)
    AND             reduce using rule 110 (name -> indexed_component .)
    OR              reduce using rule 110 (name -> indexed_component .)
    XOR             reduce using rule 110 (name -> indexed_component .)
    ASSIGN          reduce using rule 110 (name -> indexed_component .)
    SEMICOLON       reduce using rule 110 (name -> indexed_component .)
    PIPE            reduce using rule 110 (name -> indexed_component .)
    REFASSIGN       reduce using rule 110 (name -> indexed_component .)
    NULL            reduce using rule 110 (name -> indexed_component .)
    NUMBER_INT      reduce using rule 110 (name -> indexed_component .)
    NUMBER_FLOAT    reduce using rule 110 (name -> indexed_component .)
    NUMBER_EXPONENT reduce using rule 110 (name -> indexed_component .)
    ID              reduce using rule 110 (name -> indexed_component .)
    COLON           reduce using rule 110 (name -> indexed_component .)
    THEN            reduce using rule 110 (name -> indexed_component .)
    LOOP            reduce using rule 110 (name -> indexed_component .)


state 16

    (128) character_literal -> SINGLEQUOTE . graphic_character SINGLEQUOTE
    (124) graphic_character -> . SPACE
    (125) graphic_character -> . NUMBER_INT
    (126) graphic_character -> . IDENTIFIER_LETTER_UPPER
    (127) graphic_character -> . IDENTIFIER_LETTER_LOWER

    SPACE           shift and go to state 38
    NUMBER_INT      shift and go to state 39
    IDENTIFIER_LETTER_UPPER shift and go to state 40
    IDENTIFIER_LETTER_LOWER shift and go to state 41

    graphic_character              shift and go to state 37

state 17

    (1) subprogram_body -> subprogram_specification . IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON
    (2) subprogram_body -> subprogram_specification . IS declarative_part BEGIN sequence_of_statements END SEMICOLON
    (142) subprogram_declaration -> subprogram_specification . SEMICOLON

    IS              shift and go to state 4
    SEMICOLON       shift and go to state 42


state 18

    (1) subprogram_body -> subprogram_specification IS declarative_part . BEGIN sequence_of_statements END designator SEMICOLON
    (2) subprogram_body -> subprogram_specification IS declarative_part . BEGIN sequence_of_statements END SEMICOLON

    BEGIN           shift and go to state 43


state 19

    (6) declarative_part -> basic_declarative_item .
    (8) declarative_part -> basic_declarative_item . declarative_part
    (6) declarative_part -> . basic_declarative_item
    (7) declarative_part -> . subprogram_body
    (8) declarative_part -> . basic_declarative_item declarative_part
    (9) declarative_part -> . subprogram_body declarative_part
    (10) basic_declarative_item -> . basic_declaration
    (11) basic_declarative_item -> . representation_clause
    (12) basic_declarative_item -> . use_clause
    (1) subprogram_body -> . subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON
    (2) subprogram_body -> . subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON
    (139) basic_declaration -> . incomplete_type_definition
    (140) basic_declaration -> . number_declaration
    (141) basic_declaration -> . subprogram_declaration
    (13) representation_clause -> . attribute_definition_clause
    (14) representation_clause -> . enumeration_representation_clause
    (130) use_clause -> . LPAREN USE name RPAREN
    (131) use_clause -> . LPAREN TYPE name RPAREN
    (132) use_clause -> . LPAREN USE name use_clause_loop RPAREN
    (133) use_clause -> . LPAREN TYPE name use_clause_loop RPAREN
    (5) subprogram_specification -> . PROCEDURE defining_program_unit_name
    (137) incomplete_type_definition -> . TYPE ID SEMICOLON
    (138) incomplete_type_definition -> . TYPE ID discriminant_part SEMICOLON
    (145) number_declaration -> . COLON CONSTANT ASSIGN expression SEMICOLON
    (142) subprogram_declaration -> . subprogram_specification SEMICOLON
    (16) attribute_definition_clause -> . FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON
    (17) attribute_definition_clause -> . FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON
    (129) enumeration_representation_clause -> . FOR direct_name USE named_array_aggregate SEMICOLON

    BEGIN           reduce using rule 6 (declarative_part -> basic_declarative_item .)
    LPAREN          shift and go to state 29
    PROCEDURE       shift and go to state 3
    TYPE            shift and go to state 30
    COLON           shift and go to state 31
    FOR             shift and go to state 32

    basic_declarative_item         shift and go to state 19
    declarative_part               shift and go to state 44
    subprogram_body                shift and go to state 20
    basic_declaration              shift and go to state 21
    representation_clause          shift and go to state 22
    use_clause                     shift and go to state 23
    subprogram_specification       shift and go to state 17
    incomplete_type_definition     shift and go to state 24
    number_declaration             shift and go to state 25
    subprogram_declaration         shift and go to state 26
    attribute_definition_clause    shift and go to state 27
    enumeration_representation_clause shift and go to state 28

state 20

    (7) declarative_part -> subprogram_body .
    (9) declarative_part -> subprogram_body . declarative_part
    (6) declarative_part -> . basic_declarative_item
    (7) declarative_part -> . subprogram_body
    (8) declarative_part -> . basic_declarative_item declarative_part
    (9) declarative_part -> . subprogram_body declarative_part
    (10) basic_declarative_item -> . basic_declaration
    (11) basic_declarative_item -> . representation_clause
    (12) basic_declarative_item -> . use_clause
    (1) subprogram_body -> . subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON
    (2) subprogram_body -> . subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON
    (139) basic_declaration -> . incomplete_type_definition
    (140) basic_declaration -> . number_declaration
    (141) basic_declaration -> . subprogram_declaration
    (13) representation_clause -> . attribute_definition_clause
    (14) representation_clause -> . enumeration_representation_clause
    (130) use_clause -> . LPAREN USE name RPAREN
    (131) use_clause -> . LPAREN TYPE name RPAREN
    (132) use_clause -> . LPAREN USE name use_clause_loop RPAREN
    (133) use_clause -> . LPAREN TYPE name use_clause_loop RPAREN
    (5) subprogram_specification -> . PROCEDURE defining_program_unit_name
    (137) incomplete_type_definition -> . TYPE ID SEMICOLON
    (138) incomplete_type_definition -> . TYPE ID discriminant_part SEMICOLON
    (145) number_declaration -> . COLON CONSTANT ASSIGN expression SEMICOLON
    (142) subprogram_declaration -> . subprogram_specification SEMICOLON
    (16) attribute_definition_clause -> . FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON
    (17) attribute_definition_clause -> . FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON
    (129) enumeration_representation_clause -> . FOR direct_name USE named_array_aggregate SEMICOLON

    BEGIN           reduce using rule 7 (declarative_part -> subprogram_body .)
    LPAREN          shift and go to state 29
    PROCEDURE       shift and go to state 3
    TYPE            shift and go to state 30
    COLON           shift and go to state 31
    FOR             shift and go to state 32

    subprogram_body                shift and go to state 20
    declarative_part               shift and go to state 45
    basic_declarative_item         shift and go to state 19
    basic_declaration              shift and go to state 21
    representation_clause          shift and go to state 22
    use_clause                     shift and go to state 23
    subprogram_specification       shift and go to state 17
    incomplete_type_definition     shift and go to state 24
    number_declaration             shift and go to state 25
    subprogram_declaration         shift and go to state 26
    attribute_definition_clause    shift and go to state 27
    enumeration_representation_clause shift and go to state 28

state 21

    (10) basic_declarative_item -> basic_declaration .

    LPAREN          reduce using rule 10 (basic_declarative_item -> basic_declaration .)
    PROCEDURE       reduce using rule 10 (basic_declarative_item -> basic_declaration .)
    TYPE            reduce using rule 10 (basic_declarative_item -> basic_declaration .)
    COLON           reduce using rule 10 (basic_declarative_item -> basic_declaration .)
    FOR             reduce using rule 10 (basic_declarative_item -> basic_declaration .)
    BEGIN           reduce using rule 10 (basic_declarative_item -> basic_declaration .)


state 22

    (11) basic_declarative_item -> representation_clause .

    LPAREN          reduce using rule 11 (basic_declarative_item -> representation_clause .)
    PROCEDURE       reduce using rule 11 (basic_declarative_item -> representation_clause .)
    TYPE            reduce using rule 11 (basic_declarative_item -> representation_clause .)
    COLON           reduce using rule 11 (basic_declarative_item -> representation_clause .)
    FOR             reduce using rule 11 (basic_declarative_item -> representation_clause .)
    BEGIN           reduce using rule 11 (basic_declarative_item -> representation_clause .)


state 23

    (12) basic_declarative_item -> use_clause .

    LPAREN          reduce using rule 12 (basic_declarative_item -> use_clause .)
    PROCEDURE       reduce using rule 12 (basic_declarative_item -> use_clause .)
    TYPE            reduce using rule 12 (basic_declarative_item -> use_clause .)
    COLON           reduce using rule 12 (basic_declarative_item -> use_clause .)
    FOR             reduce using rule 12 (basic_declarative_item -> use_clause .)
    BEGIN           reduce using rule 12 (basic_declarative_item -> use_clause .)


state 24

    (139) basic_declaration -> incomplete_type_definition .

    LPAREN          reduce using rule 139 (basic_declaration -> incomplete_type_definition .)
    PROCEDURE       reduce using rule 139 (basic_declaration -> incomplete_type_definition .)
    TYPE            reduce using rule 139 (basic_declaration -> incomplete_type_definition .)
    COLON           reduce using rule 139 (basic_declaration -> incomplete_type_definition .)
    FOR             reduce using rule 139 (basic_declaration -> incomplete_type_definition .)
    BEGIN           reduce using rule 139 (basic_declaration -> incomplete_type_definition .)


state 25

    (140) basic_declaration -> number_declaration .

    LPAREN          reduce using rule 140 (basic_declaration -> number_declaration .)
    PROCEDURE       reduce using rule 140 (basic_declaration -> number_declaration .)
    TYPE            reduce using rule 140 (basic_declaration -> number_declaration .)
    COLON           reduce using rule 140 (basic_declaration -> number_declaration .)
    FOR             reduce using rule 140 (basic_declaration -> number_declaration .)
    BEGIN           reduce using rule 140 (basic_declaration -> number_declaration .)


state 26

    (141) basic_declaration -> subprogram_declaration .

    LPAREN          reduce using rule 141 (basic_declaration -> subprogram_declaration .)
    PROCEDURE       reduce using rule 141 (basic_declaration -> subprogram_declaration .)
    TYPE            reduce using rule 141 (basic_declaration -> subprogram_declaration .)
    COLON           reduce using rule 141 (basic_declaration -> subprogram_declaration .)
    FOR             reduce using rule 141 (basic_declaration -> subprogram_declaration .)
    BEGIN           reduce using rule 141 (basic_declaration -> subprogram_declaration .)


state 27

    (13) representation_clause -> attribute_definition_clause .

    LPAREN          reduce using rule 13 (representation_clause -> attribute_definition_clause .)
    PROCEDURE       reduce using rule 13 (representation_clause -> attribute_definition_clause .)
    TYPE            reduce using rule 13 (representation_clause -> attribute_definition_clause .)
    COLON           reduce using rule 13 (representation_clause -> attribute_definition_clause .)
    FOR             reduce using rule 13 (representation_clause -> attribute_definition_clause .)
    BEGIN           reduce using rule 13 (representation_clause -> attribute_definition_clause .)


state 28

    (14) representation_clause -> enumeration_representation_clause .

    LPAREN          reduce using rule 14 (representation_clause -> enumeration_representation_clause .)
    PROCEDURE       reduce using rule 14 (representation_clause -> enumeration_representation_clause .)
    TYPE            reduce using rule 14 (representation_clause -> enumeration_representation_clause .)
    COLON           reduce using rule 14 (representation_clause -> enumeration_representation_clause .)
    FOR             reduce using rule 14 (representation_clause -> enumeration_representation_clause .)
    BEGIN           reduce using rule 14 (representation_clause -> enumeration_representation_clause .)


state 29

    (130) use_clause -> LPAREN . USE name RPAREN
    (131) use_clause -> LPAREN . TYPE name RPAREN
    (132) use_clause -> LPAREN . USE name use_clause_loop RPAREN
    (133) use_clause -> LPAREN . TYPE name use_clause_loop RPAREN

    USE             shift and go to state 46
    TYPE            shift and go to state 47


state 30

    (137) incomplete_type_definition -> TYPE . ID SEMICOLON
    (138) incomplete_type_definition -> TYPE . ID discriminant_part SEMICOLON

    ID              shift and go to state 48


state 31

    (145) number_declaration -> COLON . CONSTANT ASSIGN expression SEMICOLON

    CONSTANT        shift and go to state 49


state 32

    (16) attribute_definition_clause -> FOR . name SINGLEQUOTE attribute_designator USE expression SEMICOLON
    (17) attribute_definition_clause -> FOR . name SINGLEQUOTE attribute_designator USE name SEMICOLON
    (129) enumeration_representation_clause -> FOR . direct_name USE named_array_aggregate SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 50
    direct_name                    shift and go to state 51
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 33

    (144) defining_program_unit_name -> name DOT . ID
    (22) selected_component -> name DOT . selector_name
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE

    ID              shift and go to state 53
    SINGLEQUOTE     shift and go to state 16

    selector_name                  shift and go to state 54
    character_literal              shift and go to state 55

state 34

    (111) slice -> name LPAREN . discrete_range RPAREN
    (20) type_conversion -> name LPAREN . expression RPAREN
    (21) type_conversion -> name LPAREN . name RPAREN
    (18) indexed_component -> name LPAREN . expression RPAREN
    (19) indexed_component -> name LPAREN . expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> LPAREN . parameter_association RPAREN
    (115) actual_parameter_part -> LPAREN . parameter_association actual_parameter_part_loop RPAREN
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (118) parameter_association -> . expression
    (119) parameter_association -> . name
    (120) parameter_association -> . selector_name REFASSIGN expression
    (121) parameter_association -> . selector_name REFASSIGN name
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 68
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    name                           shift and go to state 56
    discrete_range                 shift and go to state 58
    expression                     shift and go to state 59
    indexed_component              shift and go to state 15
    parameter_association          shift and go to state 60
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    relation                       shift and go to state 63
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 64
    selector_name                  shift and go to state 65
    range_attribute_reference      shift and go to state 66
    simple_expression              shift and go to state 67
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 35

    (23) attribute_reference -> name SINGLEQUOTE . attribute_designator
    (24) attribute_designator -> . ID
    (25) attribute_designator -> . ID LPAREN expression RPAREN

    ID              shift and go to state 84

    attribute_designator           shift and go to state 83

state 36

    (113) function_call -> name actual_parameter_part .

    DOT             reduce using rule 113 (function_call -> name actual_parameter_part .)
    LPAREN          reduce using rule 113 (function_call -> name actual_parameter_part .)
    SINGLEQUOTE     reduce using rule 113 (function_call -> name actual_parameter_part .)
    RPAREN          reduce using rule 113 (function_call -> name actual_parameter_part .)
    RANGE           reduce using rule 113 (function_call -> name actual_parameter_part .)
    DIGITS          reduce using rule 113 (function_call -> name actual_parameter_part .)
    COMMA           reduce using rule 113 (function_call -> name actual_parameter_part .)
    POWER           reduce using rule 113 (function_call -> name actual_parameter_part .)
    TIMES           reduce using rule 113 (function_call -> name actual_parameter_part .)
    DIVIDE          reduce using rule 113 (function_call -> name actual_parameter_part .)
    MOD             reduce using rule 113 (function_call -> name actual_parameter_part .)
    REM             reduce using rule 113 (function_call -> name actual_parameter_part .)
    DOTDOT          reduce using rule 113 (function_call -> name actual_parameter_part .)
    EQUAL           reduce using rule 113 (function_call -> name actual_parameter_part .)
    NOTEQUAL        reduce using rule 113 (function_call -> name actual_parameter_part .)
    LESSTHAN        reduce using rule 113 (function_call -> name actual_parameter_part .)
    LESSTHANEQUAL   reduce using rule 113 (function_call -> name actual_parameter_part .)
    GREATERTHAN     reduce using rule 113 (function_call -> name actual_parameter_part .)
    GREATERTHANEQUAL reduce using rule 113 (function_call -> name actual_parameter_part .)
    IN              reduce using rule 113 (function_call -> name actual_parameter_part .)
    NOT             reduce using rule 113 (function_call -> name actual_parameter_part .)
    PLUS            reduce using rule 113 (function_call -> name actual_parameter_part .)
    MINUS           reduce using rule 113 (function_call -> name actual_parameter_part .)
    CONCAT          reduce using rule 113 (function_call -> name actual_parameter_part .)
    AND             reduce using rule 113 (function_call -> name actual_parameter_part .)
    OR              reduce using rule 113 (function_call -> name actual_parameter_part .)
    XOR             reduce using rule 113 (function_call -> name actual_parameter_part .)
    PIPE            reduce using rule 113 (function_call -> name actual_parameter_part .)
    REFASSIGN       reduce using rule 113 (function_call -> name actual_parameter_part .)
    NULL            reduce using rule 113 (function_call -> name actual_parameter_part .)
    NUMBER_INT      reduce using rule 113 (function_call -> name actual_parameter_part .)
    NUMBER_FLOAT    reduce using rule 113 (function_call -> name actual_parameter_part .)
    NUMBER_EXPONENT reduce using rule 113 (function_call -> name actual_parameter_part .)
    ID              reduce using rule 113 (function_call -> name actual_parameter_part .)
    COLON           reduce using rule 113 (function_call -> name actual_parameter_part .)
    THEN            reduce using rule 113 (function_call -> name actual_parameter_part .)
    LOOP            reduce using rule 113 (function_call -> name actual_parameter_part .)
    SEMICOLON       reduce using rule 113 (function_call -> name actual_parameter_part .)
    ASSIGN          reduce using rule 113 (function_call -> name actual_parameter_part .)


state 37

    (128) character_literal -> SINGLEQUOTE graphic_character . SINGLEQUOTE

    SINGLEQUOTE     shift and go to state 85


state 38

    (124) graphic_character -> SPACE .

    SINGLEQUOTE     reduce using rule 124 (graphic_character -> SPACE .)


state 39

    (125) graphic_character -> NUMBER_INT .

    SINGLEQUOTE     reduce using rule 125 (graphic_character -> NUMBER_INT .)


state 40

    (126) graphic_character -> IDENTIFIER_LETTER_UPPER .

    SINGLEQUOTE     reduce using rule 126 (graphic_character -> IDENTIFIER_LETTER_UPPER .)


state 41

    (127) graphic_character -> IDENTIFIER_LETTER_LOWER .

    SINGLEQUOTE     reduce using rule 127 (graphic_character -> IDENTIFIER_LETTER_LOWER .)


state 42

    (142) subprogram_declaration -> subprogram_specification SEMICOLON .

    LPAREN          reduce using rule 142 (subprogram_declaration -> subprogram_specification SEMICOLON .)
    PROCEDURE       reduce using rule 142 (subprogram_declaration -> subprogram_specification SEMICOLON .)
    TYPE            reduce using rule 142 (subprogram_declaration -> subprogram_specification SEMICOLON .)
    COLON           reduce using rule 142 (subprogram_declaration -> subprogram_specification SEMICOLON .)
    FOR             reduce using rule 142 (subprogram_declaration -> subprogram_specification SEMICOLON .)
    BEGIN           reduce using rule 142 (subprogram_declaration -> subprogram_specification SEMICOLON .)


state 43

    (1) subprogram_body -> subprogram_specification IS declarative_part BEGIN . sequence_of_statements END designator SEMICOLON
    (2) subprogram_body -> subprogram_specification IS declarative_part BEGIN . sequence_of_statements END SEMICOLON
    (160) sequence_of_statements -> . statement sequence_of_statements
    (161) sequence_of_statements -> . statement
    (162) statement -> . simple_statement
    (163) statement -> . compound_statement
    (168) simple_statement -> . null_statement
    (169) simple_statement -> . assignment_statement
    (170) simple_statement -> . exit_statement
    (171) simple_statement -> . entry_call_statement
    (172) simple_statement -> . code_statement
    (164) compound_statement -> . if_statement
    (165) compound_statement -> . loop_statement
    (178) null_statement -> . NULL
    (179) assignment_statement -> . name ASSIGN expression SEMICOLON
    (176) exit_statement -> . EXIT SEMICOLON
    (177) exit_statement -> . EXIT name SEMICOLON
    (173) entry_call_statement -> . name SEMICOLON
    (174) entry_call_statement -> . name actual_parameter_part SEMICOLON
    (175) code_statement -> . qualified_expression SEMICOLON
    (156) if_statement -> . IF expression THEN sequence_of_statements if_statemant_loop
    (148) loop_statement -> . LOOP sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> . LOOP sequence_of_statements END LOOP name SEMICOLON
    (150) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (152) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 97
    EXIT            shift and go to state 99
    IF              shift and go to state 101
    LOOP            shift and go to state 102
    WHILE           shift and go to state 103
    FOR             shift and go to state 104
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    sequence_of_statements         shift and go to state 86
    statement                      shift and go to state 87
    simple_statement               shift and go to state 88
    compound_statement             shift and go to state 89
    null_statement                 shift and go to state 90
    assignment_statement           shift and go to state 91
    exit_statement                 shift and go to state 92
    entry_call_statement           shift and go to state 93
    code_statement                 shift and go to state 94
    if_statement                   shift and go to state 95
    loop_statement                 shift and go to state 96
    name                           shift and go to state 98
    qualified_expression           shift and go to state 100
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 44

    (8) declarative_part -> basic_declarative_item declarative_part .

    BEGIN           reduce using rule 8 (declarative_part -> basic_declarative_item declarative_part .)


state 45

    (9) declarative_part -> subprogram_body declarative_part .

    BEGIN           reduce using rule 9 (declarative_part -> subprogram_body declarative_part .)


state 46

    (130) use_clause -> LPAREN USE . name RPAREN
    (132) use_clause -> LPAREN USE . name use_clause_loop RPAREN
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 105
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 47

    (131) use_clause -> LPAREN TYPE . name RPAREN
    (133) use_clause -> LPAREN TYPE . name use_clause_loop RPAREN
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 106
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 48

    (137) incomplete_type_definition -> TYPE ID . SEMICOLON
    (138) incomplete_type_definition -> TYPE ID . discriminant_part SEMICOLON
    (136) discriminant_part -> . identifier_list COLON name ASSIGN expression
    (146) identifier_list -> . ID
    (147) identifier_list -> . ID COMMA identifier_list

    SEMICOLON       shift and go to state 108
    ID              shift and go to state 107

    discriminant_part              shift and go to state 109
    identifier_list                shift and go to state 110

state 49

    (145) number_declaration -> COLON CONSTANT . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 111


state 50

    (16) attribute_definition_clause -> FOR name . SINGLEQUOTE attribute_designator USE expression SEMICOLON
    (17) attribute_definition_clause -> FOR name . SINGLEQUOTE attribute_designator USE name SEMICOLON
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    SINGLEQUOTE     shift and go to state 112
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113

  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 51

    (129) enumeration_representation_clause -> FOR direct_name . USE named_array_aggregate SEMICOLON
    (103) name -> direct_name .

    USE             shift and go to state 114
    SINGLEQUOTE     reduce using rule 103 (name -> direct_name .)
    LPAREN          reduce using rule 103 (name -> direct_name .)
    DOT             reduce using rule 103 (name -> direct_name .)


state 52

    (15) direct_name -> ID .

    USE             reduce using rule 15 (direct_name -> ID .)
    SINGLEQUOTE     reduce using rule 15 (direct_name -> ID .)
    LPAREN          reduce using rule 15 (direct_name -> ID .)
    DOT             reduce using rule 15 (direct_name -> ID .)
    ASSIGN          reduce using rule 15 (direct_name -> ID .)
    SEMICOLON       reduce using rule 15 (direct_name -> ID .)
    RPAREN          reduce using rule 15 (direct_name -> ID .)
    COMMA           reduce using rule 15 (direct_name -> ID .)
    RANGE           reduce using rule 15 (direct_name -> ID .)
    DIGITS          reduce using rule 15 (direct_name -> ID .)
    PIPE            reduce using rule 15 (direct_name -> ID .)
    REFASSIGN       reduce using rule 15 (direct_name -> ID .)
    POWER           reduce using rule 15 (direct_name -> ID .)
    TIMES           reduce using rule 15 (direct_name -> ID .)
    DIVIDE          reduce using rule 15 (direct_name -> ID .)
    MOD             reduce using rule 15 (direct_name -> ID .)
    REM             reduce using rule 15 (direct_name -> ID .)
    EQUAL           reduce using rule 15 (direct_name -> ID .)
    NOTEQUAL        reduce using rule 15 (direct_name -> ID .)
    LESSTHAN        reduce using rule 15 (direct_name -> ID .)
    LESSTHANEQUAL   reduce using rule 15 (direct_name -> ID .)
    GREATERTHAN     reduce using rule 15 (direct_name -> ID .)
    GREATERTHANEQUAL reduce using rule 15 (direct_name -> ID .)
    IN              reduce using rule 15 (direct_name -> ID .)
    NOT             reduce using rule 15 (direct_name -> ID .)
    PLUS            reduce using rule 15 (direct_name -> ID .)
    MINUS           reduce using rule 15 (direct_name -> ID .)
    CONCAT          reduce using rule 15 (direct_name -> ID .)
    DOTDOT          reduce using rule 15 (direct_name -> ID .)
    AND             reduce using rule 15 (direct_name -> ID .)
    OR              reduce using rule 15 (direct_name -> ID .)
    XOR             reduce using rule 15 (direct_name -> ID .)
    NULL            reduce using rule 15 (direct_name -> ID .)
    NUMBER_INT      reduce using rule 15 (direct_name -> ID .)
    NUMBER_FLOAT    reduce using rule 15 (direct_name -> ID .)
    NUMBER_EXPONENT reduce using rule 15 (direct_name -> ID .)
    ID              reduce using rule 15 (direct_name -> ID .)
    COLON           reduce using rule 15 (direct_name -> ID .)
    THEN            reduce using rule 15 (direct_name -> ID .)
    LOOP            reduce using rule 15 (direct_name -> ID .)


state 53

    (144) defining_program_unit_name -> name DOT ID .
    (122) selector_name -> ID .

    IS              reduce using rule 144 (defining_program_unit_name -> name DOT ID .)
    SEMICOLON       reduce using rule 144 (defining_program_unit_name -> name DOT ID .)
    DOT             reduce using rule 122 (selector_name -> ID .)
    LPAREN          reduce using rule 122 (selector_name -> ID .)
    SINGLEQUOTE     reduce using rule 122 (selector_name -> ID .)


state 54

    (22) selected_component -> name DOT selector_name .

    DOT             reduce using rule 22 (selected_component -> name DOT selector_name .)
    LPAREN          reduce using rule 22 (selected_component -> name DOT selector_name .)
    SINGLEQUOTE     reduce using rule 22 (selected_component -> name DOT selector_name .)
    RPAREN          reduce using rule 22 (selected_component -> name DOT selector_name .)
    RANGE           reduce using rule 22 (selected_component -> name DOT selector_name .)
    DIGITS          reduce using rule 22 (selected_component -> name DOT selector_name .)
    COMMA           reduce using rule 22 (selected_component -> name DOT selector_name .)
    POWER           reduce using rule 22 (selected_component -> name DOT selector_name .)
    TIMES           reduce using rule 22 (selected_component -> name DOT selector_name .)
    DIVIDE          reduce using rule 22 (selected_component -> name DOT selector_name .)
    MOD             reduce using rule 22 (selected_component -> name DOT selector_name .)
    REM             reduce using rule 22 (selected_component -> name DOT selector_name .)
    DOTDOT          reduce using rule 22 (selected_component -> name DOT selector_name .)
    EQUAL           reduce using rule 22 (selected_component -> name DOT selector_name .)
    NOTEQUAL        reduce using rule 22 (selected_component -> name DOT selector_name .)
    LESSTHAN        reduce using rule 22 (selected_component -> name DOT selector_name .)
    LESSTHANEQUAL   reduce using rule 22 (selected_component -> name DOT selector_name .)
    GREATERTHAN     reduce using rule 22 (selected_component -> name DOT selector_name .)
    GREATERTHANEQUAL reduce using rule 22 (selected_component -> name DOT selector_name .)
    IN              reduce using rule 22 (selected_component -> name DOT selector_name .)
    NOT             reduce using rule 22 (selected_component -> name DOT selector_name .)
    PLUS            reduce using rule 22 (selected_component -> name DOT selector_name .)
    MINUS           reduce using rule 22 (selected_component -> name DOT selector_name .)
    CONCAT          reduce using rule 22 (selected_component -> name DOT selector_name .)
    AND             reduce using rule 22 (selected_component -> name DOT selector_name .)
    OR              reduce using rule 22 (selected_component -> name DOT selector_name .)
    XOR             reduce using rule 22 (selected_component -> name DOT selector_name .)
    ASSIGN          reduce using rule 22 (selected_component -> name DOT selector_name .)
    SEMICOLON       reduce using rule 22 (selected_component -> name DOT selector_name .)
    PIPE            reduce using rule 22 (selected_component -> name DOT selector_name .)
    REFASSIGN       reduce using rule 22 (selected_component -> name DOT selector_name .)
    NULL            reduce using rule 22 (selected_component -> name DOT selector_name .)
    NUMBER_INT      reduce using rule 22 (selected_component -> name DOT selector_name .)
    NUMBER_FLOAT    reduce using rule 22 (selected_component -> name DOT selector_name .)
    NUMBER_EXPONENT reduce using rule 22 (selected_component -> name DOT selector_name .)
    ID              reduce using rule 22 (selected_component -> name DOT selector_name .)
    COLON           reduce using rule 22 (selected_component -> name DOT selector_name .)
    THEN            reduce using rule 22 (selected_component -> name DOT selector_name .)
    LOOP            reduce using rule 22 (selected_component -> name DOT selector_name .)


state 55

    (123) selector_name -> character_literal .

    DOT             reduce using rule 123 (selector_name -> character_literal .)
    LPAREN          reduce using rule 123 (selector_name -> character_literal .)
    SINGLEQUOTE     reduce using rule 123 (selector_name -> character_literal .)
    RPAREN          reduce using rule 123 (selector_name -> character_literal .)
    RANGE           reduce using rule 123 (selector_name -> character_literal .)
    DIGITS          reduce using rule 123 (selector_name -> character_literal .)
    COMMA           reduce using rule 123 (selector_name -> character_literal .)
    POWER           reduce using rule 123 (selector_name -> character_literal .)
    TIMES           reduce using rule 123 (selector_name -> character_literal .)
    DIVIDE          reduce using rule 123 (selector_name -> character_literal .)
    MOD             reduce using rule 123 (selector_name -> character_literal .)
    REM             reduce using rule 123 (selector_name -> character_literal .)
    DOTDOT          reduce using rule 123 (selector_name -> character_literal .)
    EQUAL           reduce using rule 123 (selector_name -> character_literal .)
    NOTEQUAL        reduce using rule 123 (selector_name -> character_literal .)
    LESSTHAN        reduce using rule 123 (selector_name -> character_literal .)
    LESSTHANEQUAL   reduce using rule 123 (selector_name -> character_literal .)
    GREATERTHAN     reduce using rule 123 (selector_name -> character_literal .)
    GREATERTHANEQUAL reduce using rule 123 (selector_name -> character_literal .)
    IN              reduce using rule 123 (selector_name -> character_literal .)
    NOT             reduce using rule 123 (selector_name -> character_literal .)
    PLUS            reduce using rule 123 (selector_name -> character_literal .)
    MINUS           reduce using rule 123 (selector_name -> character_literal .)
    CONCAT          reduce using rule 123 (selector_name -> character_literal .)
    AND             reduce using rule 123 (selector_name -> character_literal .)
    OR              reduce using rule 123 (selector_name -> character_literal .)
    XOR             reduce using rule 123 (selector_name -> character_literal .)
    ASSIGN          reduce using rule 123 (selector_name -> character_literal .)
    SEMICOLON       reduce using rule 123 (selector_name -> character_literal .)
    PIPE            reduce using rule 123 (selector_name -> character_literal .)
    REFASSIGN       reduce using rule 123 (selector_name -> character_literal .)
    NULL            reduce using rule 123 (selector_name -> character_literal .)
    NUMBER_INT      reduce using rule 123 (selector_name -> character_literal .)
    NUMBER_FLOAT    reduce using rule 123 (selector_name -> character_literal .)
    NUMBER_EXPONENT reduce using rule 123 (selector_name -> character_literal .)
    ID              reduce using rule 123 (selector_name -> character_literal .)
    COLON           reduce using rule 123 (selector_name -> character_literal .)
    THEN            reduce using rule 123 (selector_name -> character_literal .)
    LOOP            reduce using rule 123 (selector_name -> character_literal .)


state 56

    (21) type_conversion -> name LPAREN name . RPAREN
    (119) parameter_association -> name .
    (81) subtype_indication -> name .
    (82) subtype_indication -> name . constraint
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (100) range_attribute_reference -> name . SINGLEQUOTE range_attribute_designator
    (67) primary -> name .
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (83) constraint -> . range_constraint
    (84) constraint -> . digits_constraint
    (85) constraint -> . index_constraint
    (86) constraint -> . discriminant_constraint
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN
    (97) range_constraint -> . RANGE range
    (95) digits_constraint -> . DIGITS expression range_constraint
    (96) digits_constraint -> . DIGITS expression
    (93) index_constraint -> . LPAREN discrete_range RPAREN
    (94) index_constraint -> . LPAREN discrete_range COMMA discrete_range index_constraint RPAREN
    (87) discriminant_constraint -> . LPAREN discriminant_association COMMA discriminant_association RPAREN
    (88) discriminant_constraint -> . COMMA discriminant_association

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 81 (subtype_indication -> name .)
  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for POWER resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for REM resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DOTDOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for EQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for IN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for AND resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for OR resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for XOR resolved using rule 67 (primary -> name .)
  ! shift/reduce conflict for RANGE resolved as shift
  ! shift/reduce conflict for DIGITS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          shift and go to state 116
    LPAREN          shift and go to state 115
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 118
    POWER           reduce using rule 67 (primary -> name .)
    TIMES           reduce using rule 67 (primary -> name .)
    DIVIDE          reduce using rule 67 (primary -> name .)
    MOD             reduce using rule 67 (primary -> name .)
    REM             reduce using rule 67 (primary -> name .)
    DOTDOT          reduce using rule 67 (primary -> name .)
    EQUAL           reduce using rule 67 (primary -> name .)
    NOTEQUAL        reduce using rule 67 (primary -> name .)
    LESSTHAN        reduce using rule 67 (primary -> name .)
    LESSTHANEQUAL   reduce using rule 67 (primary -> name .)
    GREATERTHAN     reduce using rule 67 (primary -> name .)
    GREATERTHANEQUAL reduce using rule 67 (primary -> name .)
    IN              reduce using rule 67 (primary -> name .)
    NOT             reduce using rule 67 (primary -> name .)
    PLUS            reduce using rule 67 (primary -> name .)
    MINUS           reduce using rule 67 (primary -> name .)
    CONCAT          reduce using rule 67 (primary -> name .)
    AND             reduce using rule 67 (primary -> name .)
    OR              reduce using rule 67 (primary -> name .)
    XOR             reduce using rule 67 (primary -> name .)
    RANGE           shift and go to state 123
    DIGITS          shift and go to state 124
    COMMA           shift and go to state 125

  ! RPAREN          [ reduce using rule 119 (parameter_association -> name .) ]
  ! COMMA           [ reduce using rule 119 (parameter_association -> name .) ]
  ! RPAREN          [ reduce using rule 81 (subtype_indication -> name .) ]
  ! COMMA           [ reduce using rule 81 (subtype_indication -> name .) ]
  ! RPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! RANGE           [ reduce using rule 112 (function_call -> name .) ]
  ! DIGITS          [ reduce using rule 112 (function_call -> name .) ]
  ! COMMA           [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]
  ! DOTDOT          [ reduce using rule 112 (function_call -> name .) ]
  ! EQUAL           [ reduce using rule 112 (function_call -> name .) ]
  ! NOTEQUAL        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHAN        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHANEQUAL   [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHAN     [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHANEQUAL [ reduce using rule 112 (function_call -> name .) ]
  ! IN              [ reduce using rule 112 (function_call -> name .) ]
  ! NOT             [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]
  ! AND             [ reduce using rule 112 (function_call -> name .) ]
  ! OR              [ reduce using rule 112 (function_call -> name .) ]
  ! XOR             [ reduce using rule 112 (function_call -> name .) ]

    constraint                     shift and go to state 117
    actual_parameter_part          shift and go to state 36
    range_constraint               shift and go to state 119
    digits_constraint              shift and go to state 120
    index_constraint               shift and go to state 121
    discriminant_constraint        shift and go to state 122

state 57

    (69) primary -> LPAREN . expression RPAREN
    (72) named_array_aggregate -> LPAREN . array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (74) array_component_association -> . discrete_choice_list REFASSIGN expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (75) discrete_choice_list -> . discrete_choice
    (76) discrete_choice_list -> . discrete_choice PIPE discrete_choice discrete_choice_list
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (77) discrete_choice -> . expression
    (78) discrete_choice -> . discrete_range
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    expression                     shift and go to state 126
    array_component_association    shift and go to state 127
    named_array_aggregate          shift and go to state 77
    relation                       shift and go to state 63
    discrete_choice_list           shift and go to state 128
    simple_expression              shift and go to state 129
    range                          shift and go to state 62
    name                           shift and go to state 130
    discrete_choice                shift and go to state 131
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    discrete_range                 shift and go to state 132
    subtype_indication             shift and go to state 61
    factor                         shift and go to state 73
    range_attribute_reference      shift and go to state 66
    primary                        shift and go to state 74
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    numeric_literal                shift and go to state 75
    qualified_expression           shift and go to state 78

state 58

    (111) slice -> name LPAREN discrete_range . RPAREN

    RPAREN          shift and go to state 133


state 59

    (20) type_conversion -> name LPAREN expression . RPAREN
    (18) indexed_component -> name LPAREN expression . RPAREN
    (19) indexed_component -> name LPAREN expression . COLON indexed_component RPAREN
    (118) parameter_association -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 134
    COLON           shift and go to state 135
    COMMA           reduce using rule 118 (parameter_association -> expression .)

  ! RPAREN          [ reduce using rule 118 (parameter_association -> expression .) ]


state 60

    (114) actual_parameter_part -> LPAREN parameter_association . RPAREN
    (115) actual_parameter_part -> LPAREN parameter_association . actual_parameter_part_loop RPAREN
    (116) actual_parameter_part_loop -> . COMMA parameter_association actual_parameter_part_loop
    (117) actual_parameter_part_loop -> . COMMA parameter_association

    RPAREN          shift and go to state 136
    COMMA           shift and go to state 138

    actual_parameter_part_loop     shift and go to state 137

state 61

    (79) discrete_range -> subtype_indication .

    RPAREN          reduce using rule 79 (discrete_range -> subtype_indication .)
    PIPE            reduce using rule 79 (discrete_range -> subtype_indication .)
    REFASSIGN       reduce using rule 79 (discrete_range -> subtype_indication .)
    COMMA           reduce using rule 79 (discrete_range -> subtype_indication .)
    PLUS            reduce using rule 79 (discrete_range -> subtype_indication .)
    MINUS           reduce using rule 79 (discrete_range -> subtype_indication .)
    ID              reduce using rule 79 (discrete_range -> subtype_indication .)
    SINGLEQUOTE     reduce using rule 79 (discrete_range -> subtype_indication .)
    NULL            reduce using rule 79 (discrete_range -> subtype_indication .)
    LPAREN          reduce using rule 79 (discrete_range -> subtype_indication .)
    NUMBER_INT      reduce using rule 79 (discrete_range -> subtype_indication .)
    NUMBER_FLOAT    reduce using rule 79 (discrete_range -> subtype_indication .)
    NUMBER_EXPONENT reduce using rule 79 (discrete_range -> subtype_indication .)


state 62

    (80) discrete_range -> range .

    RPAREN          reduce using rule 80 (discrete_range -> range .)
    PIPE            reduce using rule 80 (discrete_range -> range .)
    REFASSIGN       reduce using rule 80 (discrete_range -> range .)
    COMMA           reduce using rule 80 (discrete_range -> range .)
    PLUS            reduce using rule 80 (discrete_range -> range .)
    MINUS           reduce using rule 80 (discrete_range -> range .)
    ID              reduce using rule 80 (discrete_range -> range .)
    SINGLEQUOTE     reduce using rule 80 (discrete_range -> range .)
    NULL            reduce using rule 80 (discrete_range -> range .)
    LPAREN          reduce using rule 80 (discrete_range -> range .)
    NUMBER_INT      reduce using rule 80 (discrete_range -> range .)
    NUMBER_FLOAT    reduce using rule 80 (discrete_range -> range .)
    NUMBER_EXPONENT reduce using rule 80 (discrete_range -> range .)


state 63

    (26) expression -> relation . AND relation
    (27) expression -> relation . AND relation expression
    (28) expression -> relation . AND THEN relation
    (29) expression -> relation . AND THEN relation expression
    (30) expression -> relation . OR relation
    (31) expression -> relation . OR relation expression
    (32) expression -> relation . OR ELSE relation
    (33) expression -> relation . OR ELSE relation expression
    (34) expression -> relation . XOR relation
    (35) expression -> relation . XOR relation expression

    AND             shift and go to state 139
    OR              shift and go to state 140
    XOR             shift and go to state 141


state 64

    (109) name -> character_literal .
    (123) selector_name -> character_literal .

    RPAREN          reduce using rule 109 (name -> character_literal .)
    LPAREN          reduce using rule 109 (name -> character_literal .)
    DOT             reduce using rule 109 (name -> character_literal .)
    SINGLEQUOTE     reduce using rule 109 (name -> character_literal .)
    RANGE           reduce using rule 109 (name -> character_literal .)
    DIGITS          reduce using rule 109 (name -> character_literal .)
    COMMA           reduce using rule 109 (name -> character_literal .)
    POWER           reduce using rule 109 (name -> character_literal .)
    TIMES           reduce using rule 109 (name -> character_literal .)
    DIVIDE          reduce using rule 109 (name -> character_literal .)
    MOD             reduce using rule 109 (name -> character_literal .)
    REM             reduce using rule 109 (name -> character_literal .)
    DOTDOT          reduce using rule 109 (name -> character_literal .)
    EQUAL           reduce using rule 109 (name -> character_literal .)
    NOTEQUAL        reduce using rule 109 (name -> character_literal .)
    LESSTHAN        reduce using rule 109 (name -> character_literal .)
    LESSTHANEQUAL   reduce using rule 109 (name -> character_literal .)
    GREATERTHAN     reduce using rule 109 (name -> character_literal .)
    GREATERTHANEQUAL reduce using rule 109 (name -> character_literal .)
    IN              reduce using rule 109 (name -> character_literal .)
    NOT             reduce using rule 109 (name -> character_literal .)
    PLUS            reduce using rule 109 (name -> character_literal .)
    MINUS           reduce using rule 109 (name -> character_literal .)
    CONCAT          reduce using rule 109 (name -> character_literal .)
    AND             reduce using rule 109 (name -> character_literal .)
    OR              reduce using rule 109 (name -> character_literal .)
    XOR             reduce using rule 109 (name -> character_literal .)
    REFASSIGN       reduce using rule 123 (selector_name -> character_literal .)
    PIPE            reduce using rule 123 (selector_name -> character_literal .)


state 65

    (120) parameter_association -> selector_name . REFASSIGN expression
    (121) parameter_association -> selector_name . REFASSIGN name

    REFASSIGN       shift and go to state 142


state 66

    (98) range -> range_attribute_reference .

    RPAREN          reduce using rule 98 (range -> range_attribute_reference .)
    PIPE            reduce using rule 98 (range -> range_attribute_reference .)
    REFASSIGN       reduce using rule 98 (range -> range_attribute_reference .)
    COMMA           reduce using rule 98 (range -> range_attribute_reference .)
    PLUS            reduce using rule 98 (range -> range_attribute_reference .)
    MINUS           reduce using rule 98 (range -> range_attribute_reference .)
    ID              reduce using rule 98 (range -> range_attribute_reference .)
    SINGLEQUOTE     reduce using rule 98 (range -> range_attribute_reference .)
    NULL            reduce using rule 98 (range -> range_attribute_reference .)
    LPAREN          reduce using rule 98 (range -> range_attribute_reference .)
    NUMBER_INT      reduce using rule 98 (range -> range_attribute_reference .)
    NUMBER_FLOAT    reduce using rule 98 (range -> range_attribute_reference .)
    NUMBER_EXPONENT reduce using rule 98 (range -> range_attribute_reference .)
    LOOP            reduce using rule 98 (range -> range_attribute_reference .)
    DOTDOT          reduce using rule 98 (range -> range_attribute_reference .)
    EQUAL           reduce using rule 98 (range -> range_attribute_reference .)
    NOTEQUAL        reduce using rule 98 (range -> range_attribute_reference .)
    LESSTHAN        reduce using rule 98 (range -> range_attribute_reference .)
    LESSTHANEQUAL   reduce using rule 98 (range -> range_attribute_reference .)
    GREATERTHAN     reduce using rule 98 (range -> range_attribute_reference .)
    GREATERTHANEQUAL reduce using rule 98 (range -> range_attribute_reference .)
    IN              reduce using rule 98 (range -> range_attribute_reference .)
    NOT             reduce using rule 98 (range -> range_attribute_reference .)
    CONCAT          reduce using rule 98 (range -> range_attribute_reference .)
    AND             reduce using rule 98 (range -> range_attribute_reference .)
    OR              reduce using rule 98 (range -> range_attribute_reference .)
    XOR             reduce using rule 98 (range -> range_attribute_reference .)
    COLON           reduce using rule 98 (range -> range_attribute_reference .)
    THEN            reduce using rule 98 (range -> range_attribute_reference .)
    SEMICOLON       reduce using rule 98 (range -> range_attribute_reference .)
    RANGE           reduce using rule 98 (range -> range_attribute_reference .)
    POWER           reduce using rule 98 (range -> range_attribute_reference .)
    TIMES           reduce using rule 98 (range -> range_attribute_reference .)
    DIVIDE          reduce using rule 98 (range -> range_attribute_reference .)
    MOD             reduce using rule 98 (range -> range_attribute_reference .)
    REM             reduce using rule 98 (range -> range_attribute_reference .)


state 67

    (99) range -> simple_expression . DOTDOT simple_expression
    (36) relation -> simple_expression .
    (37) relation -> simple_expression . EQUAL simple_expression
    (38) relation -> simple_expression . NOTEQUAL simple_expression
    (39) relation -> simple_expression . LESSTHAN simple_expression
    (40) relation -> simple_expression . LESSTHANEQUAL simple_expression
    (41) relation -> simple_expression . GREATERTHAN simple_expression
    (42) relation -> simple_expression . GREATERTHANEQUAL simple_expression
    (43) relation -> simple_expression . IN range
    (44) relation -> simple_expression . IN name
    (45) relation -> simple_expression . NOT IN range
    (46) relation -> simple_expression . NOT IN name
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

    DOTDOT          shift and go to state 143
    AND             reduce using rule 36 (relation -> simple_expression .)
    OR              reduce using rule 36 (relation -> simple_expression .)
    XOR             reduce using rule 36 (relation -> simple_expression .)
    EQUAL           shift and go to state 144
    NOTEQUAL        shift and go to state 145
    LESSTHAN        shift and go to state 146
    LESSTHANEQUAL   shift and go to state 147
    GREATERTHAN     shift and go to state 148
    GREATERTHANEQUAL shift and go to state 149
    IN              shift and go to state 150
    NOT             shift and go to state 151
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154


state 68

    (15) direct_name -> ID .
    (122) selector_name -> ID .

    RPAREN          reduce using rule 15 (direct_name -> ID .)
    LPAREN          reduce using rule 15 (direct_name -> ID .)
    DOT             reduce using rule 15 (direct_name -> ID .)
    SINGLEQUOTE     reduce using rule 15 (direct_name -> ID .)
    RANGE           reduce using rule 15 (direct_name -> ID .)
    DIGITS          reduce using rule 15 (direct_name -> ID .)
    COMMA           reduce using rule 15 (direct_name -> ID .)
    POWER           reduce using rule 15 (direct_name -> ID .)
    TIMES           reduce using rule 15 (direct_name -> ID .)
    DIVIDE          reduce using rule 15 (direct_name -> ID .)
    MOD             reduce using rule 15 (direct_name -> ID .)
    REM             reduce using rule 15 (direct_name -> ID .)
    DOTDOT          reduce using rule 15 (direct_name -> ID .)
    EQUAL           reduce using rule 15 (direct_name -> ID .)
    NOTEQUAL        reduce using rule 15 (direct_name -> ID .)
    LESSTHAN        reduce using rule 15 (direct_name -> ID .)
    LESSTHANEQUAL   reduce using rule 15 (direct_name -> ID .)
    GREATERTHAN     reduce using rule 15 (direct_name -> ID .)
    GREATERTHANEQUAL reduce using rule 15 (direct_name -> ID .)
    IN              reduce using rule 15 (direct_name -> ID .)
    NOT             reduce using rule 15 (direct_name -> ID .)
    PLUS            reduce using rule 15 (direct_name -> ID .)
    MINUS           reduce using rule 15 (direct_name -> ID .)
    CONCAT          reduce using rule 15 (direct_name -> ID .)
    AND             reduce using rule 15 (direct_name -> ID .)
    OR              reduce using rule 15 (direct_name -> ID .)
    XOR             reduce using rule 15 (direct_name -> ID .)
    REFASSIGN       reduce using rule 122 (selector_name -> ID .)
    PIPE            reduce using rule 122 (selector_name -> ID .)


state 69

    (51) unaryExp -> PLUS . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    term                           shift and go to state 155
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 70

    (53) unaryExp -> term .

    DOTDOT          reduce using rule 53 (unaryExp -> term .)
    EQUAL           reduce using rule 53 (unaryExp -> term .)
    NOTEQUAL        reduce using rule 53 (unaryExp -> term .)
    LESSTHAN        reduce using rule 53 (unaryExp -> term .)
    LESSTHANEQUAL   reduce using rule 53 (unaryExp -> term .)
    GREATERTHAN     reduce using rule 53 (unaryExp -> term .)
    GREATERTHANEQUAL reduce using rule 53 (unaryExp -> term .)
    IN              reduce using rule 53 (unaryExp -> term .)
    NOT             reduce using rule 53 (unaryExp -> term .)
    PLUS            reduce using rule 53 (unaryExp -> term .)
    MINUS           reduce using rule 53 (unaryExp -> term .)
    CONCAT          reduce using rule 53 (unaryExp -> term .)
    AND             reduce using rule 53 (unaryExp -> term .)
    OR              reduce using rule 53 (unaryExp -> term .)
    XOR             reduce using rule 53 (unaryExp -> term .)
    NULL            reduce using rule 53 (unaryExp -> term .)
    LPAREN          reduce using rule 53 (unaryExp -> term .)
    NUMBER_INT      reduce using rule 53 (unaryExp -> term .)
    NUMBER_FLOAT    reduce using rule 53 (unaryExp -> term .)
    NUMBER_EXPONENT reduce using rule 53 (unaryExp -> term .)
    COMMA           reduce using rule 53 (unaryExp -> term .)
    ID              reduce using rule 53 (unaryExp -> term .)
    SINGLEQUOTE     reduce using rule 53 (unaryExp -> term .)
    RPAREN          reduce using rule 53 (unaryExp -> term .)
    COLON           reduce using rule 53 (unaryExp -> term .)
    PIPE            reduce using rule 53 (unaryExp -> term .)
    REFASSIGN       reduce using rule 53 (unaryExp -> term .)
    THEN            reduce using rule 53 (unaryExp -> term .)
    LOOP            reduce using rule 53 (unaryExp -> term .)
    SEMICOLON       reduce using rule 53 (unaryExp -> term .)
    RANGE           reduce using rule 53 (unaryExp -> term .)
    POWER           reduce using rule 53 (unaryExp -> term .)
    TIMES           reduce using rule 53 (unaryExp -> term .)
    DIVIDE          reduce using rule 53 (unaryExp -> term .)
    MOD             reduce using rule 53 (unaryExp -> term .)
    REM             reduce using rule 53 (unaryExp -> term .)


state 71

    (52) unaryExp -> MINUS . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    term                           shift and go to state 157
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 72

    (50) simple_expression -> unaryExp .

    DOTDOT          reduce using rule 50 (simple_expression -> unaryExp .)
    EQUAL           reduce using rule 50 (simple_expression -> unaryExp .)
    NOTEQUAL        reduce using rule 50 (simple_expression -> unaryExp .)
    LESSTHAN        reduce using rule 50 (simple_expression -> unaryExp .)
    LESSTHANEQUAL   reduce using rule 50 (simple_expression -> unaryExp .)
    GREATERTHAN     reduce using rule 50 (simple_expression -> unaryExp .)
    GREATERTHANEQUAL reduce using rule 50 (simple_expression -> unaryExp .)
    IN              reduce using rule 50 (simple_expression -> unaryExp .)
    NOT             reduce using rule 50 (simple_expression -> unaryExp .)
    PLUS            reduce using rule 50 (simple_expression -> unaryExp .)
    MINUS           reduce using rule 50 (simple_expression -> unaryExp .)
    CONCAT          reduce using rule 50 (simple_expression -> unaryExp .)
    AND             reduce using rule 50 (simple_expression -> unaryExp .)
    OR              reduce using rule 50 (simple_expression -> unaryExp .)
    XOR             reduce using rule 50 (simple_expression -> unaryExp .)
    NULL            reduce using rule 50 (simple_expression -> unaryExp .)
    LPAREN          reduce using rule 50 (simple_expression -> unaryExp .)
    NUMBER_INT      reduce using rule 50 (simple_expression -> unaryExp .)
    NUMBER_FLOAT    reduce using rule 50 (simple_expression -> unaryExp .)
    NUMBER_EXPONENT reduce using rule 50 (simple_expression -> unaryExp .)
    COMMA           reduce using rule 50 (simple_expression -> unaryExp .)
    ID              reduce using rule 50 (simple_expression -> unaryExp .)
    SINGLEQUOTE     reduce using rule 50 (simple_expression -> unaryExp .)
    RPAREN          reduce using rule 50 (simple_expression -> unaryExp .)
    COLON           reduce using rule 50 (simple_expression -> unaryExp .)
    PIPE            reduce using rule 50 (simple_expression -> unaryExp .)
    REFASSIGN       reduce using rule 50 (simple_expression -> unaryExp .)
    THEN            reduce using rule 50 (simple_expression -> unaryExp .)
    LOOP            reduce using rule 50 (simple_expression -> unaryExp .)
    SEMICOLON       reduce using rule 50 (simple_expression -> unaryExp .)
    RANGE           reduce using rule 50 (simple_expression -> unaryExp .)
    POWER           reduce using rule 50 (simple_expression -> unaryExp .)
    TIMES           reduce using rule 50 (simple_expression -> unaryExp .)
    DIVIDE          reduce using rule 50 (simple_expression -> unaryExp .)
    MOD             reduce using rule 50 (simple_expression -> unaryExp .)
    REM             reduce using rule 50 (simple_expression -> unaryExp .)


state 73

    (54) term -> factor .
    (55) term -> factor . TIMES factor term
    (56) term -> factor . DIVIDE factor term
    (57) term -> factor . MOD factor term
    (58) term -> factor . REM factor term

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for REM resolved as shift
    DOTDOT          reduce using rule 54 (term -> factor .)
    EQUAL           reduce using rule 54 (term -> factor .)
    NOTEQUAL        reduce using rule 54 (term -> factor .)
    LESSTHAN        reduce using rule 54 (term -> factor .)
    LESSTHANEQUAL   reduce using rule 54 (term -> factor .)
    GREATERTHAN     reduce using rule 54 (term -> factor .)
    GREATERTHANEQUAL reduce using rule 54 (term -> factor .)
    IN              reduce using rule 54 (term -> factor .)
    NOT             reduce using rule 54 (term -> factor .)
    PLUS            reduce using rule 54 (term -> factor .)
    MINUS           reduce using rule 54 (term -> factor .)
    CONCAT          reduce using rule 54 (term -> factor .)
    AND             reduce using rule 54 (term -> factor .)
    OR              reduce using rule 54 (term -> factor .)
    XOR             reduce using rule 54 (term -> factor .)
    NULL            reduce using rule 54 (term -> factor .)
    LPAREN          reduce using rule 54 (term -> factor .)
    NUMBER_INT      reduce using rule 54 (term -> factor .)
    NUMBER_FLOAT    reduce using rule 54 (term -> factor .)
    NUMBER_EXPONENT reduce using rule 54 (term -> factor .)
    COMMA           reduce using rule 54 (term -> factor .)
    ID              reduce using rule 54 (term -> factor .)
    SINGLEQUOTE     reduce using rule 54 (term -> factor .)
    RPAREN          reduce using rule 54 (term -> factor .)
    COLON           reduce using rule 54 (term -> factor .)
    PIPE            reduce using rule 54 (term -> factor .)
    REFASSIGN       reduce using rule 54 (term -> factor .)
    THEN            reduce using rule 54 (term -> factor .)
    LOOP            reduce using rule 54 (term -> factor .)
    SEMICOLON       reduce using rule 54 (term -> factor .)
    RANGE           reduce using rule 54 (term -> factor .)
    POWER           reduce using rule 54 (term -> factor .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159
    MOD             shift and go to state 160
    REM             shift and go to state 161

  ! TIMES           [ reduce using rule 54 (term -> factor .) ]
  ! DIVIDE          [ reduce using rule 54 (term -> factor .) ]
  ! MOD             [ reduce using rule 54 (term -> factor .) ]
  ! REM             [ reduce using rule 54 (term -> factor .) ]


state 74

    (59) factor -> primary .
    (60) factor -> primary . POWER primary

  ! shift/reduce conflict for POWER resolved as shift
    TIMES           reduce using rule 59 (factor -> primary .)
    DIVIDE          reduce using rule 59 (factor -> primary .)
    MOD             reduce using rule 59 (factor -> primary .)
    REM             reduce using rule 59 (factor -> primary .)
    DOTDOT          reduce using rule 59 (factor -> primary .)
    EQUAL           reduce using rule 59 (factor -> primary .)
    NOTEQUAL        reduce using rule 59 (factor -> primary .)
    LESSTHAN        reduce using rule 59 (factor -> primary .)
    LESSTHANEQUAL   reduce using rule 59 (factor -> primary .)
    GREATERTHAN     reduce using rule 59 (factor -> primary .)
    GREATERTHANEQUAL reduce using rule 59 (factor -> primary .)
    IN              reduce using rule 59 (factor -> primary .)
    NOT             reduce using rule 59 (factor -> primary .)
    PLUS            reduce using rule 59 (factor -> primary .)
    MINUS           reduce using rule 59 (factor -> primary .)
    CONCAT          reduce using rule 59 (factor -> primary .)
    AND             reduce using rule 59 (factor -> primary .)
    OR              reduce using rule 59 (factor -> primary .)
    XOR             reduce using rule 59 (factor -> primary .)
    NULL            reduce using rule 59 (factor -> primary .)
    LPAREN          reduce using rule 59 (factor -> primary .)
    NUMBER_INT      reduce using rule 59 (factor -> primary .)
    NUMBER_FLOAT    reduce using rule 59 (factor -> primary .)
    NUMBER_EXPONENT reduce using rule 59 (factor -> primary .)
    COMMA           reduce using rule 59 (factor -> primary .)
    ID              reduce using rule 59 (factor -> primary .)
    SINGLEQUOTE     reduce using rule 59 (factor -> primary .)
    RPAREN          reduce using rule 59 (factor -> primary .)
    COLON           reduce using rule 59 (factor -> primary .)
    PIPE            reduce using rule 59 (factor -> primary .)
    REFASSIGN       reduce using rule 59 (factor -> primary .)
    THEN            reduce using rule 59 (factor -> primary .)
    LOOP            reduce using rule 59 (factor -> primary .)
    SEMICOLON       reduce using rule 59 (factor -> primary .)
    RANGE           reduce using rule 59 (factor -> primary .)
    POWER           shift and go to state 162

  ! POWER           [ reduce using rule 59 (factor -> primary .) ]


state 75

    (64) primary -> numeric_literal .

    POWER           reduce using rule 64 (primary -> numeric_literal .)
    TIMES           reduce using rule 64 (primary -> numeric_literal .)
    DIVIDE          reduce using rule 64 (primary -> numeric_literal .)
    MOD             reduce using rule 64 (primary -> numeric_literal .)
    REM             reduce using rule 64 (primary -> numeric_literal .)
    DOTDOT          reduce using rule 64 (primary -> numeric_literal .)
    EQUAL           reduce using rule 64 (primary -> numeric_literal .)
    NOTEQUAL        reduce using rule 64 (primary -> numeric_literal .)
    LESSTHAN        reduce using rule 64 (primary -> numeric_literal .)
    LESSTHANEQUAL   reduce using rule 64 (primary -> numeric_literal .)
    GREATERTHAN     reduce using rule 64 (primary -> numeric_literal .)
    GREATERTHANEQUAL reduce using rule 64 (primary -> numeric_literal .)
    IN              reduce using rule 64 (primary -> numeric_literal .)
    NOT             reduce using rule 64 (primary -> numeric_literal .)
    PLUS            reduce using rule 64 (primary -> numeric_literal .)
    MINUS           reduce using rule 64 (primary -> numeric_literal .)
    CONCAT          reduce using rule 64 (primary -> numeric_literal .)
    AND             reduce using rule 64 (primary -> numeric_literal .)
    OR              reduce using rule 64 (primary -> numeric_literal .)
    XOR             reduce using rule 64 (primary -> numeric_literal .)
    NULL            reduce using rule 64 (primary -> numeric_literal .)
    LPAREN          reduce using rule 64 (primary -> numeric_literal .)
    NUMBER_INT      reduce using rule 64 (primary -> numeric_literal .)
    NUMBER_FLOAT    reduce using rule 64 (primary -> numeric_literal .)
    NUMBER_EXPONENT reduce using rule 64 (primary -> numeric_literal .)
    COMMA           reduce using rule 64 (primary -> numeric_literal .)
    ID              reduce using rule 64 (primary -> numeric_literal .)
    SINGLEQUOTE     reduce using rule 64 (primary -> numeric_literal .)
    RPAREN          reduce using rule 64 (primary -> numeric_literal .)
    COLON           reduce using rule 64 (primary -> numeric_literal .)
    PIPE            reduce using rule 64 (primary -> numeric_literal .)
    REFASSIGN       reduce using rule 64 (primary -> numeric_literal .)
    THEN            reduce using rule 64 (primary -> numeric_literal .)
    LOOP            reduce using rule 64 (primary -> numeric_literal .)
    SEMICOLON       reduce using rule 64 (primary -> numeric_literal .)
    RANGE           reduce using rule 64 (primary -> numeric_literal .)


state 76

    (65) primary -> NULL .

    POWER           reduce using rule 65 (primary -> NULL .)
    TIMES           reduce using rule 65 (primary -> NULL .)
    DIVIDE          reduce using rule 65 (primary -> NULL .)
    MOD             reduce using rule 65 (primary -> NULL .)
    REM             reduce using rule 65 (primary -> NULL .)
    DOTDOT          reduce using rule 65 (primary -> NULL .)
    EQUAL           reduce using rule 65 (primary -> NULL .)
    NOTEQUAL        reduce using rule 65 (primary -> NULL .)
    LESSTHAN        reduce using rule 65 (primary -> NULL .)
    LESSTHANEQUAL   reduce using rule 65 (primary -> NULL .)
    GREATERTHAN     reduce using rule 65 (primary -> NULL .)
    GREATERTHANEQUAL reduce using rule 65 (primary -> NULL .)
    IN              reduce using rule 65 (primary -> NULL .)
    NOT             reduce using rule 65 (primary -> NULL .)
    PLUS            reduce using rule 65 (primary -> NULL .)
    MINUS           reduce using rule 65 (primary -> NULL .)
    CONCAT          reduce using rule 65 (primary -> NULL .)
    AND             reduce using rule 65 (primary -> NULL .)
    OR              reduce using rule 65 (primary -> NULL .)
    XOR             reduce using rule 65 (primary -> NULL .)
    NULL            reduce using rule 65 (primary -> NULL .)
    LPAREN          reduce using rule 65 (primary -> NULL .)
    NUMBER_INT      reduce using rule 65 (primary -> NULL .)
    NUMBER_FLOAT    reduce using rule 65 (primary -> NULL .)
    NUMBER_EXPONENT reduce using rule 65 (primary -> NULL .)
    COMMA           reduce using rule 65 (primary -> NULL .)
    ID              reduce using rule 65 (primary -> NULL .)
    SINGLEQUOTE     reduce using rule 65 (primary -> NULL .)
    RPAREN          reduce using rule 65 (primary -> NULL .)
    COLON           reduce using rule 65 (primary -> NULL .)
    PIPE            reduce using rule 65 (primary -> NULL .)
    REFASSIGN       reduce using rule 65 (primary -> NULL .)
    THEN            reduce using rule 65 (primary -> NULL .)
    LOOP            reduce using rule 65 (primary -> NULL .)
    SEMICOLON       reduce using rule 65 (primary -> NULL .)
    RANGE           reduce using rule 65 (primary -> NULL .)


state 77

    (66) primary -> named_array_aggregate .

    POWER           reduce using rule 66 (primary -> named_array_aggregate .)
    TIMES           reduce using rule 66 (primary -> named_array_aggregate .)
    DIVIDE          reduce using rule 66 (primary -> named_array_aggregate .)
    MOD             reduce using rule 66 (primary -> named_array_aggregate .)
    REM             reduce using rule 66 (primary -> named_array_aggregate .)
    DOTDOT          reduce using rule 66 (primary -> named_array_aggregate .)
    EQUAL           reduce using rule 66 (primary -> named_array_aggregate .)
    NOTEQUAL        reduce using rule 66 (primary -> named_array_aggregate .)
    LESSTHAN        reduce using rule 66 (primary -> named_array_aggregate .)
    LESSTHANEQUAL   reduce using rule 66 (primary -> named_array_aggregate .)
    GREATERTHAN     reduce using rule 66 (primary -> named_array_aggregate .)
    GREATERTHANEQUAL reduce using rule 66 (primary -> named_array_aggregate .)
    IN              reduce using rule 66 (primary -> named_array_aggregate .)
    NOT             reduce using rule 66 (primary -> named_array_aggregate .)
    PLUS            reduce using rule 66 (primary -> named_array_aggregate .)
    MINUS           reduce using rule 66 (primary -> named_array_aggregate .)
    CONCAT          reduce using rule 66 (primary -> named_array_aggregate .)
    AND             reduce using rule 66 (primary -> named_array_aggregate .)
    OR              reduce using rule 66 (primary -> named_array_aggregate .)
    XOR             reduce using rule 66 (primary -> named_array_aggregate .)
    NULL            reduce using rule 66 (primary -> named_array_aggregate .)
    LPAREN          reduce using rule 66 (primary -> named_array_aggregate .)
    NUMBER_INT      reduce using rule 66 (primary -> named_array_aggregate .)
    NUMBER_FLOAT    reduce using rule 66 (primary -> named_array_aggregate .)
    NUMBER_EXPONENT reduce using rule 66 (primary -> named_array_aggregate .)
    COMMA           reduce using rule 66 (primary -> named_array_aggregate .)
    ID              reduce using rule 66 (primary -> named_array_aggregate .)
    SINGLEQUOTE     reduce using rule 66 (primary -> named_array_aggregate .)
    RPAREN          reduce using rule 66 (primary -> named_array_aggregate .)
    COLON           reduce using rule 66 (primary -> named_array_aggregate .)
    PIPE            reduce using rule 66 (primary -> named_array_aggregate .)
    REFASSIGN       reduce using rule 66 (primary -> named_array_aggregate .)
    THEN            reduce using rule 66 (primary -> named_array_aggregate .)
    LOOP            reduce using rule 66 (primary -> named_array_aggregate .)
    SEMICOLON       reduce using rule 66 (primary -> named_array_aggregate .)
    RANGE           reduce using rule 66 (primary -> named_array_aggregate .)


state 78

    (68) primary -> qualified_expression .

    POWER           reduce using rule 68 (primary -> qualified_expression .)
    TIMES           reduce using rule 68 (primary -> qualified_expression .)
    DIVIDE          reduce using rule 68 (primary -> qualified_expression .)
    MOD             reduce using rule 68 (primary -> qualified_expression .)
    REM             reduce using rule 68 (primary -> qualified_expression .)
    DOTDOT          reduce using rule 68 (primary -> qualified_expression .)
    EQUAL           reduce using rule 68 (primary -> qualified_expression .)
    NOTEQUAL        reduce using rule 68 (primary -> qualified_expression .)
    LESSTHAN        reduce using rule 68 (primary -> qualified_expression .)
    LESSTHANEQUAL   reduce using rule 68 (primary -> qualified_expression .)
    GREATERTHAN     reduce using rule 68 (primary -> qualified_expression .)
    GREATERTHANEQUAL reduce using rule 68 (primary -> qualified_expression .)
    IN              reduce using rule 68 (primary -> qualified_expression .)
    NOT             reduce using rule 68 (primary -> qualified_expression .)
    PLUS            reduce using rule 68 (primary -> qualified_expression .)
    MINUS           reduce using rule 68 (primary -> qualified_expression .)
    CONCAT          reduce using rule 68 (primary -> qualified_expression .)
    AND             reduce using rule 68 (primary -> qualified_expression .)
    OR              reduce using rule 68 (primary -> qualified_expression .)
    XOR             reduce using rule 68 (primary -> qualified_expression .)
    NULL            reduce using rule 68 (primary -> qualified_expression .)
    LPAREN          reduce using rule 68 (primary -> qualified_expression .)
    NUMBER_INT      reduce using rule 68 (primary -> qualified_expression .)
    NUMBER_FLOAT    reduce using rule 68 (primary -> qualified_expression .)
    NUMBER_EXPONENT reduce using rule 68 (primary -> qualified_expression .)
    COMMA           reduce using rule 68 (primary -> qualified_expression .)
    ID              reduce using rule 68 (primary -> qualified_expression .)
    SINGLEQUOTE     reduce using rule 68 (primary -> qualified_expression .)
    RPAREN          reduce using rule 68 (primary -> qualified_expression .)
    COLON           reduce using rule 68 (primary -> qualified_expression .)
    PIPE            reduce using rule 68 (primary -> qualified_expression .)
    REFASSIGN       reduce using rule 68 (primary -> qualified_expression .)
    THEN            reduce using rule 68 (primary -> qualified_expression .)
    LOOP            reduce using rule 68 (primary -> qualified_expression .)
    SEMICOLON       reduce using rule 68 (primary -> qualified_expression .)
    RANGE           reduce using rule 68 (primary -> qualified_expression .)


state 79

    (61) numeric_literal -> NUMBER_INT .

    POWER           reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    TIMES           reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    DIVIDE          reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    MOD             reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    REM             reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    DOTDOT          reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    EQUAL           reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    NOTEQUAL        reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    LESSTHAN        reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    LESSTHANEQUAL   reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    GREATERTHAN     reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    GREATERTHANEQUAL reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    IN              reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    NOT             reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    PLUS            reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    MINUS           reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    CONCAT          reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    AND             reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    OR              reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    XOR             reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    NULL            reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    LPAREN          reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    NUMBER_INT      reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    NUMBER_FLOAT    reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    NUMBER_EXPONENT reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    COMMA           reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    ID              reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    SINGLEQUOTE     reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    RPAREN          reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    COLON           reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    PIPE            reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    REFASSIGN       reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    THEN            reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    LOOP            reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    SEMICOLON       reduce using rule 61 (numeric_literal -> NUMBER_INT .)
    RANGE           reduce using rule 61 (numeric_literal -> NUMBER_INT .)


state 80

    (62) numeric_literal -> NUMBER_FLOAT .

    POWER           reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    TIMES           reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    DIVIDE          reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    MOD             reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    REM             reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    DOTDOT          reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    EQUAL           reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    NOTEQUAL        reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    LESSTHAN        reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    LESSTHANEQUAL   reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    GREATERTHAN     reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    GREATERTHANEQUAL reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    IN              reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    NOT             reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    PLUS            reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    MINUS           reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    CONCAT          reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    AND             reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    OR              reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    XOR             reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    NULL            reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    LPAREN          reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    NUMBER_INT      reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    NUMBER_FLOAT    reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    NUMBER_EXPONENT reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    COMMA           reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    ID              reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    SINGLEQUOTE     reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    RPAREN          reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    COLON           reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    PIPE            reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    REFASSIGN       reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    THEN            reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    LOOP            reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    SEMICOLON       reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)
    RANGE           reduce using rule 62 (numeric_literal -> NUMBER_FLOAT .)


state 81

    (63) numeric_literal -> NUMBER_EXPONENT .

    POWER           reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    TIMES           reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    DIVIDE          reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    MOD             reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    REM             reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    DOTDOT          reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    EQUAL           reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    NOTEQUAL        reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    LESSTHAN        reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    LESSTHANEQUAL   reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    GREATERTHAN     reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    GREATERTHANEQUAL reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    IN              reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    NOT             reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    PLUS            reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    MINUS           reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    CONCAT          reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    AND             reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    OR              reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    XOR             reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    NULL            reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    LPAREN          reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    NUMBER_INT      reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    NUMBER_FLOAT    reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    NUMBER_EXPONENT reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    COMMA           reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    ID              reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    SINGLEQUOTE     reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    RPAREN          reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    COLON           reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    PIPE            reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    REFASSIGN       reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    THEN            reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    LOOP            reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    SEMICOLON       reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)
    RANGE           reduce using rule 63 (numeric_literal -> NUMBER_EXPONENT .)


state 82

    (73) named_array_aggregate -> COMMA . array_component_association
    (74) array_component_association -> . discrete_choice_list REFASSIGN expression
    (75) discrete_choice_list -> . discrete_choice
    (76) discrete_choice_list -> . discrete_choice PIPE discrete_choice discrete_choice_list
    (77) discrete_choice -> . expression
    (78) discrete_choice -> . discrete_range
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    array_component_association    shift and go to state 163
    discrete_choice_list           shift and go to state 128
    expression                     shift and go to state 164
    discrete_choice                shift and go to state 131
    discrete_range                 shift and go to state 132
    relation                       shift and go to state 63
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    simple_expression              shift and go to state 165
    name                           shift and go to state 166
    range_attribute_reference      shift and go to state 66
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 83

    (23) attribute_reference -> name SINGLEQUOTE attribute_designator .

    DOT             reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    LPAREN          reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    SINGLEQUOTE     reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    RPAREN          reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    RANGE           reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    DIGITS          reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    COMMA           reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    POWER           reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    TIMES           reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    DIVIDE          reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    MOD             reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    REM             reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    DOTDOT          reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    EQUAL           reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    NOTEQUAL        reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    LESSTHAN        reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    LESSTHANEQUAL   reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    GREATERTHAN     reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    GREATERTHANEQUAL reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    IN              reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    NOT             reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    PLUS            reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    MINUS           reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    CONCAT          reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    AND             reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    OR              reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    XOR             reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    ASSIGN          reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    SEMICOLON       reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    PIPE            reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    REFASSIGN       reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    NULL            reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    NUMBER_INT      reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    NUMBER_FLOAT    reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    NUMBER_EXPONENT reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    ID              reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    COLON           reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    THEN            reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    LOOP            reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)


state 84

    (24) attribute_designator -> ID .
    (25) attribute_designator -> ID . LPAREN expression RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    DOT             reduce using rule 24 (attribute_designator -> ID .)
    SINGLEQUOTE     reduce using rule 24 (attribute_designator -> ID .)
    RPAREN          reduce using rule 24 (attribute_designator -> ID .)
    COMMA           reduce using rule 24 (attribute_designator -> ID .)
    SEMICOLON       reduce using rule 24 (attribute_designator -> ID .)
    ASSIGN          reduce using rule 24 (attribute_designator -> ID .)
    USE             reduce using rule 24 (attribute_designator -> ID .)
    RANGE           reduce using rule 24 (attribute_designator -> ID .)
    DIGITS          reduce using rule 24 (attribute_designator -> ID .)
    POWER           reduce using rule 24 (attribute_designator -> ID .)
    TIMES           reduce using rule 24 (attribute_designator -> ID .)
    DIVIDE          reduce using rule 24 (attribute_designator -> ID .)
    MOD             reduce using rule 24 (attribute_designator -> ID .)
    REM             reduce using rule 24 (attribute_designator -> ID .)
    DOTDOT          reduce using rule 24 (attribute_designator -> ID .)
    EQUAL           reduce using rule 24 (attribute_designator -> ID .)
    NOTEQUAL        reduce using rule 24 (attribute_designator -> ID .)
    LESSTHAN        reduce using rule 24 (attribute_designator -> ID .)
    LESSTHANEQUAL   reduce using rule 24 (attribute_designator -> ID .)
    GREATERTHAN     reduce using rule 24 (attribute_designator -> ID .)
    GREATERTHANEQUAL reduce using rule 24 (attribute_designator -> ID .)
    IN              reduce using rule 24 (attribute_designator -> ID .)
    NOT             reduce using rule 24 (attribute_designator -> ID .)
    PLUS            reduce using rule 24 (attribute_designator -> ID .)
    MINUS           reduce using rule 24 (attribute_designator -> ID .)
    CONCAT          reduce using rule 24 (attribute_designator -> ID .)
    AND             reduce using rule 24 (attribute_designator -> ID .)
    OR              reduce using rule 24 (attribute_designator -> ID .)
    XOR             reduce using rule 24 (attribute_designator -> ID .)
    NULL            reduce using rule 24 (attribute_designator -> ID .)
    NUMBER_INT      reduce using rule 24 (attribute_designator -> ID .)
    NUMBER_FLOAT    reduce using rule 24 (attribute_designator -> ID .)
    NUMBER_EXPONENT reduce using rule 24 (attribute_designator -> ID .)
    ID              reduce using rule 24 (attribute_designator -> ID .)
    COLON           reduce using rule 24 (attribute_designator -> ID .)
    PIPE            reduce using rule 24 (attribute_designator -> ID .)
    REFASSIGN       reduce using rule 24 (attribute_designator -> ID .)
    THEN            reduce using rule 24 (attribute_designator -> ID .)
    LOOP            reduce using rule 24 (attribute_designator -> ID .)
    LPAREN          shift and go to state 167

  ! LPAREN          [ reduce using rule 24 (attribute_designator -> ID .) ]


state 85

    (128) character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .

    DOT             reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    LPAREN          reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    SINGLEQUOTE     reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    RPAREN          reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    RANGE           reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    DIGITS          reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    COMMA           reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    POWER           reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    TIMES           reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    DIVIDE          reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    MOD             reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    REM             reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    DOTDOT          reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    EQUAL           reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    NOTEQUAL        reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    LESSTHAN        reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    LESSTHANEQUAL   reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    GREATERTHAN     reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    GREATERTHANEQUAL reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    IN              reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    NOT             reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    PLUS            reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    MINUS           reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    CONCAT          reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    AND             reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    OR              reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    XOR             reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    REFASSIGN       reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    ASSIGN          reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    SEMICOLON       reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    PIPE            reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    NULL            reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    NUMBER_INT      reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    NUMBER_FLOAT    reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    NUMBER_EXPONENT reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    ID              reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    COLON           reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    THEN            reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)
    LOOP            reduce using rule 128 (character_literal -> SINGLEQUOTE graphic_character SINGLEQUOTE .)


state 86

    (1) subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements . END designator SEMICOLON
    (2) subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements . END SEMICOLON

    END             shift and go to state 168


state 87

    (160) sequence_of_statements -> statement . sequence_of_statements
    (161) sequence_of_statements -> statement .
    (160) sequence_of_statements -> . statement sequence_of_statements
    (161) sequence_of_statements -> . statement
    (162) statement -> . simple_statement
    (163) statement -> . compound_statement
    (168) simple_statement -> . null_statement
    (169) simple_statement -> . assignment_statement
    (170) simple_statement -> . exit_statement
    (171) simple_statement -> . entry_call_statement
    (172) simple_statement -> . code_statement
    (164) compound_statement -> . if_statement
    (165) compound_statement -> . loop_statement
    (178) null_statement -> . NULL
    (179) assignment_statement -> . name ASSIGN expression SEMICOLON
    (176) exit_statement -> . EXIT SEMICOLON
    (177) exit_statement -> . EXIT name SEMICOLON
    (173) entry_call_statement -> . name SEMICOLON
    (174) entry_call_statement -> . name actual_parameter_part SEMICOLON
    (175) code_statement -> . qualified_expression SEMICOLON
    (156) if_statement -> . IF expression THEN sequence_of_statements if_statemant_loop
    (148) loop_statement -> . LOOP sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> . LOOP sequence_of_statements END LOOP name SEMICOLON
    (150) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (152) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    END             reduce using rule 161 (sequence_of_statements -> statement .)
    ELSIF           reduce using rule 161 (sequence_of_statements -> statement .)
    ELSE            reduce using rule 161 (sequence_of_statements -> statement .)
    NULL            shift and go to state 97
    EXIT            shift and go to state 99
    IF              shift and go to state 101
    LOOP            shift and go to state 102
    WHILE           shift and go to state 103
    FOR             shift and go to state 104
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    statement                      shift and go to state 87
    sequence_of_statements         shift and go to state 169
    simple_statement               shift and go to state 88
    compound_statement             shift and go to state 89
    null_statement                 shift and go to state 90
    assignment_statement           shift and go to state 91
    exit_statement                 shift and go to state 92
    entry_call_statement           shift and go to state 93
    code_statement                 shift and go to state 94
    if_statement                   shift and go to state 95
    loop_statement                 shift and go to state 96
    name                           shift and go to state 98
    qualified_expression           shift and go to state 100
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 88

    (162) statement -> simple_statement .

    NULL            reduce using rule 162 (statement -> simple_statement .)
    EXIT            reduce using rule 162 (statement -> simple_statement .)
    IF              reduce using rule 162 (statement -> simple_statement .)
    LOOP            reduce using rule 162 (statement -> simple_statement .)
    WHILE           reduce using rule 162 (statement -> simple_statement .)
    FOR             reduce using rule 162 (statement -> simple_statement .)
    ID              reduce using rule 162 (statement -> simple_statement .)
    SINGLEQUOTE     reduce using rule 162 (statement -> simple_statement .)
    END             reduce using rule 162 (statement -> simple_statement .)
    ELSIF           reduce using rule 162 (statement -> simple_statement .)
    ELSE            reduce using rule 162 (statement -> simple_statement .)


state 89

    (163) statement -> compound_statement .

    NULL            reduce using rule 163 (statement -> compound_statement .)
    EXIT            reduce using rule 163 (statement -> compound_statement .)
    IF              reduce using rule 163 (statement -> compound_statement .)
    LOOP            reduce using rule 163 (statement -> compound_statement .)
    WHILE           reduce using rule 163 (statement -> compound_statement .)
    FOR             reduce using rule 163 (statement -> compound_statement .)
    ID              reduce using rule 163 (statement -> compound_statement .)
    SINGLEQUOTE     reduce using rule 163 (statement -> compound_statement .)
    END             reduce using rule 163 (statement -> compound_statement .)
    ELSIF           reduce using rule 163 (statement -> compound_statement .)
    ELSE            reduce using rule 163 (statement -> compound_statement .)


state 90

    (168) simple_statement -> null_statement .

    NULL            reduce using rule 168 (simple_statement -> null_statement .)
    EXIT            reduce using rule 168 (simple_statement -> null_statement .)
    IF              reduce using rule 168 (simple_statement -> null_statement .)
    LOOP            reduce using rule 168 (simple_statement -> null_statement .)
    WHILE           reduce using rule 168 (simple_statement -> null_statement .)
    FOR             reduce using rule 168 (simple_statement -> null_statement .)
    ID              reduce using rule 168 (simple_statement -> null_statement .)
    SINGLEQUOTE     reduce using rule 168 (simple_statement -> null_statement .)
    END             reduce using rule 168 (simple_statement -> null_statement .)
    ELSIF           reduce using rule 168 (simple_statement -> null_statement .)
    ELSE            reduce using rule 168 (simple_statement -> null_statement .)


state 91

    (169) simple_statement -> assignment_statement .

    NULL            reduce using rule 169 (simple_statement -> assignment_statement .)
    EXIT            reduce using rule 169 (simple_statement -> assignment_statement .)
    IF              reduce using rule 169 (simple_statement -> assignment_statement .)
    LOOP            reduce using rule 169 (simple_statement -> assignment_statement .)
    WHILE           reduce using rule 169 (simple_statement -> assignment_statement .)
    FOR             reduce using rule 169 (simple_statement -> assignment_statement .)
    ID              reduce using rule 169 (simple_statement -> assignment_statement .)
    SINGLEQUOTE     reduce using rule 169 (simple_statement -> assignment_statement .)
    END             reduce using rule 169 (simple_statement -> assignment_statement .)
    ELSIF           reduce using rule 169 (simple_statement -> assignment_statement .)
    ELSE            reduce using rule 169 (simple_statement -> assignment_statement .)


state 92

    (170) simple_statement -> exit_statement .

    NULL            reduce using rule 170 (simple_statement -> exit_statement .)
    EXIT            reduce using rule 170 (simple_statement -> exit_statement .)
    IF              reduce using rule 170 (simple_statement -> exit_statement .)
    LOOP            reduce using rule 170 (simple_statement -> exit_statement .)
    WHILE           reduce using rule 170 (simple_statement -> exit_statement .)
    FOR             reduce using rule 170 (simple_statement -> exit_statement .)
    ID              reduce using rule 170 (simple_statement -> exit_statement .)
    SINGLEQUOTE     reduce using rule 170 (simple_statement -> exit_statement .)
    END             reduce using rule 170 (simple_statement -> exit_statement .)
    ELSIF           reduce using rule 170 (simple_statement -> exit_statement .)
    ELSE            reduce using rule 170 (simple_statement -> exit_statement .)


state 93

    (171) simple_statement -> entry_call_statement .

    NULL            reduce using rule 171 (simple_statement -> entry_call_statement .)
    EXIT            reduce using rule 171 (simple_statement -> entry_call_statement .)
    IF              reduce using rule 171 (simple_statement -> entry_call_statement .)
    LOOP            reduce using rule 171 (simple_statement -> entry_call_statement .)
    WHILE           reduce using rule 171 (simple_statement -> entry_call_statement .)
    FOR             reduce using rule 171 (simple_statement -> entry_call_statement .)
    ID              reduce using rule 171 (simple_statement -> entry_call_statement .)
    SINGLEQUOTE     reduce using rule 171 (simple_statement -> entry_call_statement .)
    END             reduce using rule 171 (simple_statement -> entry_call_statement .)
    ELSIF           reduce using rule 171 (simple_statement -> entry_call_statement .)
    ELSE            reduce using rule 171 (simple_statement -> entry_call_statement .)


state 94

    (172) simple_statement -> code_statement .

    NULL            reduce using rule 172 (simple_statement -> code_statement .)
    EXIT            reduce using rule 172 (simple_statement -> code_statement .)
    IF              reduce using rule 172 (simple_statement -> code_statement .)
    LOOP            reduce using rule 172 (simple_statement -> code_statement .)
    WHILE           reduce using rule 172 (simple_statement -> code_statement .)
    FOR             reduce using rule 172 (simple_statement -> code_statement .)
    ID              reduce using rule 172 (simple_statement -> code_statement .)
    SINGLEQUOTE     reduce using rule 172 (simple_statement -> code_statement .)
    END             reduce using rule 172 (simple_statement -> code_statement .)
    ELSIF           reduce using rule 172 (simple_statement -> code_statement .)
    ELSE            reduce using rule 172 (simple_statement -> code_statement .)


state 95

    (164) compound_statement -> if_statement .

    NULL            reduce using rule 164 (compound_statement -> if_statement .)
    EXIT            reduce using rule 164 (compound_statement -> if_statement .)
    IF              reduce using rule 164 (compound_statement -> if_statement .)
    LOOP            reduce using rule 164 (compound_statement -> if_statement .)
    WHILE           reduce using rule 164 (compound_statement -> if_statement .)
    FOR             reduce using rule 164 (compound_statement -> if_statement .)
    ID              reduce using rule 164 (compound_statement -> if_statement .)
    SINGLEQUOTE     reduce using rule 164 (compound_statement -> if_statement .)
    END             reduce using rule 164 (compound_statement -> if_statement .)
    ELSIF           reduce using rule 164 (compound_statement -> if_statement .)
    ELSE            reduce using rule 164 (compound_statement -> if_statement .)


state 96

    (165) compound_statement -> loop_statement .

    NULL            reduce using rule 165 (compound_statement -> loop_statement .)
    EXIT            reduce using rule 165 (compound_statement -> loop_statement .)
    IF              reduce using rule 165 (compound_statement -> loop_statement .)
    LOOP            reduce using rule 165 (compound_statement -> loop_statement .)
    WHILE           reduce using rule 165 (compound_statement -> loop_statement .)
    FOR             reduce using rule 165 (compound_statement -> loop_statement .)
    ID              reduce using rule 165 (compound_statement -> loop_statement .)
    SINGLEQUOTE     reduce using rule 165 (compound_statement -> loop_statement .)
    END             reduce using rule 165 (compound_statement -> loop_statement .)
    ELSIF           reduce using rule 165 (compound_statement -> loop_statement .)
    ELSE            reduce using rule 165 (compound_statement -> loop_statement .)


state 97

    (178) null_statement -> NULL .

    NULL            reduce using rule 178 (null_statement -> NULL .)
    EXIT            reduce using rule 178 (null_statement -> NULL .)
    IF              reduce using rule 178 (null_statement -> NULL .)
    LOOP            reduce using rule 178 (null_statement -> NULL .)
    WHILE           reduce using rule 178 (null_statement -> NULL .)
    FOR             reduce using rule 178 (null_statement -> NULL .)
    ID              reduce using rule 178 (null_statement -> NULL .)
    SINGLEQUOTE     reduce using rule 178 (null_statement -> NULL .)
    END             reduce using rule 178 (null_statement -> NULL .)
    ELSIF           reduce using rule 178 (null_statement -> NULL .)
    ELSE            reduce using rule 178 (null_statement -> NULL .)


state 98

    (179) assignment_statement -> name . ASSIGN expression SEMICOLON
    (173) entry_call_statement -> name . SEMICOLON
    (174) entry_call_statement -> name . actual_parameter_part SEMICOLON
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    ASSIGN          shift and go to state 170
    SEMICOLON       shift and go to state 171
    SINGLEQUOTE     shift and go to state 173
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113

  ! ASSIGN          [ reduce using rule 112 (function_call -> name .) ]
  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 172

state 99

    (176) exit_statement -> EXIT . SEMICOLON
    (177) exit_statement -> EXIT . name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    SEMICOLON       shift and go to state 174
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 175
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 100

    (175) code_statement -> qualified_expression . SEMICOLON

    SEMICOLON       shift and go to state 176


state 101

    (156) if_statement -> IF . expression THEN sequence_of_statements if_statemant_loop
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    expression                     shift and go to state 177
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 102

    (148) loop_statement -> LOOP . sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> LOOP . sequence_of_statements END LOOP name SEMICOLON
    (160) sequence_of_statements -> . statement sequence_of_statements
    (161) sequence_of_statements -> . statement
    (162) statement -> . simple_statement
    (163) statement -> . compound_statement
    (168) simple_statement -> . null_statement
    (169) simple_statement -> . assignment_statement
    (170) simple_statement -> . exit_statement
    (171) simple_statement -> . entry_call_statement
    (172) simple_statement -> . code_statement
    (164) compound_statement -> . if_statement
    (165) compound_statement -> . loop_statement
    (178) null_statement -> . NULL
    (179) assignment_statement -> . name ASSIGN expression SEMICOLON
    (176) exit_statement -> . EXIT SEMICOLON
    (177) exit_statement -> . EXIT name SEMICOLON
    (173) entry_call_statement -> . name SEMICOLON
    (174) entry_call_statement -> . name actual_parameter_part SEMICOLON
    (175) code_statement -> . qualified_expression SEMICOLON
    (156) if_statement -> . IF expression THEN sequence_of_statements if_statemant_loop
    (148) loop_statement -> . LOOP sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> . LOOP sequence_of_statements END LOOP name SEMICOLON
    (150) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (152) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 97
    EXIT            shift and go to state 99
    IF              shift and go to state 101
    LOOP            shift and go to state 102
    WHILE           shift and go to state 103
    FOR             shift and go to state 104
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    sequence_of_statements         shift and go to state 179
    name                           shift and go to state 98
    statement                      shift and go to state 87
    simple_statement               shift and go to state 88
    compound_statement             shift and go to state 89
    null_statement                 shift and go to state 90
    assignment_statement           shift and go to state 91
    exit_statement                 shift and go to state 92
    entry_call_statement           shift and go to state 93
    code_statement                 shift and go to state 94
    if_statement                   shift and go to state 95
    loop_statement                 shift and go to state 96
    qualified_expression           shift and go to state 100
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 103

    (150) loop_statement -> WHILE . expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> WHILE . expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    expression                     shift and go to state 180
    name                           shift and go to state 156
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 104

    (152) loop_statement -> FOR . ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> FOR . ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> FOR . ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> FOR . ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON

    ID              shift and go to state 181


state 105

    (130) use_clause -> LPAREN USE name . RPAREN
    (132) use_clause -> LPAREN USE name . use_clause_loop RPAREN
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (134) use_clause_loop -> . COMMA name use_clause_loop
    (135) use_clause_loop -> . COMMA name
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          shift and go to state 182
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35
    COMMA           shift and go to state 184

  ! RPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! COMMA           [ reduce using rule 112 (function_call -> name .) ]

    use_clause_loop                shift and go to state 183
    actual_parameter_part          shift and go to state 36

state 106

    (131) use_clause -> LPAREN TYPE name . RPAREN
    (133) use_clause -> LPAREN TYPE name . use_clause_loop RPAREN
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (134) use_clause_loop -> . COMMA name use_clause_loop
    (135) use_clause_loop -> . COMMA name
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          shift and go to state 185
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35
    COMMA           shift and go to state 184

  ! RPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! COMMA           [ reduce using rule 112 (function_call -> name .) ]

    use_clause_loop                shift and go to state 186
    actual_parameter_part          shift and go to state 36

state 107

    (146) identifier_list -> ID .
    (147) identifier_list -> ID . COMMA identifier_list

    COLON           reduce using rule 146 (identifier_list -> ID .)
    COMMA           shift and go to state 187


state 108

    (137) incomplete_type_definition -> TYPE ID SEMICOLON .

    LPAREN          reduce using rule 137 (incomplete_type_definition -> TYPE ID SEMICOLON .)
    PROCEDURE       reduce using rule 137 (incomplete_type_definition -> TYPE ID SEMICOLON .)
    TYPE            reduce using rule 137 (incomplete_type_definition -> TYPE ID SEMICOLON .)
    COLON           reduce using rule 137 (incomplete_type_definition -> TYPE ID SEMICOLON .)
    FOR             reduce using rule 137 (incomplete_type_definition -> TYPE ID SEMICOLON .)
    BEGIN           reduce using rule 137 (incomplete_type_definition -> TYPE ID SEMICOLON .)


state 109

    (138) incomplete_type_definition -> TYPE ID discriminant_part . SEMICOLON

    SEMICOLON       shift and go to state 188


state 110

    (136) discriminant_part -> identifier_list . COLON name ASSIGN expression

    COLON           shift and go to state 189


state 111

    (145) number_declaration -> COLON CONSTANT ASSIGN . expression SEMICOLON
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    expression                     shift and go to state 190
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 112

    (16) attribute_definition_clause -> FOR name SINGLEQUOTE . attribute_designator USE expression SEMICOLON
    (17) attribute_definition_clause -> FOR name SINGLEQUOTE . attribute_designator USE name SEMICOLON
    (23) attribute_reference -> name SINGLEQUOTE . attribute_designator
    (24) attribute_designator -> . ID
    (25) attribute_designator -> . ID LPAREN expression RPAREN

    ID              shift and go to state 84

    attribute_designator           shift and go to state 191

state 113

    (22) selected_component -> name DOT . selector_name
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE

    ID              shift and go to state 192
    SINGLEQUOTE     shift and go to state 16

    selector_name                  shift and go to state 54
    character_literal              shift and go to state 55

state 114

    (129) enumeration_representation_clause -> FOR direct_name USE . named_array_aggregate SEMICOLON
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association

    LPAREN          shift and go to state 194
    COMMA           shift and go to state 82

    named_array_aggregate          shift and go to state 193

state 115

    (111) slice -> name LPAREN . discrete_range RPAREN
    (20) type_conversion -> name LPAREN . expression RPAREN
    (21) type_conversion -> name LPAREN . name RPAREN
    (18) indexed_component -> name LPAREN . expression RPAREN
    (19) indexed_component -> name LPAREN . expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> LPAREN . parameter_association RPAREN
    (115) actual_parameter_part -> LPAREN . parameter_association actual_parameter_part_loop RPAREN
    (93) index_constraint -> LPAREN . discrete_range RPAREN
    (94) index_constraint -> LPAREN . discrete_range COMMA discrete_range index_constraint RPAREN
    (87) discriminant_constraint -> LPAREN . discriminant_association COMMA discriminant_association RPAREN
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (118) parameter_association -> . expression
    (119) parameter_association -> . name
    (120) parameter_association -> . selector_name REFASSIGN expression
    (121) parameter_association -> . selector_name REFASSIGN name
    (89) discriminant_association -> . selector_name PIPE selector_name REFASSIGN expression
    (90) discriminant_association -> . selector_name PIPE selector_name discriminant_association REFASSIGN expression
    (91) discriminant_association -> . PIPE selector_name
    (92) discriminant_association -> . expression
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    PIPE            shift and go to state 199
    ID              shift and go to state 68
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    name                           shift and go to state 56
    discrete_range                 shift and go to state 195
    expression                     shift and go to state 196
    indexed_component              shift and go to state 15
    parameter_association          shift and go to state 60
    discriminant_association       shift and go to state 197
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    relation                       shift and go to state 63
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 64
    selector_name                  shift and go to state 198
    range_attribute_reference      shift and go to state 66
    simple_expression              shift and go to state 67
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 116

    (21) type_conversion -> name LPAREN name RPAREN .

    DOT             reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    LPAREN          reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    SINGLEQUOTE     reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    RPAREN          reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    RANGE           reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    DIGITS          reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    COMMA           reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    POWER           reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    TIMES           reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    DIVIDE          reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    MOD             reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    REM             reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    DOTDOT          reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    EQUAL           reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    NOTEQUAL        reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    LESSTHAN        reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    LESSTHANEQUAL   reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    GREATERTHAN     reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    GREATERTHANEQUAL reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    IN              reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    NOT             reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    PLUS            reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    MINUS           reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    CONCAT          reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    AND             reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    OR              reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    XOR             reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    ASSIGN          reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    SEMICOLON       reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    PIPE            reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    REFASSIGN       reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    NULL            reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    NUMBER_INT      reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    NUMBER_FLOAT    reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    NUMBER_EXPONENT reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    ID              reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    COLON           reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    THEN            reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)
    LOOP            reduce using rule 21 (type_conversion -> name LPAREN name RPAREN .)


state 117

    (82) subtype_indication -> name constraint .

    RPAREN          reduce using rule 82 (subtype_indication -> name constraint .)
    PIPE            reduce using rule 82 (subtype_indication -> name constraint .)
    REFASSIGN       reduce using rule 82 (subtype_indication -> name constraint .)
    COMMA           reduce using rule 82 (subtype_indication -> name constraint .)
    PLUS            reduce using rule 82 (subtype_indication -> name constraint .)
    MINUS           reduce using rule 82 (subtype_indication -> name constraint .)
    ID              reduce using rule 82 (subtype_indication -> name constraint .)
    SINGLEQUOTE     reduce using rule 82 (subtype_indication -> name constraint .)
    NULL            reduce using rule 82 (subtype_indication -> name constraint .)
    LPAREN          reduce using rule 82 (subtype_indication -> name constraint .)
    NUMBER_INT      reduce using rule 82 (subtype_indication -> name constraint .)
    NUMBER_FLOAT    reduce using rule 82 (subtype_indication -> name constraint .)
    NUMBER_EXPONENT reduce using rule 82 (subtype_indication -> name constraint .)
    LOOP            reduce using rule 82 (subtype_indication -> name constraint .)


state 118

    (23) attribute_reference -> name SINGLEQUOTE . attribute_designator
    (100) range_attribute_reference -> name SINGLEQUOTE . range_attribute_designator
    (70) qualified_expression -> name SINGLEQUOTE . LPAREN expression RPAREN
    (71) qualified_expression -> name SINGLEQUOTE . named_array_aggregate
    (24) attribute_designator -> . ID
    (25) attribute_designator -> . ID LPAREN expression RPAREN
    (101) range_attribute_designator -> . RANGE
    (102) range_attribute_designator -> . RANGE LPAREN expression RPAREN
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association

    LPAREN          shift and go to state 201
    ID              shift and go to state 84
    RANGE           shift and go to state 203
    COMMA           shift and go to state 82

    attribute_designator           shift and go to state 83
    range_attribute_designator     shift and go to state 200
    named_array_aggregate          shift and go to state 202

state 119

    (83) constraint -> range_constraint .

    RPAREN          reduce using rule 83 (constraint -> range_constraint .)
    COMMA           reduce using rule 83 (constraint -> range_constraint .)
    PIPE            reduce using rule 83 (constraint -> range_constraint .)
    REFASSIGN       reduce using rule 83 (constraint -> range_constraint .)
    PLUS            reduce using rule 83 (constraint -> range_constraint .)
    MINUS           reduce using rule 83 (constraint -> range_constraint .)
    ID              reduce using rule 83 (constraint -> range_constraint .)
    SINGLEQUOTE     reduce using rule 83 (constraint -> range_constraint .)
    NULL            reduce using rule 83 (constraint -> range_constraint .)
    LPAREN          reduce using rule 83 (constraint -> range_constraint .)
    NUMBER_INT      reduce using rule 83 (constraint -> range_constraint .)
    NUMBER_FLOAT    reduce using rule 83 (constraint -> range_constraint .)
    NUMBER_EXPONENT reduce using rule 83 (constraint -> range_constraint .)
    LOOP            reduce using rule 83 (constraint -> range_constraint .)


state 120

    (84) constraint -> digits_constraint .

    RPAREN          reduce using rule 84 (constraint -> digits_constraint .)
    COMMA           reduce using rule 84 (constraint -> digits_constraint .)
    PIPE            reduce using rule 84 (constraint -> digits_constraint .)
    REFASSIGN       reduce using rule 84 (constraint -> digits_constraint .)
    PLUS            reduce using rule 84 (constraint -> digits_constraint .)
    MINUS           reduce using rule 84 (constraint -> digits_constraint .)
    ID              reduce using rule 84 (constraint -> digits_constraint .)
    SINGLEQUOTE     reduce using rule 84 (constraint -> digits_constraint .)
    NULL            reduce using rule 84 (constraint -> digits_constraint .)
    LPAREN          reduce using rule 84 (constraint -> digits_constraint .)
    NUMBER_INT      reduce using rule 84 (constraint -> digits_constraint .)
    NUMBER_FLOAT    reduce using rule 84 (constraint -> digits_constraint .)
    NUMBER_EXPONENT reduce using rule 84 (constraint -> digits_constraint .)
    LOOP            reduce using rule 84 (constraint -> digits_constraint .)


state 121

    (85) constraint -> index_constraint .

    RPAREN          reduce using rule 85 (constraint -> index_constraint .)
    COMMA           reduce using rule 85 (constraint -> index_constraint .)
    PIPE            reduce using rule 85 (constraint -> index_constraint .)
    REFASSIGN       reduce using rule 85 (constraint -> index_constraint .)
    PLUS            reduce using rule 85 (constraint -> index_constraint .)
    MINUS           reduce using rule 85 (constraint -> index_constraint .)
    ID              reduce using rule 85 (constraint -> index_constraint .)
    SINGLEQUOTE     reduce using rule 85 (constraint -> index_constraint .)
    NULL            reduce using rule 85 (constraint -> index_constraint .)
    LPAREN          reduce using rule 85 (constraint -> index_constraint .)
    NUMBER_INT      reduce using rule 85 (constraint -> index_constraint .)
    NUMBER_FLOAT    reduce using rule 85 (constraint -> index_constraint .)
    NUMBER_EXPONENT reduce using rule 85 (constraint -> index_constraint .)
    LOOP            reduce using rule 85 (constraint -> index_constraint .)


state 122

    (86) constraint -> discriminant_constraint .

    RPAREN          reduce using rule 86 (constraint -> discriminant_constraint .)
    COMMA           reduce using rule 86 (constraint -> discriminant_constraint .)
    PIPE            reduce using rule 86 (constraint -> discriminant_constraint .)
    REFASSIGN       reduce using rule 86 (constraint -> discriminant_constraint .)
    PLUS            reduce using rule 86 (constraint -> discriminant_constraint .)
    MINUS           reduce using rule 86 (constraint -> discriminant_constraint .)
    ID              reduce using rule 86 (constraint -> discriminant_constraint .)
    SINGLEQUOTE     reduce using rule 86 (constraint -> discriminant_constraint .)
    NULL            reduce using rule 86 (constraint -> discriminant_constraint .)
    LPAREN          reduce using rule 86 (constraint -> discriminant_constraint .)
    NUMBER_INT      reduce using rule 86 (constraint -> discriminant_constraint .)
    NUMBER_FLOAT    reduce using rule 86 (constraint -> discriminant_constraint .)
    NUMBER_EXPONENT reduce using rule 86 (constraint -> discriminant_constraint .)
    LOOP            reduce using rule 86 (constraint -> discriminant_constraint .)


state 123

    (97) range_constraint -> RANGE . range
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    range                          shift and go to state 204
    range_attribute_reference      shift and go to state 66
    simple_expression              shift and go to state 205
    name                           shift and go to state 206
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 124

    (95) digits_constraint -> DIGITS . expression range_constraint
    (96) digits_constraint -> DIGITS . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    expression                     shift and go to state 207
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 125

    (88) discriminant_constraint -> COMMA . discriminant_association
    (89) discriminant_association -> . selector_name PIPE selector_name REFASSIGN expression
    (90) discriminant_association -> . selector_name PIPE selector_name discriminant_association REFASSIGN expression
    (91) discriminant_association -> . PIPE selector_name
    (92) discriminant_association -> . expression
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PIPE            shift and go to state 199
    ID              shift and go to state 211
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    discriminant_association       shift and go to state 208
    selector_name                  shift and go to state 209
    expression                     shift and go to state 210
    character_literal              shift and go to state 212
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    indexed_component              shift and go to state 15

state 126

    (69) primary -> LPAREN expression . RPAREN
    (77) discrete_choice -> expression .

    RPAREN          shift and go to state 213
    PIPE            reduce using rule 77 (discrete_choice -> expression .)
    REFASSIGN       reduce using rule 77 (discrete_choice -> expression .)


state 127

    (72) named_array_aggregate -> LPAREN array_component_association . COMMA array_component_association named_array_aggregate RPAREN

    COMMA           shift and go to state 214


state 128

    (74) array_component_association -> discrete_choice_list . REFASSIGN expression

    REFASSIGN       shift and go to state 215


state 129

    (36) relation -> simple_expression .
    (37) relation -> simple_expression . EQUAL simple_expression
    (38) relation -> simple_expression . NOTEQUAL simple_expression
    (39) relation -> simple_expression . LESSTHAN simple_expression
    (40) relation -> simple_expression . LESSTHANEQUAL simple_expression
    (41) relation -> simple_expression . GREATERTHAN simple_expression
    (42) relation -> simple_expression . GREATERTHANEQUAL simple_expression
    (43) relation -> simple_expression . IN range
    (44) relation -> simple_expression . IN name
    (45) relation -> simple_expression . NOT IN range
    (46) relation -> simple_expression . NOT IN name
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term
    (99) range -> simple_expression . DOTDOT simple_expression

    AND             reduce using rule 36 (relation -> simple_expression .)
    OR              reduce using rule 36 (relation -> simple_expression .)
    XOR             reduce using rule 36 (relation -> simple_expression .)
    EQUAL           shift and go to state 144
    NOTEQUAL        shift and go to state 145
    LESSTHAN        shift and go to state 146
    LESSTHANEQUAL   shift and go to state 147
    GREATERTHAN     shift and go to state 148
    GREATERTHANEQUAL shift and go to state 149
    IN              shift and go to state 150
    NOT             shift and go to state 151
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154
    DOTDOT          shift and go to state 143


state 130

    (81) subtype_indication -> name .
    (82) subtype_indication -> name . constraint
    (100) range_attribute_reference -> name . SINGLEQUOTE range_attribute_designator
    (67) primary -> name .
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (83) constraint -> . range_constraint
    (84) constraint -> . digits_constraint
    (85) constraint -> . index_constraint
    (86) constraint -> . discriminant_constraint
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN
    (97) range_constraint -> . RANGE range
    (95) digits_constraint -> . DIGITS expression range_constraint
    (96) digits_constraint -> . DIGITS expression
    (93) index_constraint -> . LPAREN discrete_range RPAREN
    (94) index_constraint -> . LPAREN discrete_range COMMA discrete_range index_constraint RPAREN
    (87) discriminant_constraint -> . LPAREN discriminant_association COMMA discriminant_association RPAREN
    (88) discriminant_constraint -> . COMMA discriminant_association

  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for PIPE resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for REFASSIGN resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for POWER resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for REM resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for EQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for IN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DOTDOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for AND resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for OR resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for XOR resolved using rule 67 (primary -> name .)
  ! shift/reduce conflict for RANGE resolved as shift
  ! shift/reduce conflict for DIGITS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    PIPE            reduce using rule 81 (subtype_indication -> name .)
    REFASSIGN       reduce using rule 81 (subtype_indication -> name .)
    SINGLEQUOTE     shift and go to state 216
    POWER           reduce using rule 67 (primary -> name .)
    TIMES           reduce using rule 67 (primary -> name .)
    DIVIDE          reduce using rule 67 (primary -> name .)
    MOD             reduce using rule 67 (primary -> name .)
    REM             reduce using rule 67 (primary -> name .)
    EQUAL           reduce using rule 67 (primary -> name .)
    NOTEQUAL        reduce using rule 67 (primary -> name .)
    LESSTHAN        reduce using rule 67 (primary -> name .)
    LESSTHANEQUAL   reduce using rule 67 (primary -> name .)
    GREATERTHAN     reduce using rule 67 (primary -> name .)
    GREATERTHANEQUAL reduce using rule 67 (primary -> name .)
    IN              reduce using rule 67 (primary -> name .)
    NOT             reduce using rule 67 (primary -> name .)
    PLUS            reduce using rule 67 (primary -> name .)
    MINUS           reduce using rule 67 (primary -> name .)
    CONCAT          reduce using rule 67 (primary -> name .)
    DOTDOT          reduce using rule 67 (primary -> name .)
    AND             reduce using rule 67 (primary -> name .)
    OR              reduce using rule 67 (primary -> name .)
    XOR             reduce using rule 67 (primary -> name .)
    LPAREN          shift and go to state 115
    DOT             shift and go to state 113
    RANGE           shift and go to state 123
    DIGITS          shift and go to state 124
    COMMA           shift and go to state 125

  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! RANGE           [ reduce using rule 112 (function_call -> name .) ]
  ! DIGITS          [ reduce using rule 112 (function_call -> name .) ]
  ! COMMA           [ reduce using rule 112 (function_call -> name .) ]
  ! PIPE            [ reduce using rule 112 (function_call -> name .) ]
  ! REFASSIGN       [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]
  ! EQUAL           [ reduce using rule 112 (function_call -> name .) ]
  ! NOTEQUAL        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHAN        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHANEQUAL   [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHAN     [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHANEQUAL [ reduce using rule 112 (function_call -> name .) ]
  ! IN              [ reduce using rule 112 (function_call -> name .) ]
  ! NOT             [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]
  ! DOTDOT          [ reduce using rule 112 (function_call -> name .) ]
  ! AND             [ reduce using rule 112 (function_call -> name .) ]
  ! OR              [ reduce using rule 112 (function_call -> name .) ]
  ! XOR             [ reduce using rule 112 (function_call -> name .) ]

    constraint                     shift and go to state 117
    actual_parameter_part          shift and go to state 36
    range_constraint               shift and go to state 119
    digits_constraint              shift and go to state 120
    index_constraint               shift and go to state 121
    discriminant_constraint        shift and go to state 122

state 131

    (75) discrete_choice_list -> discrete_choice .
    (76) discrete_choice_list -> discrete_choice . PIPE discrete_choice discrete_choice_list

    REFASSIGN       reduce using rule 75 (discrete_choice_list -> discrete_choice .)
    PIPE            shift and go to state 217


state 132

    (78) discrete_choice -> discrete_range .

    PIPE            reduce using rule 78 (discrete_choice -> discrete_range .)
    REFASSIGN       reduce using rule 78 (discrete_choice -> discrete_range .)
    PLUS            reduce using rule 78 (discrete_choice -> discrete_range .)
    MINUS           reduce using rule 78 (discrete_choice -> discrete_range .)
    ID              reduce using rule 78 (discrete_choice -> discrete_range .)
    SINGLEQUOTE     reduce using rule 78 (discrete_choice -> discrete_range .)
    NULL            reduce using rule 78 (discrete_choice -> discrete_range .)
    LPAREN          reduce using rule 78 (discrete_choice -> discrete_range .)
    NUMBER_INT      reduce using rule 78 (discrete_choice -> discrete_range .)
    NUMBER_FLOAT    reduce using rule 78 (discrete_choice -> discrete_range .)
    NUMBER_EXPONENT reduce using rule 78 (discrete_choice -> discrete_range .)
    COMMA           reduce using rule 78 (discrete_choice -> discrete_range .)


state 133

    (111) slice -> name LPAREN discrete_range RPAREN .

    DOT             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    LPAREN          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    SINGLEQUOTE     reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    ASSIGN          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    SEMICOLON       reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    RPAREN          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    COMMA           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    DOTDOT          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    EQUAL           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    NOTEQUAL        reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    LESSTHAN        reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    LESSTHANEQUAL   reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    GREATERTHAN     reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    GREATERTHANEQUAL reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    IN              reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    NOT             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    PLUS            reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    MINUS           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    CONCAT          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    AND             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    OR              reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    XOR             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    NULL            reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    NUMBER_INT      reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    NUMBER_FLOAT    reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    NUMBER_EXPONENT reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    ID              reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    COLON           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    PIPE            reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    REFASSIGN       reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    THEN            reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    LOOP            reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    RANGE           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    POWER           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    TIMES           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    DIVIDE          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    MOD             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    REM             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)


state 134

    (20) type_conversion -> name LPAREN expression RPAREN .
    (18) indexed_component -> name LPAREN expression RPAREN .

  ! reduce/reduce conflict for DOT resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for LPAREN resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for SINGLEQUOTE resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for RANGE resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for DIGITS resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for COMMA resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for POWER resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for TIMES resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for MOD resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for REM resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for DOTDOT resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for EQUAL resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for IN resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for NOT resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for PLUS resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for MINUS resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for CONCAT resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for AND resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for OR resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for XOR resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for PIPE resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for REFASSIGN resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for NULL resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for NUMBER_INT resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for NUMBER_FLOAT resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for NUMBER_EXPONENT resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for ID resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for COLON resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for THEN resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for LOOP resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    DOT             reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    LPAREN          reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    SINGLEQUOTE     reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    RANGE           reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    DIGITS          reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    COMMA           reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    POWER           reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    TIMES           reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    MOD             reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    REM             reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    EQUAL           reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    LESSTHANEQUAL   reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    GREATERTHANEQUAL reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    IN              reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    NOT             reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    CONCAT          reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    AND             reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    OR              reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    XOR             reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    PIPE            reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    REFASSIGN       reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    NULL            reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    NUMBER_FLOAT    reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    NUMBER_EXPONENT reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    ID              reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    COLON           reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    THEN            reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    LOOP            reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)

  ! DOT             [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! LPAREN          [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! SINGLEQUOTE     [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! RPAREN          [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! RANGE           [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! DIGITS          [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! COMMA           [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! POWER           [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! TIMES           [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! DIVIDE          [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! MOD             [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! REM             [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! DOTDOT          [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! EQUAL           [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! NOTEQUAL        [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! LESSTHAN        [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! LESSTHANEQUAL   [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! GREATERTHAN     [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! GREATERTHANEQUAL [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! IN              [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! NOT             [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! PLUS            [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! MINUS           [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! CONCAT          [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! AND             [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! OR              [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! XOR             [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! ASSIGN          [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! SEMICOLON       [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! PIPE            [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! REFASSIGN       [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! NULL            [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! NUMBER_INT      [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! NUMBER_FLOAT    [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! NUMBER_EXPONENT [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! ID              [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! COLON           [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! THEN            [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! LOOP            [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]


state 135

    (19) indexed_component -> name LPAREN expression COLON . indexed_component RPAREN
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 218
    indexed_component              shift and go to state 219
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14

state 136

    (114) actual_parameter_part -> LPAREN parameter_association RPAREN .

    DOT             reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    LPAREN          reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    SINGLEQUOTE     reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    RPAREN          reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    RANGE           reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    DIGITS          reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    COMMA           reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    POWER           reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    TIMES           reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    DIVIDE          reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    MOD             reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    REM             reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    DOTDOT          reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    EQUAL           reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    NOTEQUAL        reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    LESSTHAN        reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    LESSTHANEQUAL   reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    GREATERTHAN     reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    GREATERTHANEQUAL reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    IN              reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    NOT             reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    PLUS            reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    MINUS           reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    CONCAT          reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    AND             reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    OR              reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    XOR             reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    SEMICOLON       reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    ASSIGN          reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    PIPE            reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    REFASSIGN       reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    NULL            reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    NUMBER_INT      reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    NUMBER_FLOAT    reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    NUMBER_EXPONENT reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    ID              reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    COLON           reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    THEN            reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)
    LOOP            reduce using rule 114 (actual_parameter_part -> LPAREN parameter_association RPAREN .)


state 137

    (115) actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop . RPAREN

    RPAREN          shift and go to state 220


state 138

    (116) actual_parameter_part_loop -> COMMA . parameter_association actual_parameter_part_loop
    (117) actual_parameter_part_loop -> COMMA . parameter_association
    (118) parameter_association -> . expression
    (119) parameter_association -> . name
    (120) parameter_association -> . selector_name REFASSIGN expression
    (121) parameter_association -> . selector_name REFASSIGN name
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 211
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    parameter_association          shift and go to state 221
    expression                     shift and go to state 222
    name                           shift and go to state 223
    selector_name                  shift and go to state 65
    relation                       shift and go to state 63
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 64
    indexed_component              shift and go to state 15
    simple_expression              shift and go to state 178
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 139

    (26) expression -> relation AND . relation
    (27) expression -> relation AND . relation expression
    (28) expression -> relation AND . THEN relation
    (29) expression -> relation AND . THEN relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    THEN            shift and go to state 225
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    relation                       shift and go to state 224
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 140

    (30) expression -> relation OR . relation
    (31) expression -> relation OR . relation expression
    (32) expression -> relation OR . ELSE relation
    (33) expression -> relation OR . ELSE relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    ELSE            shift and go to state 227
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    relation                       shift and go to state 226
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 141

    (34) expression -> relation XOR . relation
    (35) expression -> relation XOR . relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    relation                       shift and go to state 228
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 142

    (120) parameter_association -> selector_name REFASSIGN . expression
    (121) parameter_association -> selector_name REFASSIGN . name
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    expression                     shift and go to state 229
    name                           shift and go to state 230
    relation                       shift and go to state 63
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    simple_expression              shift and go to state 178
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 143

    (99) range -> simple_expression DOTDOT . simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    simple_expression              shift and go to state 231
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 144

    (37) relation -> simple_expression EQUAL . simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    simple_expression              shift and go to state 232
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 145

    (38) relation -> simple_expression NOTEQUAL . simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    simple_expression              shift and go to state 233
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 146

    (39) relation -> simple_expression LESSTHAN . simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    simple_expression              shift and go to state 234
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 147

    (40) relation -> simple_expression LESSTHANEQUAL . simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    simple_expression              shift and go to state 235
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 148

    (41) relation -> simple_expression GREATERTHAN . simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    simple_expression              shift and go to state 236
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 149

    (42) relation -> simple_expression GREATERTHANEQUAL . simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    simple_expression              shift and go to state 237
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 150

    (43) relation -> simple_expression IN . range
    (44) relation -> simple_expression IN . name
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    simple_expression              shift and go to state 205
    range                          shift and go to state 238
    name                           shift and go to state 239
    range_attribute_reference      shift and go to state 66
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 151

    (45) relation -> simple_expression NOT . IN range
    (46) relation -> simple_expression NOT . IN name

    IN              shift and go to state 240


state 152

    (47) simple_expression -> simple_expression PLUS . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    term                           shift and go to state 241
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 153

    (48) simple_expression -> simple_expression MINUS . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    term                           shift and go to state 242
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 154

    (49) simple_expression -> simple_expression CONCAT . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    term                           shift and go to state 243
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 155

    (51) unaryExp -> PLUS term .

    DOTDOT          reduce using rule 51 (unaryExp -> PLUS term .)
    EQUAL           reduce using rule 51 (unaryExp -> PLUS term .)
    NOTEQUAL        reduce using rule 51 (unaryExp -> PLUS term .)
    LESSTHAN        reduce using rule 51 (unaryExp -> PLUS term .)
    LESSTHANEQUAL   reduce using rule 51 (unaryExp -> PLUS term .)
    GREATERTHAN     reduce using rule 51 (unaryExp -> PLUS term .)
    GREATERTHANEQUAL reduce using rule 51 (unaryExp -> PLUS term .)
    IN              reduce using rule 51 (unaryExp -> PLUS term .)
    NOT             reduce using rule 51 (unaryExp -> PLUS term .)
    PLUS            reduce using rule 51 (unaryExp -> PLUS term .)
    MINUS           reduce using rule 51 (unaryExp -> PLUS term .)
    CONCAT          reduce using rule 51 (unaryExp -> PLUS term .)
    AND             reduce using rule 51 (unaryExp -> PLUS term .)
    OR              reduce using rule 51 (unaryExp -> PLUS term .)
    XOR             reduce using rule 51 (unaryExp -> PLUS term .)
    NULL            reduce using rule 51 (unaryExp -> PLUS term .)
    LPAREN          reduce using rule 51 (unaryExp -> PLUS term .)
    NUMBER_INT      reduce using rule 51 (unaryExp -> PLUS term .)
    NUMBER_FLOAT    reduce using rule 51 (unaryExp -> PLUS term .)
    NUMBER_EXPONENT reduce using rule 51 (unaryExp -> PLUS term .)
    COMMA           reduce using rule 51 (unaryExp -> PLUS term .)
    ID              reduce using rule 51 (unaryExp -> PLUS term .)
    SINGLEQUOTE     reduce using rule 51 (unaryExp -> PLUS term .)
    RPAREN          reduce using rule 51 (unaryExp -> PLUS term .)
    COLON           reduce using rule 51 (unaryExp -> PLUS term .)
    PIPE            reduce using rule 51 (unaryExp -> PLUS term .)
    REFASSIGN       reduce using rule 51 (unaryExp -> PLUS term .)
    THEN            reduce using rule 51 (unaryExp -> PLUS term .)
    LOOP            reduce using rule 51 (unaryExp -> PLUS term .)
    SEMICOLON       reduce using rule 51 (unaryExp -> PLUS term .)
    RANGE           reduce using rule 51 (unaryExp -> PLUS term .)
    POWER           reduce using rule 51 (unaryExp -> PLUS term .)
    TIMES           reduce using rule 51 (unaryExp -> PLUS term .)
    DIVIDE          reduce using rule 51 (unaryExp -> PLUS term .)
    MOD             reduce using rule 51 (unaryExp -> PLUS term .)
    REM             reduce using rule 51 (unaryExp -> PLUS term .)


state 156

    (67) primary -> name .
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for DOTDOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for EQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for IN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for AND resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for OR resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for XOR resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NULL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NUMBER_INT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NUMBER_FLOAT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NUMBER_EXPONENT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for COMMA resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for ID resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for RPAREN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for COLON resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for PIPE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for REFASSIGN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for THEN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LOOP resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for RANGE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for POWER resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for REM resolved using rule 67 (primary -> name .)
    DOTDOT          reduce using rule 67 (primary -> name .)
    EQUAL           reduce using rule 67 (primary -> name .)
    NOTEQUAL        reduce using rule 67 (primary -> name .)
    LESSTHAN        reduce using rule 67 (primary -> name .)
    LESSTHANEQUAL   reduce using rule 67 (primary -> name .)
    GREATERTHAN     reduce using rule 67 (primary -> name .)
    GREATERTHANEQUAL reduce using rule 67 (primary -> name .)
    IN              reduce using rule 67 (primary -> name .)
    NOT             reduce using rule 67 (primary -> name .)
    PLUS            reduce using rule 67 (primary -> name .)
    MINUS           reduce using rule 67 (primary -> name .)
    CONCAT          reduce using rule 67 (primary -> name .)
    AND             reduce using rule 67 (primary -> name .)
    OR              reduce using rule 67 (primary -> name .)
    XOR             reduce using rule 67 (primary -> name .)
    NULL            reduce using rule 67 (primary -> name .)
    NUMBER_INT      reduce using rule 67 (primary -> name .)
    NUMBER_FLOAT    reduce using rule 67 (primary -> name .)
    NUMBER_EXPONENT reduce using rule 67 (primary -> name .)
    COMMA           reduce using rule 67 (primary -> name .)
    ID              reduce using rule 67 (primary -> name .)
    RPAREN          reduce using rule 67 (primary -> name .)
    COLON           reduce using rule 67 (primary -> name .)
    PIPE            reduce using rule 67 (primary -> name .)
    REFASSIGN       reduce using rule 67 (primary -> name .)
    THEN            reduce using rule 67 (primary -> name .)
    LOOP            reduce using rule 67 (primary -> name .)
    SEMICOLON       reduce using rule 67 (primary -> name .)
    RANGE           reduce using rule 67 (primary -> name .)
    POWER           reduce using rule 67 (primary -> name .)
    TIMES           reduce using rule 67 (primary -> name .)
    DIVIDE          reduce using rule 67 (primary -> name .)
    MOD             reduce using rule 67 (primary -> name .)
    REM             reduce using rule 67 (primary -> name .)
    SINGLEQUOTE     shift and go to state 173
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113

  ! LPAREN          [ reduce using rule 67 (primary -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 67 (primary -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! DOTDOT          [ reduce using rule 112 (function_call -> name .) ]
  ! EQUAL           [ reduce using rule 112 (function_call -> name .) ]
  ! NOTEQUAL        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHAN        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHANEQUAL   [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHAN     [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHANEQUAL [ reduce using rule 112 (function_call -> name .) ]
  ! IN              [ reduce using rule 112 (function_call -> name .) ]
  ! NOT             [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]
  ! AND             [ reduce using rule 112 (function_call -> name .) ]
  ! OR              [ reduce using rule 112 (function_call -> name .) ]
  ! XOR             [ reduce using rule 112 (function_call -> name .) ]
  ! NULL            [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_INT      [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_FLOAT    [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_EXPONENT [ reduce using rule 112 (function_call -> name .) ]
  ! COMMA           [ reduce using rule 112 (function_call -> name .) ]
  ! ID              [ reduce using rule 112 (function_call -> name .) ]
  ! RPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! COLON           [ reduce using rule 112 (function_call -> name .) ]
  ! PIPE            [ reduce using rule 112 (function_call -> name .) ]
  ! REFASSIGN       [ reduce using rule 112 (function_call -> name .) ]
  ! THEN            [ reduce using rule 112 (function_call -> name .) ]
  ! LOOP            [ reduce using rule 112 (function_call -> name .) ]
  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! RANGE           [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 157

    (52) unaryExp -> MINUS term .

    DOTDOT          reduce using rule 52 (unaryExp -> MINUS term .)
    EQUAL           reduce using rule 52 (unaryExp -> MINUS term .)
    NOTEQUAL        reduce using rule 52 (unaryExp -> MINUS term .)
    LESSTHAN        reduce using rule 52 (unaryExp -> MINUS term .)
    LESSTHANEQUAL   reduce using rule 52 (unaryExp -> MINUS term .)
    GREATERTHAN     reduce using rule 52 (unaryExp -> MINUS term .)
    GREATERTHANEQUAL reduce using rule 52 (unaryExp -> MINUS term .)
    IN              reduce using rule 52 (unaryExp -> MINUS term .)
    NOT             reduce using rule 52 (unaryExp -> MINUS term .)
    PLUS            reduce using rule 52 (unaryExp -> MINUS term .)
    MINUS           reduce using rule 52 (unaryExp -> MINUS term .)
    CONCAT          reduce using rule 52 (unaryExp -> MINUS term .)
    AND             reduce using rule 52 (unaryExp -> MINUS term .)
    OR              reduce using rule 52 (unaryExp -> MINUS term .)
    XOR             reduce using rule 52 (unaryExp -> MINUS term .)
    NULL            reduce using rule 52 (unaryExp -> MINUS term .)
    LPAREN          reduce using rule 52 (unaryExp -> MINUS term .)
    NUMBER_INT      reduce using rule 52 (unaryExp -> MINUS term .)
    NUMBER_FLOAT    reduce using rule 52 (unaryExp -> MINUS term .)
    NUMBER_EXPONENT reduce using rule 52 (unaryExp -> MINUS term .)
    COMMA           reduce using rule 52 (unaryExp -> MINUS term .)
    ID              reduce using rule 52 (unaryExp -> MINUS term .)
    SINGLEQUOTE     reduce using rule 52 (unaryExp -> MINUS term .)
    RPAREN          reduce using rule 52 (unaryExp -> MINUS term .)
    COLON           reduce using rule 52 (unaryExp -> MINUS term .)
    PIPE            reduce using rule 52 (unaryExp -> MINUS term .)
    REFASSIGN       reduce using rule 52 (unaryExp -> MINUS term .)
    THEN            reduce using rule 52 (unaryExp -> MINUS term .)
    LOOP            reduce using rule 52 (unaryExp -> MINUS term .)
    SEMICOLON       reduce using rule 52 (unaryExp -> MINUS term .)
    RANGE           reduce using rule 52 (unaryExp -> MINUS term .)
    POWER           reduce using rule 52 (unaryExp -> MINUS term .)
    TIMES           reduce using rule 52 (unaryExp -> MINUS term .)
    DIVIDE          reduce using rule 52 (unaryExp -> MINUS term .)
    MOD             reduce using rule 52 (unaryExp -> MINUS term .)
    REM             reduce using rule 52 (unaryExp -> MINUS term .)


state 158

    (55) term -> factor TIMES . factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    factor                         shift and go to state 244
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 159

    (56) term -> factor DIVIDE . factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    factor                         shift and go to state 245
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 160

    (57) term -> factor MOD . factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    factor                         shift and go to state 246
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 161

    (58) term -> factor REM . factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    factor                         shift and go to state 247
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 162

    (60) factor -> primary POWER . primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    primary                        shift and go to state 248
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 163

    (73) named_array_aggregate -> COMMA array_component_association .

    POWER           reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    TIMES           reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    DIVIDE          reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    MOD             reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    REM             reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    DOTDOT          reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    EQUAL           reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    NOTEQUAL        reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    LESSTHAN        reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    LESSTHANEQUAL   reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    GREATERTHAN     reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    GREATERTHANEQUAL reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    IN              reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    NOT             reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    PLUS            reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    MINUS           reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    CONCAT          reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    AND             reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    OR              reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    XOR             reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    NULL            reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    LPAREN          reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    NUMBER_INT      reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    NUMBER_FLOAT    reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    NUMBER_EXPONENT reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    COMMA           reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    ID              reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    SINGLEQUOTE     reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    RPAREN          reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    COLON           reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    PIPE            reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    REFASSIGN       reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    THEN            reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    LOOP            reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    SEMICOLON       reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)
    RANGE           reduce using rule 73 (named_array_aggregate -> COMMA array_component_association .)


state 164

    (77) discrete_choice -> expression .

    PIPE            reduce using rule 77 (discrete_choice -> expression .)
    REFASSIGN       reduce using rule 77 (discrete_choice -> expression .)
    PLUS            reduce using rule 77 (discrete_choice -> expression .)
    MINUS           reduce using rule 77 (discrete_choice -> expression .)
    ID              reduce using rule 77 (discrete_choice -> expression .)
    SINGLEQUOTE     reduce using rule 77 (discrete_choice -> expression .)
    NULL            reduce using rule 77 (discrete_choice -> expression .)
    LPAREN          reduce using rule 77 (discrete_choice -> expression .)
    NUMBER_INT      reduce using rule 77 (discrete_choice -> expression .)
    NUMBER_FLOAT    reduce using rule 77 (discrete_choice -> expression .)
    NUMBER_EXPONENT reduce using rule 77 (discrete_choice -> expression .)
    COMMA           reduce using rule 77 (discrete_choice -> expression .)


state 165

    (36) relation -> simple_expression .
    (37) relation -> simple_expression . EQUAL simple_expression
    (38) relation -> simple_expression . NOTEQUAL simple_expression
    (39) relation -> simple_expression . LESSTHAN simple_expression
    (40) relation -> simple_expression . LESSTHANEQUAL simple_expression
    (41) relation -> simple_expression . GREATERTHAN simple_expression
    (42) relation -> simple_expression . GREATERTHANEQUAL simple_expression
    (43) relation -> simple_expression . IN range
    (44) relation -> simple_expression . IN name
    (45) relation -> simple_expression . NOT IN range
    (46) relation -> simple_expression . NOT IN name
    (99) range -> simple_expression . DOTDOT simple_expression
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

    AND             reduce using rule 36 (relation -> simple_expression .)
    OR              reduce using rule 36 (relation -> simple_expression .)
    XOR             reduce using rule 36 (relation -> simple_expression .)
    EQUAL           shift and go to state 144
    NOTEQUAL        shift and go to state 145
    LESSTHAN        shift and go to state 146
    LESSTHANEQUAL   shift and go to state 147
    GREATERTHAN     shift and go to state 148
    GREATERTHANEQUAL shift and go to state 149
    IN              shift and go to state 150
    NOT             shift and go to state 151
    DOTDOT          shift and go to state 143
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154


state 166

    (81) subtype_indication -> name .
    (82) subtype_indication -> name . constraint
    (100) range_attribute_reference -> name . SINGLEQUOTE range_attribute_designator
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (67) primary -> name .
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (83) constraint -> . range_constraint
    (84) constraint -> . digits_constraint
    (85) constraint -> . index_constraint
    (86) constraint -> . discriminant_constraint
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN
    (97) range_constraint -> . RANGE range
    (95) digits_constraint -> . DIGITS expression range_constraint
    (96) digits_constraint -> . DIGITS expression
    (93) index_constraint -> . LPAREN discrete_range RPAREN
    (94) index_constraint -> . LPAREN discrete_range COMMA discrete_range index_constraint RPAREN
    (87) discriminant_constraint -> . LPAREN discriminant_association COMMA discriminant_association RPAREN
    (88) discriminant_constraint -> . COMMA discriminant_association

  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for PIPE resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for REFASSIGN resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for PLUS resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for MINUS resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for ID resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for NULL resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for NUMBER_INT resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for NUMBER_FLOAT resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for NUMBER_EXPONENT resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for LOOP resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for RPAREN resolved using rule 81 (subtype_indication -> name .)
  ! reduce/reduce conflict for POWER resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for REM resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for EQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for IN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DOTDOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for AND resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for OR resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for XOR resolved using rule 67 (primary -> name .)
  ! shift/reduce conflict for RANGE resolved as shift
  ! shift/reduce conflict for DIGITS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    PIPE            reduce using rule 81 (subtype_indication -> name .)
    REFASSIGN       reduce using rule 81 (subtype_indication -> name .)
    ID              reduce using rule 81 (subtype_indication -> name .)
    NULL            reduce using rule 81 (subtype_indication -> name .)
    NUMBER_INT      reduce using rule 81 (subtype_indication -> name .)
    NUMBER_FLOAT    reduce using rule 81 (subtype_indication -> name .)
    NUMBER_EXPONENT reduce using rule 81 (subtype_indication -> name .)
    LOOP            reduce using rule 81 (subtype_indication -> name .)
    RPAREN          reduce using rule 81 (subtype_indication -> name .)
    SINGLEQUOTE     shift and go to state 216
    LPAREN          shift and go to state 115
    DOT             shift and go to state 113
    POWER           reduce using rule 67 (primary -> name .)
    TIMES           reduce using rule 67 (primary -> name .)
    DIVIDE          reduce using rule 67 (primary -> name .)
    MOD             reduce using rule 67 (primary -> name .)
    REM             reduce using rule 67 (primary -> name .)
    EQUAL           reduce using rule 67 (primary -> name .)
    NOTEQUAL        reduce using rule 67 (primary -> name .)
    LESSTHAN        reduce using rule 67 (primary -> name .)
    LESSTHANEQUAL   reduce using rule 67 (primary -> name .)
    GREATERTHAN     reduce using rule 67 (primary -> name .)
    GREATERTHANEQUAL reduce using rule 67 (primary -> name .)
    IN              reduce using rule 67 (primary -> name .)
    NOT             reduce using rule 67 (primary -> name .)
    DOTDOT          reduce using rule 67 (primary -> name .)
    PLUS            reduce using rule 67 (primary -> name .)
    MINUS           reduce using rule 67 (primary -> name .)
    CONCAT          reduce using rule 67 (primary -> name .)
    AND             reduce using rule 67 (primary -> name .)
    OR              reduce using rule 67 (primary -> name .)
    XOR             reduce using rule 67 (primary -> name .)
    RANGE           shift and go to state 123
    DIGITS          shift and go to state 124
    COMMA           shift and go to state 125

  ! PLUS            [ reduce using rule 81 (subtype_indication -> name .) ]
  ! MINUS           [ reduce using rule 81 (subtype_indication -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 81 (subtype_indication -> name .) ]
  ! LPAREN          [ reduce using rule 81 (subtype_indication -> name .) ]
  ! COMMA           [ reduce using rule 81 (subtype_indication -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! RANGE           [ reduce using rule 112 (function_call -> name .) ]
  ! DIGITS          [ reduce using rule 112 (function_call -> name .) ]
  ! COMMA           [ reduce using rule 112 (function_call -> name .) ]
  ! PIPE            [ reduce using rule 112 (function_call -> name .) ]
  ! REFASSIGN       [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]
  ! EQUAL           [ reduce using rule 112 (function_call -> name .) ]
  ! NOTEQUAL        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHAN        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHANEQUAL   [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHAN     [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHANEQUAL [ reduce using rule 112 (function_call -> name .) ]
  ! IN              [ reduce using rule 112 (function_call -> name .) ]
  ! NOT             [ reduce using rule 112 (function_call -> name .) ]
  ! DOTDOT          [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]
  ! AND             [ reduce using rule 112 (function_call -> name .) ]
  ! OR              [ reduce using rule 112 (function_call -> name .) ]
  ! XOR             [ reduce using rule 112 (function_call -> name .) ]
  ! ID              [ reduce using rule 112 (function_call -> name .) ]
  ! NULL            [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_INT      [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_FLOAT    [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_EXPONENT [ reduce using rule 112 (function_call -> name .) ]
  ! LOOP            [ reduce using rule 112 (function_call -> name .) ]
  ! RPAREN          [ reduce using rule 112 (function_call -> name .) ]

    constraint                     shift and go to state 117
    actual_parameter_part          shift and go to state 36
    range_constraint               shift and go to state 119
    digits_constraint              shift and go to state 120
    index_constraint               shift and go to state 121
    discriminant_constraint        shift and go to state 122

state 167

    (25) attribute_designator -> ID LPAREN . expression RPAREN
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    expression                     shift and go to state 249
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 168

    (1) subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END . designator SEMICOLON
    (2) subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END . SEMICOLON
    (3) designator -> . name DOT ID
    (4) designator -> . ID
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    SEMICOLON       shift and go to state 251
    ID              shift and go to state 253
    SINGLEQUOTE     shift and go to state 16

    designator                     shift and go to state 250
    name                           shift and go to state 252
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 169

    (160) sequence_of_statements -> statement sequence_of_statements .

    END             reduce using rule 160 (sequence_of_statements -> statement sequence_of_statements .)
    ELSIF           reduce using rule 160 (sequence_of_statements -> statement sequence_of_statements .)
    ELSE            reduce using rule 160 (sequence_of_statements -> statement sequence_of_statements .)


state 170

    (179) assignment_statement -> name ASSIGN . expression SEMICOLON
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 156
    expression                     shift and go to state 254
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 171

    (173) entry_call_statement -> name SEMICOLON .

    NULL            reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    EXIT            reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    IF              reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    LOOP            reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    WHILE           reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    FOR             reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    ID              reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    SINGLEQUOTE     reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    END             reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    ELSIF           reduce using rule 173 (entry_call_statement -> name SEMICOLON .)
    ELSE            reduce using rule 173 (entry_call_statement -> name SEMICOLON .)


state 172

    (174) entry_call_statement -> name actual_parameter_part . SEMICOLON
    (113) function_call -> name actual_parameter_part .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 255
    ASSIGN          reduce using rule 113 (function_call -> name actual_parameter_part .)
    SINGLEQUOTE     reduce using rule 113 (function_call -> name actual_parameter_part .)
    LPAREN          reduce using rule 113 (function_call -> name actual_parameter_part .)
    DOT             reduce using rule 113 (function_call -> name actual_parameter_part .)

  ! SEMICOLON       [ reduce using rule 113 (function_call -> name actual_parameter_part .) ]


state 173

    (70) qualified_expression -> name SINGLEQUOTE . LPAREN expression RPAREN
    (71) qualified_expression -> name SINGLEQUOTE . named_array_aggregate
    (23) attribute_reference -> name SINGLEQUOTE . attribute_designator
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (24) attribute_designator -> . ID
    (25) attribute_designator -> . ID LPAREN expression RPAREN

    LPAREN          shift and go to state 201
    COMMA           shift and go to state 82
    ID              shift and go to state 84

    named_array_aggregate          shift and go to state 202
    attribute_designator           shift and go to state 83

state 174

    (176) exit_statement -> EXIT SEMICOLON .

    NULL            reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    EXIT            reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    IF              reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    LOOP            reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    WHILE           reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    FOR             reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    ID              reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    SINGLEQUOTE     reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    END             reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    ELSIF           reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)
    ELSE            reduce using rule 176 (exit_statement -> EXIT SEMICOLON .)


state 175

    (177) exit_statement -> EXIT name . SEMICOLON
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    SEMICOLON       shift and go to state 256
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35

  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 176

    (175) code_statement -> qualified_expression SEMICOLON .

    NULL            reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    EXIT            reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    IF              reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    LOOP            reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    WHILE           reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    FOR             reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    ID              reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    SINGLEQUOTE     reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    END             reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    ELSIF           reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)
    ELSE            reduce using rule 175 (code_statement -> qualified_expression SEMICOLON .)


state 177

    (156) if_statement -> IF expression . THEN sequence_of_statements if_statemant_loop

    THEN            shift and go to state 257


state 178

    (36) relation -> simple_expression .
    (37) relation -> simple_expression . EQUAL simple_expression
    (38) relation -> simple_expression . NOTEQUAL simple_expression
    (39) relation -> simple_expression . LESSTHAN simple_expression
    (40) relation -> simple_expression . LESSTHANEQUAL simple_expression
    (41) relation -> simple_expression . GREATERTHAN simple_expression
    (42) relation -> simple_expression . GREATERTHANEQUAL simple_expression
    (43) relation -> simple_expression . IN range
    (44) relation -> simple_expression . IN name
    (45) relation -> simple_expression . NOT IN range
    (46) relation -> simple_expression . NOT IN name
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    AND             reduce using rule 36 (relation -> simple_expression .)
    OR              reduce using rule 36 (relation -> simple_expression .)
    XOR             reduce using rule 36 (relation -> simple_expression .)
    DOTDOT          reduce using rule 36 (relation -> simple_expression .)
    NULL            reduce using rule 36 (relation -> simple_expression .)
    LPAREN          reduce using rule 36 (relation -> simple_expression .)
    NUMBER_INT      reduce using rule 36 (relation -> simple_expression .)
    NUMBER_FLOAT    reduce using rule 36 (relation -> simple_expression .)
    NUMBER_EXPONENT reduce using rule 36 (relation -> simple_expression .)
    COMMA           reduce using rule 36 (relation -> simple_expression .)
    ID              reduce using rule 36 (relation -> simple_expression .)
    SINGLEQUOTE     reduce using rule 36 (relation -> simple_expression .)
    RPAREN          reduce using rule 36 (relation -> simple_expression .)
    COLON           reduce using rule 36 (relation -> simple_expression .)
    PIPE            reduce using rule 36 (relation -> simple_expression .)
    REFASSIGN       reduce using rule 36 (relation -> simple_expression .)
    THEN            reduce using rule 36 (relation -> simple_expression .)
    LOOP            reduce using rule 36 (relation -> simple_expression .)
    SEMICOLON       reduce using rule 36 (relation -> simple_expression .)
    RANGE           reduce using rule 36 (relation -> simple_expression .)
    POWER           reduce using rule 36 (relation -> simple_expression .)
    TIMES           reduce using rule 36 (relation -> simple_expression .)
    DIVIDE          reduce using rule 36 (relation -> simple_expression .)
    MOD             reduce using rule 36 (relation -> simple_expression .)
    REM             reduce using rule 36 (relation -> simple_expression .)
    EQUAL           shift and go to state 144
    NOTEQUAL        shift and go to state 145
    LESSTHAN        shift and go to state 146
    LESSTHANEQUAL   shift and go to state 147
    GREATERTHAN     shift and go to state 148
    GREATERTHANEQUAL shift and go to state 149
    IN              shift and go to state 150
    NOT             shift and go to state 151
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154

  ! EQUAL           [ reduce using rule 36 (relation -> simple_expression .) ]
  ! NOTEQUAL        [ reduce using rule 36 (relation -> simple_expression .) ]
  ! LESSTHAN        [ reduce using rule 36 (relation -> simple_expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 36 (relation -> simple_expression .) ]
  ! GREATERTHAN     [ reduce using rule 36 (relation -> simple_expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 36 (relation -> simple_expression .) ]
  ! IN              [ reduce using rule 36 (relation -> simple_expression .) ]
  ! NOT             [ reduce using rule 36 (relation -> simple_expression .) ]
  ! PLUS            [ reduce using rule 36 (relation -> simple_expression .) ]
  ! MINUS           [ reduce using rule 36 (relation -> simple_expression .) ]
  ! CONCAT          [ reduce using rule 36 (relation -> simple_expression .) ]


state 179

    (148) loop_statement -> LOOP sequence_of_statements . END LOOP SEMICOLON
    (149) loop_statement -> LOOP sequence_of_statements . END LOOP name SEMICOLON

    END             shift and go to state 258


state 180

    (150) loop_statement -> WHILE expression . LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> WHILE expression . LOOP sequence_of_statements END LOOP name SEMICOLON

    LOOP            shift and go to state 259


state 181

    (152) loop_statement -> FOR ID . IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> FOR ID . IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> FOR ID . IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> FOR ID . IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON

    IN              shift and go to state 260


state 182

    (130) use_clause -> LPAREN USE name RPAREN .

    LPAREN          reduce using rule 130 (use_clause -> LPAREN USE name RPAREN .)
    PROCEDURE       reduce using rule 130 (use_clause -> LPAREN USE name RPAREN .)
    TYPE            reduce using rule 130 (use_clause -> LPAREN USE name RPAREN .)
    COLON           reduce using rule 130 (use_clause -> LPAREN USE name RPAREN .)
    FOR             reduce using rule 130 (use_clause -> LPAREN USE name RPAREN .)
    BEGIN           reduce using rule 130 (use_clause -> LPAREN USE name RPAREN .)


state 183

    (132) use_clause -> LPAREN USE name use_clause_loop . RPAREN

    RPAREN          shift and go to state 261


state 184

    (134) use_clause_loop -> COMMA . name use_clause_loop
    (135) use_clause_loop -> COMMA . name
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 262
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 185

    (131) use_clause -> LPAREN TYPE name RPAREN .

    LPAREN          reduce using rule 131 (use_clause -> LPAREN TYPE name RPAREN .)
    PROCEDURE       reduce using rule 131 (use_clause -> LPAREN TYPE name RPAREN .)
    TYPE            reduce using rule 131 (use_clause -> LPAREN TYPE name RPAREN .)
    COLON           reduce using rule 131 (use_clause -> LPAREN TYPE name RPAREN .)
    FOR             reduce using rule 131 (use_clause -> LPAREN TYPE name RPAREN .)
    BEGIN           reduce using rule 131 (use_clause -> LPAREN TYPE name RPAREN .)


state 186

    (133) use_clause -> LPAREN TYPE name use_clause_loop . RPAREN

    RPAREN          shift and go to state 263


state 187

    (147) identifier_list -> ID COMMA . identifier_list
    (146) identifier_list -> . ID
    (147) identifier_list -> . ID COMMA identifier_list

    ID              shift and go to state 107

    identifier_list                shift and go to state 264

state 188

    (138) incomplete_type_definition -> TYPE ID discriminant_part SEMICOLON .

    LPAREN          reduce using rule 138 (incomplete_type_definition -> TYPE ID discriminant_part SEMICOLON .)
    PROCEDURE       reduce using rule 138 (incomplete_type_definition -> TYPE ID discriminant_part SEMICOLON .)
    TYPE            reduce using rule 138 (incomplete_type_definition -> TYPE ID discriminant_part SEMICOLON .)
    COLON           reduce using rule 138 (incomplete_type_definition -> TYPE ID discriminant_part SEMICOLON .)
    FOR             reduce using rule 138 (incomplete_type_definition -> TYPE ID discriminant_part SEMICOLON .)
    BEGIN           reduce using rule 138 (incomplete_type_definition -> TYPE ID discriminant_part SEMICOLON .)


state 189

    (136) discriminant_part -> identifier_list COLON . name ASSIGN expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 265
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 190

    (145) number_declaration -> COLON CONSTANT ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 266


state 191

    (16) attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator . USE expression SEMICOLON
    (17) attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator . USE name SEMICOLON
    (23) attribute_reference -> name SINGLEQUOTE attribute_designator .

    USE             shift and go to state 267
    SINGLEQUOTE     reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    LPAREN          reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)
    DOT             reduce using rule 23 (attribute_reference -> name SINGLEQUOTE attribute_designator .)


state 192

    (122) selector_name -> ID .

    SINGLEQUOTE     reduce using rule 122 (selector_name -> ID .)
    LPAREN          reduce using rule 122 (selector_name -> ID .)
    DOT             reduce using rule 122 (selector_name -> ID .)
    RPAREN          reduce using rule 122 (selector_name -> ID .)
    RANGE           reduce using rule 122 (selector_name -> ID .)
    DIGITS          reduce using rule 122 (selector_name -> ID .)
    COMMA           reduce using rule 122 (selector_name -> ID .)
    POWER           reduce using rule 122 (selector_name -> ID .)
    TIMES           reduce using rule 122 (selector_name -> ID .)
    DIVIDE          reduce using rule 122 (selector_name -> ID .)
    MOD             reduce using rule 122 (selector_name -> ID .)
    REM             reduce using rule 122 (selector_name -> ID .)
    DOTDOT          reduce using rule 122 (selector_name -> ID .)
    EQUAL           reduce using rule 122 (selector_name -> ID .)
    NOTEQUAL        reduce using rule 122 (selector_name -> ID .)
    LESSTHAN        reduce using rule 122 (selector_name -> ID .)
    LESSTHANEQUAL   reduce using rule 122 (selector_name -> ID .)
    GREATERTHAN     reduce using rule 122 (selector_name -> ID .)
    GREATERTHANEQUAL reduce using rule 122 (selector_name -> ID .)
    IN              reduce using rule 122 (selector_name -> ID .)
    NOT             reduce using rule 122 (selector_name -> ID .)
    PLUS            reduce using rule 122 (selector_name -> ID .)
    MINUS           reduce using rule 122 (selector_name -> ID .)
    CONCAT          reduce using rule 122 (selector_name -> ID .)
    AND             reduce using rule 122 (selector_name -> ID .)
    OR              reduce using rule 122 (selector_name -> ID .)
    XOR             reduce using rule 122 (selector_name -> ID .)
    ASSIGN          reduce using rule 122 (selector_name -> ID .)
    SEMICOLON       reduce using rule 122 (selector_name -> ID .)
    PIPE            reduce using rule 122 (selector_name -> ID .)
    REFASSIGN       reduce using rule 122 (selector_name -> ID .)
    NULL            reduce using rule 122 (selector_name -> ID .)
    NUMBER_INT      reduce using rule 122 (selector_name -> ID .)
    NUMBER_FLOAT    reduce using rule 122 (selector_name -> ID .)
    NUMBER_EXPONENT reduce using rule 122 (selector_name -> ID .)
    ID              reduce using rule 122 (selector_name -> ID .)
    COLON           reduce using rule 122 (selector_name -> ID .)
    THEN            reduce using rule 122 (selector_name -> ID .)
    LOOP            reduce using rule 122 (selector_name -> ID .)


state 193

    (129) enumeration_representation_clause -> FOR direct_name USE named_array_aggregate . SEMICOLON

    SEMICOLON       shift and go to state 268


state 194

    (72) named_array_aggregate -> LPAREN . array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (74) array_component_association -> . discrete_choice_list REFASSIGN expression
    (75) discrete_choice_list -> . discrete_choice
    (76) discrete_choice_list -> . discrete_choice PIPE discrete_choice discrete_choice_list
    (77) discrete_choice -> . expression
    (78) discrete_choice -> . discrete_range
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    array_component_association    shift and go to state 127
    named_array_aggregate          shift and go to state 77
    discrete_choice_list           shift and go to state 128
    expression                     shift and go to state 164
    discrete_choice                shift and go to state 131
    discrete_range                 shift and go to state 132
    relation                       shift and go to state 63
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    simple_expression              shift and go to state 165
    name                           shift and go to state 166
    range_attribute_reference      shift and go to state 66
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    qualified_expression           shift and go to state 78

state 195

    (111) slice -> name LPAREN discrete_range . RPAREN
    (93) index_constraint -> LPAREN discrete_range . RPAREN
    (94) index_constraint -> LPAREN discrete_range . COMMA discrete_range index_constraint RPAREN

    RPAREN          shift and go to state 269
    COMMA           shift and go to state 270


state 196

    (20) type_conversion -> name LPAREN expression . RPAREN
    (18) indexed_component -> name LPAREN expression . RPAREN
    (19) indexed_component -> name LPAREN expression . COLON indexed_component RPAREN
    (118) parameter_association -> expression .
    (92) discriminant_association -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 92 (discriminant_association -> expression .)
    RPAREN          shift and go to state 134
    COLON           shift and go to state 135
    COMMA           reduce using rule 92 (discriminant_association -> expression .)

  ! RPAREN          [ reduce using rule 118 (parameter_association -> expression .) ]
  ! COMMA           [ reduce using rule 118 (parameter_association -> expression .) ]


state 197

    (87) discriminant_constraint -> LPAREN discriminant_association . COMMA discriminant_association RPAREN

    COMMA           shift and go to state 271


state 198

    (120) parameter_association -> selector_name . REFASSIGN expression
    (121) parameter_association -> selector_name . REFASSIGN name
    (89) discriminant_association -> selector_name . PIPE selector_name REFASSIGN expression
    (90) discriminant_association -> selector_name . PIPE selector_name discriminant_association REFASSIGN expression

    REFASSIGN       shift and go to state 142
    PIPE            shift and go to state 272


state 199

    (91) discriminant_association -> PIPE . selector_name
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE

    ID              shift and go to state 192
    SINGLEQUOTE     shift and go to state 16

    selector_name                  shift and go to state 273
    character_literal              shift and go to state 55

state 200

    (100) range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .

    RPAREN          reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    PIPE            reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    REFASSIGN       reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    COMMA           reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    PLUS            reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    MINUS           reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    ID              reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    SINGLEQUOTE     reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    NULL            reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    LPAREN          reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    NUMBER_INT      reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    NUMBER_FLOAT    reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    NUMBER_EXPONENT reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    LOOP            reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    DOTDOT          reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    EQUAL           reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    NOTEQUAL        reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    LESSTHAN        reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    LESSTHANEQUAL   reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    GREATERTHAN     reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    GREATERTHANEQUAL reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    IN              reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    NOT             reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    CONCAT          reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    AND             reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    OR              reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    XOR             reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    COLON           reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    THEN            reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    SEMICOLON       reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    RANGE           reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    POWER           reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    TIMES           reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    DIVIDE          reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    MOD             reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)
    REM             reduce using rule 100 (range_attribute_reference -> name SINGLEQUOTE range_attribute_designator .)


state 201

    (70) qualified_expression -> name SINGLEQUOTE LPAREN . expression RPAREN
    (72) named_array_aggregate -> LPAREN . array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (74) array_component_association -> . discrete_choice_list REFASSIGN expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (75) discrete_choice_list -> . discrete_choice
    (76) discrete_choice_list -> . discrete_choice PIPE discrete_choice discrete_choice_list
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (77) discrete_choice -> . expression
    (78) discrete_choice -> . discrete_range
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    name                           shift and go to state 130
    expression                     shift and go to state 274
    array_component_association    shift and go to state 127
    named_array_aggregate          shift and go to state 77
    relation                       shift and go to state 63
    discrete_choice_list           shift and go to state 128
    simple_expression              shift and go to state 129
    range                          shift and go to state 62
    discrete_choice                shift and go to state 131
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    discrete_range                 shift and go to state 132
    subtype_indication             shift and go to state 61
    factor                         shift and go to state 73
    range_attribute_reference      shift and go to state 66
    primary                        shift and go to state 74
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    numeric_literal                shift and go to state 75
    qualified_expression           shift and go to state 78

state 202

    (71) qualified_expression -> name SINGLEQUOTE named_array_aggregate .

    POWER           reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    TIMES           reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    DIVIDE          reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    MOD             reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    REM             reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    DOTDOT          reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    EQUAL           reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    NOTEQUAL        reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    LESSTHAN        reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    LESSTHANEQUAL   reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    GREATERTHAN     reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    GREATERTHANEQUAL reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    IN              reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    NOT             reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    PLUS            reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    MINUS           reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    CONCAT          reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    AND             reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    OR              reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    XOR             reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    SEMICOLON       reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    NULL            reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    LPAREN          reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    NUMBER_INT      reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    NUMBER_FLOAT    reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    NUMBER_EXPONENT reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    COMMA           reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    ID              reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    SINGLEQUOTE     reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    RPAREN          reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    COLON           reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    PIPE            reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    REFASSIGN       reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    THEN            reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    LOOP            reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)
    RANGE           reduce using rule 71 (qualified_expression -> name SINGLEQUOTE named_array_aggregate .)


state 203

    (101) range_attribute_designator -> RANGE .
    (102) range_attribute_designator -> RANGE . LPAREN expression RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 101 (range_attribute_designator -> RANGE .)
    COMMA           reduce using rule 101 (range_attribute_designator -> RANGE .)
    PIPE            reduce using rule 101 (range_attribute_designator -> RANGE .)
    REFASSIGN       reduce using rule 101 (range_attribute_designator -> RANGE .)
    PLUS            reduce using rule 101 (range_attribute_designator -> RANGE .)
    MINUS           reduce using rule 101 (range_attribute_designator -> RANGE .)
    ID              reduce using rule 101 (range_attribute_designator -> RANGE .)
    SINGLEQUOTE     reduce using rule 101 (range_attribute_designator -> RANGE .)
    NULL            reduce using rule 101 (range_attribute_designator -> RANGE .)
    NUMBER_INT      reduce using rule 101 (range_attribute_designator -> RANGE .)
    NUMBER_FLOAT    reduce using rule 101 (range_attribute_designator -> RANGE .)
    NUMBER_EXPONENT reduce using rule 101 (range_attribute_designator -> RANGE .)
    LOOP            reduce using rule 101 (range_attribute_designator -> RANGE .)
    DOTDOT          reduce using rule 101 (range_attribute_designator -> RANGE .)
    EQUAL           reduce using rule 101 (range_attribute_designator -> RANGE .)
    NOTEQUAL        reduce using rule 101 (range_attribute_designator -> RANGE .)
    LESSTHAN        reduce using rule 101 (range_attribute_designator -> RANGE .)
    LESSTHANEQUAL   reduce using rule 101 (range_attribute_designator -> RANGE .)
    GREATERTHAN     reduce using rule 101 (range_attribute_designator -> RANGE .)
    GREATERTHANEQUAL reduce using rule 101 (range_attribute_designator -> RANGE .)
    IN              reduce using rule 101 (range_attribute_designator -> RANGE .)
    NOT             reduce using rule 101 (range_attribute_designator -> RANGE .)
    CONCAT          reduce using rule 101 (range_attribute_designator -> RANGE .)
    AND             reduce using rule 101 (range_attribute_designator -> RANGE .)
    OR              reduce using rule 101 (range_attribute_designator -> RANGE .)
    XOR             reduce using rule 101 (range_attribute_designator -> RANGE .)
    COLON           reduce using rule 101 (range_attribute_designator -> RANGE .)
    THEN            reduce using rule 101 (range_attribute_designator -> RANGE .)
    SEMICOLON       reduce using rule 101 (range_attribute_designator -> RANGE .)
    RANGE           reduce using rule 101 (range_attribute_designator -> RANGE .)
    POWER           reduce using rule 101 (range_attribute_designator -> RANGE .)
    TIMES           reduce using rule 101 (range_attribute_designator -> RANGE .)
    DIVIDE          reduce using rule 101 (range_attribute_designator -> RANGE .)
    MOD             reduce using rule 101 (range_attribute_designator -> RANGE .)
    REM             reduce using rule 101 (range_attribute_designator -> RANGE .)
    LPAREN          shift and go to state 275

  ! LPAREN          [ reduce using rule 101 (range_attribute_designator -> RANGE .) ]


state 204

    (97) range_constraint -> RANGE range .

    RPAREN          reduce using rule 97 (range_constraint -> RANGE range .)
    COMMA           reduce using rule 97 (range_constraint -> RANGE range .)
    PIPE            reduce using rule 97 (range_constraint -> RANGE range .)
    REFASSIGN       reduce using rule 97 (range_constraint -> RANGE range .)
    PLUS            reduce using rule 97 (range_constraint -> RANGE range .)
    MINUS           reduce using rule 97 (range_constraint -> RANGE range .)
    ID              reduce using rule 97 (range_constraint -> RANGE range .)
    SINGLEQUOTE     reduce using rule 97 (range_constraint -> RANGE range .)
    NULL            reduce using rule 97 (range_constraint -> RANGE range .)
    LPAREN          reduce using rule 97 (range_constraint -> RANGE range .)
    NUMBER_INT      reduce using rule 97 (range_constraint -> RANGE range .)
    NUMBER_FLOAT    reduce using rule 97 (range_constraint -> RANGE range .)
    NUMBER_EXPONENT reduce using rule 97 (range_constraint -> RANGE range .)
    LOOP            reduce using rule 97 (range_constraint -> RANGE range .)


state 205

    (99) range -> simple_expression . DOTDOT simple_expression
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

    DOTDOT          shift and go to state 143
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154


state 206

    (100) range_attribute_reference -> name . SINGLEQUOTE range_attribute_designator
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (67) primary -> name .
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for POWER resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for REM resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DOTDOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 67 (primary -> name .)
    SINGLEQUOTE     shift and go to state 216
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    POWER           reduce using rule 67 (primary -> name .)
    TIMES           reduce using rule 67 (primary -> name .)
    DIVIDE          reduce using rule 67 (primary -> name .)
    MOD             reduce using rule 67 (primary -> name .)
    REM             reduce using rule 67 (primary -> name .)
    DOTDOT          reduce using rule 67 (primary -> name .)
    PLUS            reduce using rule 67 (primary -> name .)
    MINUS           reduce using rule 67 (primary -> name .)
    CONCAT          reduce using rule 67 (primary -> name .)

  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]
  ! DOTDOT          [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 207

    (95) digits_constraint -> DIGITS expression . range_constraint
    (96) digits_constraint -> DIGITS expression .
    (97) range_constraint -> . RANGE range

    RPAREN          reduce using rule 96 (digits_constraint -> DIGITS expression .)
    COMMA           reduce using rule 96 (digits_constraint -> DIGITS expression .)
    PIPE            reduce using rule 96 (digits_constraint -> DIGITS expression .)
    REFASSIGN       reduce using rule 96 (digits_constraint -> DIGITS expression .)
    PLUS            reduce using rule 96 (digits_constraint -> DIGITS expression .)
    MINUS           reduce using rule 96 (digits_constraint -> DIGITS expression .)
    ID              reduce using rule 96 (digits_constraint -> DIGITS expression .)
    SINGLEQUOTE     reduce using rule 96 (digits_constraint -> DIGITS expression .)
    NULL            reduce using rule 96 (digits_constraint -> DIGITS expression .)
    LPAREN          reduce using rule 96 (digits_constraint -> DIGITS expression .)
    NUMBER_INT      reduce using rule 96 (digits_constraint -> DIGITS expression .)
    NUMBER_FLOAT    reduce using rule 96 (digits_constraint -> DIGITS expression .)
    NUMBER_EXPONENT reduce using rule 96 (digits_constraint -> DIGITS expression .)
    LOOP            reduce using rule 96 (digits_constraint -> DIGITS expression .)
    RANGE           shift and go to state 123

    range_constraint               shift and go to state 276

state 208

    (88) discriminant_constraint -> COMMA discriminant_association .

    RPAREN          reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    COMMA           reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    PIPE            reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    REFASSIGN       reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    PLUS            reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    MINUS           reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    ID              reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    SINGLEQUOTE     reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    NULL            reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    LPAREN          reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    NUMBER_INT      reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    NUMBER_FLOAT    reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    NUMBER_EXPONENT reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)
    LOOP            reduce using rule 88 (discriminant_constraint -> COMMA discriminant_association .)


state 209

    (89) discriminant_association -> selector_name . PIPE selector_name REFASSIGN expression
    (90) discriminant_association -> selector_name . PIPE selector_name discriminant_association REFASSIGN expression

    PIPE            shift and go to state 272


state 210

    (92) discriminant_association -> expression .

    RPAREN          reduce using rule 92 (discriminant_association -> expression .)
    COMMA           reduce using rule 92 (discriminant_association -> expression .)
    PIPE            reduce using rule 92 (discriminant_association -> expression .)
    REFASSIGN       reduce using rule 92 (discriminant_association -> expression .)
    PLUS            reduce using rule 92 (discriminant_association -> expression .)
    MINUS           reduce using rule 92 (discriminant_association -> expression .)
    ID              reduce using rule 92 (discriminant_association -> expression .)
    SINGLEQUOTE     reduce using rule 92 (discriminant_association -> expression .)
    NULL            reduce using rule 92 (discriminant_association -> expression .)
    LPAREN          reduce using rule 92 (discriminant_association -> expression .)
    NUMBER_INT      reduce using rule 92 (discriminant_association -> expression .)
    NUMBER_FLOAT    reduce using rule 92 (discriminant_association -> expression .)
    NUMBER_EXPONENT reduce using rule 92 (discriminant_association -> expression .)
    LOOP            reduce using rule 92 (discriminant_association -> expression .)


state 211

    (122) selector_name -> ID .
    (15) direct_name -> ID .

    PIPE            reduce using rule 122 (selector_name -> ID .)
    REFASSIGN       reduce using rule 122 (selector_name -> ID .)
    SINGLEQUOTE     reduce using rule 15 (direct_name -> ID .)
    LPAREN          reduce using rule 15 (direct_name -> ID .)
    DOT             reduce using rule 15 (direct_name -> ID .)
    POWER           reduce using rule 15 (direct_name -> ID .)
    TIMES           reduce using rule 15 (direct_name -> ID .)
    DIVIDE          reduce using rule 15 (direct_name -> ID .)
    MOD             reduce using rule 15 (direct_name -> ID .)
    REM             reduce using rule 15 (direct_name -> ID .)
    EQUAL           reduce using rule 15 (direct_name -> ID .)
    NOTEQUAL        reduce using rule 15 (direct_name -> ID .)
    LESSTHAN        reduce using rule 15 (direct_name -> ID .)
    LESSTHANEQUAL   reduce using rule 15 (direct_name -> ID .)
    GREATERTHAN     reduce using rule 15 (direct_name -> ID .)
    GREATERTHANEQUAL reduce using rule 15 (direct_name -> ID .)
    IN              reduce using rule 15 (direct_name -> ID .)
    NOT             reduce using rule 15 (direct_name -> ID .)
    PLUS            reduce using rule 15 (direct_name -> ID .)
    MINUS           reduce using rule 15 (direct_name -> ID .)
    CONCAT          reduce using rule 15 (direct_name -> ID .)
    AND             reduce using rule 15 (direct_name -> ID .)
    OR              reduce using rule 15 (direct_name -> ID .)
    XOR             reduce using rule 15 (direct_name -> ID .)
    COMMA           reduce using rule 15 (direct_name -> ID .)
    RPAREN          reduce using rule 15 (direct_name -> ID .)


state 212

    (123) selector_name -> character_literal .
    (109) name -> character_literal .

    PIPE            reduce using rule 123 (selector_name -> character_literal .)
    SINGLEQUOTE     reduce using rule 109 (name -> character_literal .)
    LPAREN          reduce using rule 109 (name -> character_literal .)
    DOT             reduce using rule 109 (name -> character_literal .)
    POWER           reduce using rule 109 (name -> character_literal .)
    TIMES           reduce using rule 109 (name -> character_literal .)
    DIVIDE          reduce using rule 109 (name -> character_literal .)
    MOD             reduce using rule 109 (name -> character_literal .)
    REM             reduce using rule 109 (name -> character_literal .)
    EQUAL           reduce using rule 109 (name -> character_literal .)
    NOTEQUAL        reduce using rule 109 (name -> character_literal .)
    LESSTHAN        reduce using rule 109 (name -> character_literal .)
    LESSTHANEQUAL   reduce using rule 109 (name -> character_literal .)
    GREATERTHAN     reduce using rule 109 (name -> character_literal .)
    GREATERTHANEQUAL reduce using rule 109 (name -> character_literal .)
    IN              reduce using rule 109 (name -> character_literal .)
    NOT             reduce using rule 109 (name -> character_literal .)
    PLUS            reduce using rule 109 (name -> character_literal .)
    MINUS           reduce using rule 109 (name -> character_literal .)
    CONCAT          reduce using rule 109 (name -> character_literal .)
    AND             reduce using rule 109 (name -> character_literal .)
    OR              reduce using rule 109 (name -> character_literal .)
    XOR             reduce using rule 109 (name -> character_literal .)


state 213

    (69) primary -> LPAREN expression RPAREN .

    POWER           reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    MOD             reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    REM             reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    LESSTHANEQUAL   reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    GREATERTHANEQUAL reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    IN              reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    NOT             reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    CONCAT          reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    AND             reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    OR              reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    XOR             reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    NULL            reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    NUMBER_FLOAT    reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    NUMBER_EXPONENT reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    ID              reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    SINGLEQUOTE     reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    COLON           reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    PIPE            reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    REFASSIGN       reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    THEN            reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    LOOP            reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 69 (primary -> LPAREN expression RPAREN .)
    RANGE           reduce using rule 69 (primary -> LPAREN expression RPAREN .)


state 214

    (72) named_array_aggregate -> LPAREN array_component_association COMMA . array_component_association named_array_aggregate RPAREN
    (74) array_component_association -> . discrete_choice_list REFASSIGN expression
    (75) discrete_choice_list -> . discrete_choice
    (76) discrete_choice_list -> . discrete_choice PIPE discrete_choice discrete_choice_list
    (77) discrete_choice -> . expression
    (78) discrete_choice -> . discrete_range
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    array_component_association    shift and go to state 277
    named_array_aggregate          shift and go to state 77
    discrete_choice_list           shift and go to state 128
    expression                     shift and go to state 164
    discrete_choice                shift and go to state 131
    discrete_range                 shift and go to state 132
    relation                       shift and go to state 63
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    simple_expression              shift and go to state 165
    name                           shift and go to state 166
    range_attribute_reference      shift and go to state 66
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    qualified_expression           shift and go to state 78

state 215

    (74) array_component_association -> discrete_choice_list REFASSIGN . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    expression                     shift and go to state 278
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 216

    (100) range_attribute_reference -> name SINGLEQUOTE . range_attribute_designator
    (23) attribute_reference -> name SINGLEQUOTE . attribute_designator
    (70) qualified_expression -> name SINGLEQUOTE . LPAREN expression RPAREN
    (71) qualified_expression -> name SINGLEQUOTE . named_array_aggregate
    (101) range_attribute_designator -> . RANGE
    (102) range_attribute_designator -> . RANGE LPAREN expression RPAREN
    (24) attribute_designator -> . ID
    (25) attribute_designator -> . ID LPAREN expression RPAREN
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association

    LPAREN          shift and go to state 201
    RANGE           shift and go to state 203
    ID              shift and go to state 84
    COMMA           shift and go to state 82

    range_attribute_designator     shift and go to state 200
    attribute_designator           shift and go to state 83
    named_array_aggregate          shift and go to state 202

state 217

    (76) discrete_choice_list -> discrete_choice PIPE . discrete_choice discrete_choice_list
    (77) discrete_choice -> . expression
    (78) discrete_choice -> . discrete_range
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    discrete_choice                shift and go to state 279
    expression                     shift and go to state 164
    discrete_range                 shift and go to state 132
    relation                       shift and go to state 63
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    simple_expression              shift and go to state 165
    name                           shift and go to state 166
    range_attribute_reference      shift and go to state 66
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 218

    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    LPAREN          shift and go to state 280
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35

  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 219

    (19) indexed_component -> name LPAREN expression COLON indexed_component . RPAREN
    (110) name -> indexed_component .

    RPAREN          shift and go to state 281
    LPAREN          reduce using rule 110 (name -> indexed_component .)
    DOT             reduce using rule 110 (name -> indexed_component .)
    SINGLEQUOTE     reduce using rule 110 (name -> indexed_component .)


state 220

    (115) actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .

    DOT             reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    LPAREN          reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    SINGLEQUOTE     reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    RPAREN          reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    RANGE           reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    DIGITS          reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    COMMA           reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    POWER           reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    TIMES           reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    DIVIDE          reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    MOD             reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    REM             reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    DOTDOT          reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    EQUAL           reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    NOTEQUAL        reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    LESSTHAN        reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    LESSTHANEQUAL   reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    GREATERTHAN     reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    GREATERTHANEQUAL reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    IN              reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    NOT             reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    PLUS            reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    MINUS           reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    CONCAT          reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    AND             reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    OR              reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    XOR             reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    SEMICOLON       reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    ASSIGN          reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    PIPE            reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    REFASSIGN       reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    NULL            reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    NUMBER_INT      reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    NUMBER_FLOAT    reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    NUMBER_EXPONENT reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    ID              reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    COLON           reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    THEN            reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)
    LOOP            reduce using rule 115 (actual_parameter_part -> LPAREN parameter_association actual_parameter_part_loop RPAREN .)


state 221

    (116) actual_parameter_part_loop -> COMMA parameter_association . actual_parameter_part_loop
    (117) actual_parameter_part_loop -> COMMA parameter_association .
    (116) actual_parameter_part_loop -> . COMMA parameter_association actual_parameter_part_loop
    (117) actual_parameter_part_loop -> . COMMA parameter_association

    RPAREN          reduce using rule 117 (actual_parameter_part_loop -> COMMA parameter_association .)
    COMMA           shift and go to state 138

    actual_parameter_part_loop     shift and go to state 282

state 222

    (118) parameter_association -> expression .

    COMMA           reduce using rule 118 (parameter_association -> expression .)
    RPAREN          reduce using rule 118 (parameter_association -> expression .)


state 223

    (119) parameter_association -> name .
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (67) primary -> name .
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 112 (function_call -> name .)
  ! reduce/reduce conflict for RPAREN resolved using rule 112 (function_call -> name .)
  ! reduce/reduce conflict for POWER resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for REM resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for EQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for IN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for AND resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for OR resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for XOR resolved using rule 67 (primary -> name .)
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 283
    COMMA           reduce using rule 112 (function_call -> name .)
    RPAREN          reduce using rule 112 (function_call -> name .)
    POWER           reduce using rule 67 (primary -> name .)
    TIMES           reduce using rule 67 (primary -> name .)
    DIVIDE          reduce using rule 67 (primary -> name .)
    MOD             reduce using rule 67 (primary -> name .)
    REM             reduce using rule 67 (primary -> name .)
    EQUAL           reduce using rule 67 (primary -> name .)
    NOTEQUAL        reduce using rule 67 (primary -> name .)
    LESSTHAN        reduce using rule 67 (primary -> name .)
    LESSTHANEQUAL   reduce using rule 67 (primary -> name .)
    GREATERTHAN     reduce using rule 67 (primary -> name .)
    GREATERTHANEQUAL reduce using rule 67 (primary -> name .)
    IN              reduce using rule 67 (primary -> name .)
    NOT             reduce using rule 67 (primary -> name .)
    PLUS            reduce using rule 67 (primary -> name .)
    MINUS           reduce using rule 67 (primary -> name .)
    CONCAT          reduce using rule 67 (primary -> name .)
    AND             reduce using rule 67 (primary -> name .)
    OR              reduce using rule 67 (primary -> name .)
    XOR             reduce using rule 67 (primary -> name .)

  ! COMMA           [ reduce using rule 119 (parameter_association -> name .) ]
  ! RPAREN          [ reduce using rule 119 (parameter_association -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]
  ! EQUAL           [ reduce using rule 112 (function_call -> name .) ]
  ! NOTEQUAL        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHAN        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHANEQUAL   [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHAN     [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHANEQUAL [ reduce using rule 112 (function_call -> name .) ]
  ! IN              [ reduce using rule 112 (function_call -> name .) ]
  ! NOT             [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]
  ! AND             [ reduce using rule 112 (function_call -> name .) ]
  ! OR              [ reduce using rule 112 (function_call -> name .) ]
  ! XOR             [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 224

    (26) expression -> relation AND relation .
    (27) expression -> relation AND relation . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_FLOAT resolved as shift
  ! shift/reduce conflict for NUMBER_EXPONENT resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    RPAREN          reduce using rule 26 (expression -> relation AND relation .)
    COLON           reduce using rule 26 (expression -> relation AND relation .)
    PIPE            reduce using rule 26 (expression -> relation AND relation .)
    REFASSIGN       reduce using rule 26 (expression -> relation AND relation .)
    THEN            reduce using rule 26 (expression -> relation AND relation .)
    LOOP            reduce using rule 26 (expression -> relation AND relation .)
    SEMICOLON       reduce using rule 26 (expression -> relation AND relation .)
    RANGE           reduce using rule 26 (expression -> relation AND relation .)
    DOTDOT          reduce using rule 26 (expression -> relation AND relation .)
    EQUAL           reduce using rule 26 (expression -> relation AND relation .)
    NOTEQUAL        reduce using rule 26 (expression -> relation AND relation .)
    LESSTHAN        reduce using rule 26 (expression -> relation AND relation .)
    LESSTHANEQUAL   reduce using rule 26 (expression -> relation AND relation .)
    GREATERTHAN     reduce using rule 26 (expression -> relation AND relation .)
    GREATERTHANEQUAL reduce using rule 26 (expression -> relation AND relation .)
    IN              reduce using rule 26 (expression -> relation AND relation .)
    NOT             reduce using rule 26 (expression -> relation AND relation .)
    CONCAT          reduce using rule 26 (expression -> relation AND relation .)
    AND             reduce using rule 26 (expression -> relation AND relation .)
    OR              reduce using rule 26 (expression -> relation AND relation .)
    XOR             reduce using rule 26 (expression -> relation AND relation .)
    POWER           reduce using rule 26 (expression -> relation AND relation .)
    TIMES           reduce using rule 26 (expression -> relation AND relation .)
    DIVIDE          reduce using rule 26 (expression -> relation AND relation .)
    MOD             reduce using rule 26 (expression -> relation AND relation .)
    REM             reduce using rule 26 (expression -> relation AND relation .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

  ! COMMA           [ reduce using rule 26 (expression -> relation AND relation .) ]
  ! PLUS            [ reduce using rule 26 (expression -> relation AND relation .) ]
  ! MINUS           [ reduce using rule 26 (expression -> relation AND relation .) ]
  ! ID              [ reduce using rule 26 (expression -> relation AND relation .) ]
  ! SINGLEQUOTE     [ reduce using rule 26 (expression -> relation AND relation .) ]
  ! NULL            [ reduce using rule 26 (expression -> relation AND relation .) ]
  ! LPAREN          [ reduce using rule 26 (expression -> relation AND relation .) ]
  ! NUMBER_INT      [ reduce using rule 26 (expression -> relation AND relation .) ]
  ! NUMBER_FLOAT    [ reduce using rule 26 (expression -> relation AND relation .) ]
  ! NUMBER_EXPONENT [ reduce using rule 26 (expression -> relation AND relation .) ]

    relation                       shift and go to state 63
    expression                     shift and go to state 284
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 225

    (28) expression -> relation AND THEN . relation
    (29) expression -> relation AND THEN . relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    relation                       shift and go to state 285
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 226

    (30) expression -> relation OR relation .
    (31) expression -> relation OR relation . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_FLOAT resolved as shift
  ! shift/reduce conflict for NUMBER_EXPONENT resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    RPAREN          reduce using rule 30 (expression -> relation OR relation .)
    COLON           reduce using rule 30 (expression -> relation OR relation .)
    PIPE            reduce using rule 30 (expression -> relation OR relation .)
    REFASSIGN       reduce using rule 30 (expression -> relation OR relation .)
    THEN            reduce using rule 30 (expression -> relation OR relation .)
    LOOP            reduce using rule 30 (expression -> relation OR relation .)
    SEMICOLON       reduce using rule 30 (expression -> relation OR relation .)
    RANGE           reduce using rule 30 (expression -> relation OR relation .)
    DOTDOT          reduce using rule 30 (expression -> relation OR relation .)
    EQUAL           reduce using rule 30 (expression -> relation OR relation .)
    NOTEQUAL        reduce using rule 30 (expression -> relation OR relation .)
    LESSTHAN        reduce using rule 30 (expression -> relation OR relation .)
    LESSTHANEQUAL   reduce using rule 30 (expression -> relation OR relation .)
    GREATERTHAN     reduce using rule 30 (expression -> relation OR relation .)
    GREATERTHANEQUAL reduce using rule 30 (expression -> relation OR relation .)
    IN              reduce using rule 30 (expression -> relation OR relation .)
    NOT             reduce using rule 30 (expression -> relation OR relation .)
    CONCAT          reduce using rule 30 (expression -> relation OR relation .)
    AND             reduce using rule 30 (expression -> relation OR relation .)
    OR              reduce using rule 30 (expression -> relation OR relation .)
    XOR             reduce using rule 30 (expression -> relation OR relation .)
    POWER           reduce using rule 30 (expression -> relation OR relation .)
    TIMES           reduce using rule 30 (expression -> relation OR relation .)
    DIVIDE          reduce using rule 30 (expression -> relation OR relation .)
    MOD             reduce using rule 30 (expression -> relation OR relation .)
    REM             reduce using rule 30 (expression -> relation OR relation .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

  ! COMMA           [ reduce using rule 30 (expression -> relation OR relation .) ]
  ! PLUS            [ reduce using rule 30 (expression -> relation OR relation .) ]
  ! MINUS           [ reduce using rule 30 (expression -> relation OR relation .) ]
  ! ID              [ reduce using rule 30 (expression -> relation OR relation .) ]
  ! SINGLEQUOTE     [ reduce using rule 30 (expression -> relation OR relation .) ]
  ! NULL            [ reduce using rule 30 (expression -> relation OR relation .) ]
  ! LPAREN          [ reduce using rule 30 (expression -> relation OR relation .) ]
  ! NUMBER_INT      [ reduce using rule 30 (expression -> relation OR relation .) ]
  ! NUMBER_FLOAT    [ reduce using rule 30 (expression -> relation OR relation .) ]
  ! NUMBER_EXPONENT [ reduce using rule 30 (expression -> relation OR relation .) ]

    relation                       shift and go to state 63
    expression                     shift and go to state 286
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 227

    (32) expression -> relation OR ELSE . relation
    (33) expression -> relation OR ELSE . relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    relation                       shift and go to state 287
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 228

    (34) expression -> relation XOR relation .
    (35) expression -> relation XOR relation . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_FLOAT resolved as shift
  ! shift/reduce conflict for NUMBER_EXPONENT resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    RPAREN          reduce using rule 34 (expression -> relation XOR relation .)
    COLON           reduce using rule 34 (expression -> relation XOR relation .)
    PIPE            reduce using rule 34 (expression -> relation XOR relation .)
    REFASSIGN       reduce using rule 34 (expression -> relation XOR relation .)
    THEN            reduce using rule 34 (expression -> relation XOR relation .)
    LOOP            reduce using rule 34 (expression -> relation XOR relation .)
    SEMICOLON       reduce using rule 34 (expression -> relation XOR relation .)
    RANGE           reduce using rule 34 (expression -> relation XOR relation .)
    DOTDOT          reduce using rule 34 (expression -> relation XOR relation .)
    EQUAL           reduce using rule 34 (expression -> relation XOR relation .)
    NOTEQUAL        reduce using rule 34 (expression -> relation XOR relation .)
    LESSTHAN        reduce using rule 34 (expression -> relation XOR relation .)
    LESSTHANEQUAL   reduce using rule 34 (expression -> relation XOR relation .)
    GREATERTHAN     reduce using rule 34 (expression -> relation XOR relation .)
    GREATERTHANEQUAL reduce using rule 34 (expression -> relation XOR relation .)
    IN              reduce using rule 34 (expression -> relation XOR relation .)
    NOT             reduce using rule 34 (expression -> relation XOR relation .)
    CONCAT          reduce using rule 34 (expression -> relation XOR relation .)
    AND             reduce using rule 34 (expression -> relation XOR relation .)
    OR              reduce using rule 34 (expression -> relation XOR relation .)
    XOR             reduce using rule 34 (expression -> relation XOR relation .)
    POWER           reduce using rule 34 (expression -> relation XOR relation .)
    TIMES           reduce using rule 34 (expression -> relation XOR relation .)
    DIVIDE          reduce using rule 34 (expression -> relation XOR relation .)
    MOD             reduce using rule 34 (expression -> relation XOR relation .)
    REM             reduce using rule 34 (expression -> relation XOR relation .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

  ! COMMA           [ reduce using rule 34 (expression -> relation XOR relation .) ]
  ! PLUS            [ reduce using rule 34 (expression -> relation XOR relation .) ]
  ! MINUS           [ reduce using rule 34 (expression -> relation XOR relation .) ]
  ! ID              [ reduce using rule 34 (expression -> relation XOR relation .) ]
  ! SINGLEQUOTE     [ reduce using rule 34 (expression -> relation XOR relation .) ]
  ! NULL            [ reduce using rule 34 (expression -> relation XOR relation .) ]
  ! LPAREN          [ reduce using rule 34 (expression -> relation XOR relation .) ]
  ! NUMBER_INT      [ reduce using rule 34 (expression -> relation XOR relation .) ]
  ! NUMBER_FLOAT    [ reduce using rule 34 (expression -> relation XOR relation .) ]
  ! NUMBER_EXPONENT [ reduce using rule 34 (expression -> relation XOR relation .) ]

    relation                       shift and go to state 63
    expression                     shift and go to state 288
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 229

    (120) parameter_association -> selector_name REFASSIGN expression .

    RPAREN          reduce using rule 120 (parameter_association -> selector_name REFASSIGN expression .)
    COMMA           reduce using rule 120 (parameter_association -> selector_name REFASSIGN expression .)


state 230

    (121) parameter_association -> selector_name REFASSIGN name .
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (67) primary -> name .
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 112 (function_call -> name .)
  ! reduce/reduce conflict for COMMA resolved using rule 112 (function_call -> name .)
  ! reduce/reduce conflict for POWER resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for REM resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for EQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for IN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for AND resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for OR resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for XOR resolved using rule 67 (primary -> name .)
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 283
    RPAREN          reduce using rule 112 (function_call -> name .)
    COMMA           reduce using rule 112 (function_call -> name .)
    POWER           reduce using rule 67 (primary -> name .)
    TIMES           reduce using rule 67 (primary -> name .)
    DIVIDE          reduce using rule 67 (primary -> name .)
    MOD             reduce using rule 67 (primary -> name .)
    REM             reduce using rule 67 (primary -> name .)
    EQUAL           reduce using rule 67 (primary -> name .)
    NOTEQUAL        reduce using rule 67 (primary -> name .)
    LESSTHAN        reduce using rule 67 (primary -> name .)
    LESSTHANEQUAL   reduce using rule 67 (primary -> name .)
    GREATERTHAN     reduce using rule 67 (primary -> name .)
    GREATERTHANEQUAL reduce using rule 67 (primary -> name .)
    IN              reduce using rule 67 (primary -> name .)
    NOT             reduce using rule 67 (primary -> name .)
    PLUS            reduce using rule 67 (primary -> name .)
    MINUS           reduce using rule 67 (primary -> name .)
    CONCAT          reduce using rule 67 (primary -> name .)
    AND             reduce using rule 67 (primary -> name .)
    OR              reduce using rule 67 (primary -> name .)
    XOR             reduce using rule 67 (primary -> name .)

  ! RPAREN          [ reduce using rule 121 (parameter_association -> selector_name REFASSIGN name .) ]
  ! COMMA           [ reduce using rule 121 (parameter_association -> selector_name REFASSIGN name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]
  ! EQUAL           [ reduce using rule 112 (function_call -> name .) ]
  ! NOTEQUAL        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHAN        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHANEQUAL   [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHAN     [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHANEQUAL [ reduce using rule 112 (function_call -> name .) ]
  ! IN              [ reduce using rule 112 (function_call -> name .) ]
  ! NOT             [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]
  ! AND             [ reduce using rule 112 (function_call -> name .) ]
  ! OR              [ reduce using rule 112 (function_call -> name .) ]
  ! XOR             [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 231

    (99) range -> simple_expression DOTDOT simple_expression .
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    RPAREN          reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    PIPE            reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    REFASSIGN       reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    COMMA           reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    ID              reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    SINGLEQUOTE     reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    NULL            reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    LPAREN          reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    NUMBER_INT      reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    NUMBER_FLOAT    reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    NUMBER_EXPONENT reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    LOOP            reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    DOTDOT          reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    EQUAL           reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    NOTEQUAL        reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    LESSTHAN        reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    LESSTHANEQUAL   reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    GREATERTHAN     reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    GREATERTHANEQUAL reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    IN              reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    NOT             reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    AND             reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    OR              reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    XOR             reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    COLON           reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    THEN            reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    SEMICOLON       reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    RANGE           reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    POWER           reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    TIMES           reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    DIVIDE          reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    MOD             reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    REM             reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .)
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154

  ! PLUS            [ reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .) ]
  ! MINUS           [ reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .) ]
  ! CONCAT          [ reduce using rule 99 (range -> simple_expression DOTDOT simple_expression .) ]


state 232

    (37) relation -> simple_expression EQUAL simple_expression .
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    AND             reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    OR              reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    XOR             reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    DOTDOT          reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    EQUAL           reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    NOTEQUAL        reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    LESSTHAN        reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    LESSTHANEQUAL   reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    GREATERTHAN     reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    GREATERTHANEQUAL reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    IN              reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    NOT             reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    NULL            reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    LPAREN          reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    NUMBER_INT      reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    NUMBER_FLOAT    reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    NUMBER_EXPONENT reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    COMMA           reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    ID              reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    SINGLEQUOTE     reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    RPAREN          reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    COLON           reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    PIPE            reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    REFASSIGN       reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    THEN            reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    LOOP            reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    SEMICOLON       reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    RANGE           reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    POWER           reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    TIMES           reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    DIVIDE          reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    MOD             reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    REM             reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .)
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154

  ! PLUS            [ reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .) ]
  ! MINUS           [ reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .) ]
  ! CONCAT          [ reduce using rule 37 (relation -> simple_expression EQUAL simple_expression .) ]


state 233

    (38) relation -> simple_expression NOTEQUAL simple_expression .
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    AND             reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    OR              reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    XOR             reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    DOTDOT          reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    EQUAL           reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    NOTEQUAL        reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    LESSTHAN        reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    LESSTHANEQUAL   reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    GREATERTHAN     reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    GREATERTHANEQUAL reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    IN              reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    NOT             reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    NULL            reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    LPAREN          reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    NUMBER_INT      reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    NUMBER_FLOAT    reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    NUMBER_EXPONENT reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    COMMA           reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    ID              reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    SINGLEQUOTE     reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    RPAREN          reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    COLON           reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    PIPE            reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    REFASSIGN       reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    THEN            reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    LOOP            reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    SEMICOLON       reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    RANGE           reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    POWER           reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    TIMES           reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    DIVIDE          reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    MOD             reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    REM             reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .)
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154

  ! PLUS            [ reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .) ]
  ! MINUS           [ reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .) ]
  ! CONCAT          [ reduce using rule 38 (relation -> simple_expression NOTEQUAL simple_expression .) ]


state 234

    (39) relation -> simple_expression LESSTHAN simple_expression .
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    AND             reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    OR              reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    XOR             reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    DOTDOT          reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    EQUAL           reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    NOTEQUAL        reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    LESSTHAN        reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    LESSTHANEQUAL   reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    GREATERTHAN     reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    GREATERTHANEQUAL reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    IN              reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    NOT             reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    NULL            reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    LPAREN          reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    NUMBER_INT      reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    NUMBER_FLOAT    reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    NUMBER_EXPONENT reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    COMMA           reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    ID              reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    SINGLEQUOTE     reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    RPAREN          reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    COLON           reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    PIPE            reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    REFASSIGN       reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    THEN            reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    LOOP            reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    SEMICOLON       reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    RANGE           reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    POWER           reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    TIMES           reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    DIVIDE          reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    MOD             reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    REM             reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .)
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154

  ! PLUS            [ reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .) ]
  ! MINUS           [ reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .) ]
  ! CONCAT          [ reduce using rule 39 (relation -> simple_expression LESSTHAN simple_expression .) ]


state 235

    (40) relation -> simple_expression LESSTHANEQUAL simple_expression .
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    AND             reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    OR              reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    XOR             reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    DOTDOT          reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    EQUAL           reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    NOTEQUAL        reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    LESSTHAN        reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    LESSTHANEQUAL   reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    GREATERTHAN     reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    GREATERTHANEQUAL reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    IN              reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    NOT             reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    NULL            reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    LPAREN          reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    NUMBER_INT      reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    NUMBER_FLOAT    reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    NUMBER_EXPONENT reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    COMMA           reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    ID              reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    SINGLEQUOTE     reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    RPAREN          reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    COLON           reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    PIPE            reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    REFASSIGN       reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    THEN            reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    LOOP            reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    SEMICOLON       reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    RANGE           reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    POWER           reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    TIMES           reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    DIVIDE          reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    MOD             reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    REM             reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .)
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154

  ! PLUS            [ reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .) ]
  ! MINUS           [ reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .) ]
  ! CONCAT          [ reduce using rule 40 (relation -> simple_expression LESSTHANEQUAL simple_expression .) ]


state 236

    (41) relation -> simple_expression GREATERTHAN simple_expression .
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    AND             reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    OR              reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    XOR             reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    DOTDOT          reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    EQUAL           reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    NOTEQUAL        reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    LESSTHAN        reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    LESSTHANEQUAL   reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    GREATERTHAN     reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    GREATERTHANEQUAL reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    IN              reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    NOT             reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    NULL            reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    LPAREN          reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    NUMBER_INT      reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    NUMBER_FLOAT    reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    NUMBER_EXPONENT reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    COMMA           reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    ID              reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    SINGLEQUOTE     reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    RPAREN          reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    COLON           reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    PIPE            reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    REFASSIGN       reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    THEN            reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    LOOP            reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    SEMICOLON       reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    RANGE           reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    POWER           reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    TIMES           reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    DIVIDE          reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    MOD             reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    REM             reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .)
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154

  ! PLUS            [ reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .) ]
  ! MINUS           [ reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .) ]
  ! CONCAT          [ reduce using rule 41 (relation -> simple_expression GREATERTHAN simple_expression .) ]


state 237

    (42) relation -> simple_expression GREATERTHANEQUAL simple_expression .
    (47) simple_expression -> simple_expression . PLUS term
    (48) simple_expression -> simple_expression . MINUS term
    (49) simple_expression -> simple_expression . CONCAT term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    AND             reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    OR              reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    XOR             reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    DOTDOT          reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    EQUAL           reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    NOTEQUAL        reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    LESSTHAN        reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    LESSTHANEQUAL   reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    GREATERTHAN     reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    GREATERTHANEQUAL reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    IN              reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    NOT             reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    NULL            reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    LPAREN          reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    NUMBER_INT      reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    NUMBER_FLOAT    reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    NUMBER_EXPONENT reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    COMMA           reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    ID              reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    SINGLEQUOTE     reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    RPAREN          reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    COLON           reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    PIPE            reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    REFASSIGN       reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    THEN            reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    LOOP            reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    SEMICOLON       reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    RANGE           reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    POWER           reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    TIMES           reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    DIVIDE          reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    MOD             reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    REM             reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .)
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    CONCAT          shift and go to state 154

  ! PLUS            [ reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .) ]
  ! MINUS           [ reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .) ]
  ! CONCAT          [ reduce using rule 42 (relation -> simple_expression GREATERTHANEQUAL simple_expression .) ]


state 238

    (43) relation -> simple_expression IN range .

    AND             reduce using rule 43 (relation -> simple_expression IN range .)
    OR              reduce using rule 43 (relation -> simple_expression IN range .)
    XOR             reduce using rule 43 (relation -> simple_expression IN range .)
    DOTDOT          reduce using rule 43 (relation -> simple_expression IN range .)
    EQUAL           reduce using rule 43 (relation -> simple_expression IN range .)
    NOTEQUAL        reduce using rule 43 (relation -> simple_expression IN range .)
    LESSTHAN        reduce using rule 43 (relation -> simple_expression IN range .)
    LESSTHANEQUAL   reduce using rule 43 (relation -> simple_expression IN range .)
    GREATERTHAN     reduce using rule 43 (relation -> simple_expression IN range .)
    GREATERTHANEQUAL reduce using rule 43 (relation -> simple_expression IN range .)
    IN              reduce using rule 43 (relation -> simple_expression IN range .)
    NOT             reduce using rule 43 (relation -> simple_expression IN range .)
    PLUS            reduce using rule 43 (relation -> simple_expression IN range .)
    MINUS           reduce using rule 43 (relation -> simple_expression IN range .)
    CONCAT          reduce using rule 43 (relation -> simple_expression IN range .)
    NULL            reduce using rule 43 (relation -> simple_expression IN range .)
    LPAREN          reduce using rule 43 (relation -> simple_expression IN range .)
    NUMBER_INT      reduce using rule 43 (relation -> simple_expression IN range .)
    NUMBER_FLOAT    reduce using rule 43 (relation -> simple_expression IN range .)
    NUMBER_EXPONENT reduce using rule 43 (relation -> simple_expression IN range .)
    COMMA           reduce using rule 43 (relation -> simple_expression IN range .)
    ID              reduce using rule 43 (relation -> simple_expression IN range .)
    SINGLEQUOTE     reduce using rule 43 (relation -> simple_expression IN range .)
    RPAREN          reduce using rule 43 (relation -> simple_expression IN range .)
    COLON           reduce using rule 43 (relation -> simple_expression IN range .)
    PIPE            reduce using rule 43 (relation -> simple_expression IN range .)
    REFASSIGN       reduce using rule 43 (relation -> simple_expression IN range .)
    THEN            reduce using rule 43 (relation -> simple_expression IN range .)
    LOOP            reduce using rule 43 (relation -> simple_expression IN range .)
    SEMICOLON       reduce using rule 43 (relation -> simple_expression IN range .)
    RANGE           reduce using rule 43 (relation -> simple_expression IN range .)
    POWER           reduce using rule 43 (relation -> simple_expression IN range .)
    TIMES           reduce using rule 43 (relation -> simple_expression IN range .)
    DIVIDE          reduce using rule 43 (relation -> simple_expression IN range .)
    MOD             reduce using rule 43 (relation -> simple_expression IN range .)
    REM             reduce using rule 43 (relation -> simple_expression IN range .)


state 239

    (44) relation -> simple_expression IN name .
    (100) range_attribute_reference -> name . SINGLEQUOTE range_attribute_designator
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (67) primary -> name .
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for OR resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for XOR resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for DOTDOT resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for EQUAL resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for IN resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for NOT resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for PLUS resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for MINUS resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for NULL resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for NUMBER_INT resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for NUMBER_FLOAT resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for NUMBER_EXPONENT resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for COMMA resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for ID resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for RPAREN resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for COLON resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for PIPE resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for REFASSIGN resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for THEN resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for LOOP resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for RANGE resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for POWER resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for TIMES resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for MOD resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for REM resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for POWER resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for TIMES resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for MOD resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for REM resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for DOTDOT resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for PLUS resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for MINUS resolved using rule 44 (relation -> simple_expression IN name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 44 (relation -> simple_expression IN name .)
    AND             reduce using rule 44 (relation -> simple_expression IN name .)
    OR              reduce using rule 44 (relation -> simple_expression IN name .)
    XOR             reduce using rule 44 (relation -> simple_expression IN name .)
    DOTDOT          reduce using rule 44 (relation -> simple_expression IN name .)
    EQUAL           reduce using rule 44 (relation -> simple_expression IN name .)
    NOTEQUAL        reduce using rule 44 (relation -> simple_expression IN name .)
    LESSTHAN        reduce using rule 44 (relation -> simple_expression IN name .)
    LESSTHANEQUAL   reduce using rule 44 (relation -> simple_expression IN name .)
    GREATERTHAN     reduce using rule 44 (relation -> simple_expression IN name .)
    GREATERTHANEQUAL reduce using rule 44 (relation -> simple_expression IN name .)
    IN              reduce using rule 44 (relation -> simple_expression IN name .)
    NOT             reduce using rule 44 (relation -> simple_expression IN name .)
    PLUS            reduce using rule 44 (relation -> simple_expression IN name .)
    MINUS           reduce using rule 44 (relation -> simple_expression IN name .)
    CONCAT          reduce using rule 44 (relation -> simple_expression IN name .)
    NULL            reduce using rule 44 (relation -> simple_expression IN name .)
    NUMBER_INT      reduce using rule 44 (relation -> simple_expression IN name .)
    NUMBER_FLOAT    reduce using rule 44 (relation -> simple_expression IN name .)
    NUMBER_EXPONENT reduce using rule 44 (relation -> simple_expression IN name .)
    COMMA           reduce using rule 44 (relation -> simple_expression IN name .)
    ID              reduce using rule 44 (relation -> simple_expression IN name .)
    RPAREN          reduce using rule 44 (relation -> simple_expression IN name .)
    COLON           reduce using rule 44 (relation -> simple_expression IN name .)
    PIPE            reduce using rule 44 (relation -> simple_expression IN name .)
    REFASSIGN       reduce using rule 44 (relation -> simple_expression IN name .)
    THEN            reduce using rule 44 (relation -> simple_expression IN name .)
    LOOP            reduce using rule 44 (relation -> simple_expression IN name .)
    SEMICOLON       reduce using rule 44 (relation -> simple_expression IN name .)
    RANGE           reduce using rule 44 (relation -> simple_expression IN name .)
    POWER           reduce using rule 44 (relation -> simple_expression IN name .)
    TIMES           reduce using rule 44 (relation -> simple_expression IN name .)
    DIVIDE          reduce using rule 44 (relation -> simple_expression IN name .)
    MOD             reduce using rule 44 (relation -> simple_expression IN name .)
    REM             reduce using rule 44 (relation -> simple_expression IN name .)
    SINGLEQUOTE     shift and go to state 216
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113

  ! LPAREN          [ reduce using rule 44 (relation -> simple_expression IN name .) ]
  ! SINGLEQUOTE     [ reduce using rule 44 (relation -> simple_expression IN name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! AND             [ reduce using rule 112 (function_call -> name .) ]
  ! OR              [ reduce using rule 112 (function_call -> name .) ]
  ! XOR             [ reduce using rule 112 (function_call -> name .) ]
  ! DOTDOT          [ reduce using rule 112 (function_call -> name .) ]
  ! EQUAL           [ reduce using rule 112 (function_call -> name .) ]
  ! NOTEQUAL        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHAN        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHANEQUAL   [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHAN     [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHANEQUAL [ reduce using rule 112 (function_call -> name .) ]
  ! IN              [ reduce using rule 112 (function_call -> name .) ]
  ! NOT             [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]
  ! NULL            [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_INT      [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_FLOAT    [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_EXPONENT [ reduce using rule 112 (function_call -> name .) ]
  ! COMMA           [ reduce using rule 112 (function_call -> name .) ]
  ! ID              [ reduce using rule 112 (function_call -> name .) ]
  ! RPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! COLON           [ reduce using rule 112 (function_call -> name .) ]
  ! PIPE            [ reduce using rule 112 (function_call -> name .) ]
  ! REFASSIGN       [ reduce using rule 112 (function_call -> name .) ]
  ! THEN            [ reduce using rule 112 (function_call -> name .) ]
  ! LOOP            [ reduce using rule 112 (function_call -> name .) ]
  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! RANGE           [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 67 (primary -> name .) ]
  ! TIMES           [ reduce using rule 67 (primary -> name .) ]
  ! DIVIDE          [ reduce using rule 67 (primary -> name .) ]
  ! MOD             [ reduce using rule 67 (primary -> name .) ]
  ! REM             [ reduce using rule 67 (primary -> name .) ]
  ! DOTDOT          [ reduce using rule 67 (primary -> name .) ]
  ! PLUS            [ reduce using rule 67 (primary -> name .) ]
  ! MINUS           [ reduce using rule 67 (primary -> name .) ]
  ! CONCAT          [ reduce using rule 67 (primary -> name .) ]

    actual_parameter_part          shift and go to state 36

state 240

    (45) relation -> simple_expression NOT IN . range
    (46) relation -> simple_expression NOT IN . name
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    simple_expression              shift and go to state 205
    range                          shift and go to state 289
    name                           shift and go to state 290
    range_attribute_reference      shift and go to state 66
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 241

    (47) simple_expression -> simple_expression PLUS term .

    DOTDOT          reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    EQUAL           reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    NOTEQUAL        reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    LESSTHAN        reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    LESSTHANEQUAL   reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    GREATERTHAN     reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    GREATERTHANEQUAL reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    IN              reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    NOT             reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    PLUS            reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    MINUS           reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    CONCAT          reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    AND             reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    OR              reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    XOR             reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    NULL            reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    LPAREN          reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    NUMBER_INT      reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    NUMBER_FLOAT    reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    NUMBER_EXPONENT reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    COMMA           reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    ID              reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    SINGLEQUOTE     reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    RPAREN          reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    COLON           reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    PIPE            reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    REFASSIGN       reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    THEN            reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    LOOP            reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    SEMICOLON       reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    RANGE           reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    POWER           reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    TIMES           reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    DIVIDE          reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    MOD             reduce using rule 47 (simple_expression -> simple_expression PLUS term .)
    REM             reduce using rule 47 (simple_expression -> simple_expression PLUS term .)


state 242

    (48) simple_expression -> simple_expression MINUS term .

    DOTDOT          reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    EQUAL           reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    NOTEQUAL        reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    LESSTHAN        reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    LESSTHANEQUAL   reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    GREATERTHAN     reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    GREATERTHANEQUAL reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    IN              reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    NOT             reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    PLUS            reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    MINUS           reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    CONCAT          reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    AND             reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    OR              reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    XOR             reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    NULL            reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    LPAREN          reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    NUMBER_INT      reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    NUMBER_FLOAT    reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    NUMBER_EXPONENT reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    COMMA           reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    ID              reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    SINGLEQUOTE     reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    RPAREN          reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    COLON           reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    PIPE            reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    REFASSIGN       reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    THEN            reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    LOOP            reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    SEMICOLON       reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    RANGE           reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    POWER           reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    TIMES           reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    DIVIDE          reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    MOD             reduce using rule 48 (simple_expression -> simple_expression MINUS term .)
    REM             reduce using rule 48 (simple_expression -> simple_expression MINUS term .)


state 243

    (49) simple_expression -> simple_expression CONCAT term .

    DOTDOT          reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    EQUAL           reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    NOTEQUAL        reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    LESSTHAN        reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    LESSTHANEQUAL   reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    GREATERTHAN     reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    GREATERTHANEQUAL reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    IN              reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    NOT             reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    PLUS            reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    MINUS           reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    CONCAT          reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    AND             reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    OR              reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    XOR             reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    NULL            reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    LPAREN          reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    NUMBER_INT      reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    NUMBER_FLOAT    reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    NUMBER_EXPONENT reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    COMMA           reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    ID              reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    SINGLEQUOTE     reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    RPAREN          reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    COLON           reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    PIPE            reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    REFASSIGN       reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    THEN            reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    LOOP            reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    SEMICOLON       reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    RANGE           reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    POWER           reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    TIMES           reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    DIVIDE          reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    MOD             reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)
    REM             reduce using rule 49 (simple_expression -> simple_expression CONCAT term .)


state 244

    (55) term -> factor TIMES factor . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    factor                         shift and go to state 73
    term                           shift and go to state 291
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 245

    (56) term -> factor DIVIDE factor . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    factor                         shift and go to state 73
    term                           shift and go to state 292
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 246

    (57) term -> factor MOD factor . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    factor                         shift and go to state 73
    term                           shift and go to state 293
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 247

    (58) term -> factor REM factor . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    factor                         shift and go to state 73
    term                           shift and go to state 294
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    name                           shift and go to state 156
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 248

    (60) factor -> primary POWER primary .

    TIMES           reduce using rule 60 (factor -> primary POWER primary .)
    DIVIDE          reduce using rule 60 (factor -> primary POWER primary .)
    MOD             reduce using rule 60 (factor -> primary POWER primary .)
    REM             reduce using rule 60 (factor -> primary POWER primary .)
    DOTDOT          reduce using rule 60 (factor -> primary POWER primary .)
    EQUAL           reduce using rule 60 (factor -> primary POWER primary .)
    NOTEQUAL        reduce using rule 60 (factor -> primary POWER primary .)
    LESSTHAN        reduce using rule 60 (factor -> primary POWER primary .)
    LESSTHANEQUAL   reduce using rule 60 (factor -> primary POWER primary .)
    GREATERTHAN     reduce using rule 60 (factor -> primary POWER primary .)
    GREATERTHANEQUAL reduce using rule 60 (factor -> primary POWER primary .)
    IN              reduce using rule 60 (factor -> primary POWER primary .)
    NOT             reduce using rule 60 (factor -> primary POWER primary .)
    PLUS            reduce using rule 60 (factor -> primary POWER primary .)
    MINUS           reduce using rule 60 (factor -> primary POWER primary .)
    CONCAT          reduce using rule 60 (factor -> primary POWER primary .)
    AND             reduce using rule 60 (factor -> primary POWER primary .)
    OR              reduce using rule 60 (factor -> primary POWER primary .)
    XOR             reduce using rule 60 (factor -> primary POWER primary .)
    NULL            reduce using rule 60 (factor -> primary POWER primary .)
    LPAREN          reduce using rule 60 (factor -> primary POWER primary .)
    NUMBER_INT      reduce using rule 60 (factor -> primary POWER primary .)
    NUMBER_FLOAT    reduce using rule 60 (factor -> primary POWER primary .)
    NUMBER_EXPONENT reduce using rule 60 (factor -> primary POWER primary .)
    COMMA           reduce using rule 60 (factor -> primary POWER primary .)
    ID              reduce using rule 60 (factor -> primary POWER primary .)
    SINGLEQUOTE     reduce using rule 60 (factor -> primary POWER primary .)
    RPAREN          reduce using rule 60 (factor -> primary POWER primary .)
    COLON           reduce using rule 60 (factor -> primary POWER primary .)
    PIPE            reduce using rule 60 (factor -> primary POWER primary .)
    REFASSIGN       reduce using rule 60 (factor -> primary POWER primary .)
    THEN            reduce using rule 60 (factor -> primary POWER primary .)
    LOOP            reduce using rule 60 (factor -> primary POWER primary .)
    SEMICOLON       reduce using rule 60 (factor -> primary POWER primary .)
    RANGE           reduce using rule 60 (factor -> primary POWER primary .)
    POWER           reduce using rule 60 (factor -> primary POWER primary .)


state 249

    (25) attribute_designator -> ID LPAREN expression . RPAREN

    RPAREN          shift and go to state 295


state 250

    (1) subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator . SEMICOLON

    SEMICOLON       shift and go to state 296


state 251

    (2) subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON .

    $end            reduce using rule 2 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON .)
    LPAREN          reduce using rule 2 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON .)
    PROCEDURE       reduce using rule 2 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON .)
    TYPE            reduce using rule 2 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON .)
    COLON           reduce using rule 2 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON .)
    FOR             reduce using rule 2 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON .)
    BEGIN           reduce using rule 2 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END SEMICOLON .)


state 252

    (3) designator -> name . DOT ID
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    DOT             shift and go to state 297
    LPAREN          shift and go to state 34
    SINGLEQUOTE     shift and go to state 35

  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 253

    (4) designator -> ID .
    (15) direct_name -> ID .

    SEMICOLON       reduce using rule 4 (designator -> ID .)
    DOT             reduce using rule 15 (direct_name -> ID .)
    LPAREN          reduce using rule 15 (direct_name -> ID .)
    SINGLEQUOTE     reduce using rule 15 (direct_name -> ID .)


state 254

    (179) assignment_statement -> name ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 298


state 255

    (174) entry_call_statement -> name actual_parameter_part SEMICOLON .

    NULL            reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    EXIT            reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    IF              reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    LOOP            reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    WHILE           reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    FOR             reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    ID              reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    SINGLEQUOTE     reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    END             reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    ELSIF           reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)
    ELSE            reduce using rule 174 (entry_call_statement -> name actual_parameter_part SEMICOLON .)


state 256

    (177) exit_statement -> EXIT name SEMICOLON .

    NULL            reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    EXIT            reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    IF              reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    LOOP            reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    WHILE           reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    FOR             reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    ID              reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    SINGLEQUOTE     reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    END             reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    ELSIF           reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)
    ELSE            reduce using rule 177 (exit_statement -> EXIT name SEMICOLON .)


state 257

    (156) if_statement -> IF expression THEN . sequence_of_statements if_statemant_loop
    (160) sequence_of_statements -> . statement sequence_of_statements
    (161) sequence_of_statements -> . statement
    (162) statement -> . simple_statement
    (163) statement -> . compound_statement
    (168) simple_statement -> . null_statement
    (169) simple_statement -> . assignment_statement
    (170) simple_statement -> . exit_statement
    (171) simple_statement -> . entry_call_statement
    (172) simple_statement -> . code_statement
    (164) compound_statement -> . if_statement
    (165) compound_statement -> . loop_statement
    (178) null_statement -> . NULL
    (179) assignment_statement -> . name ASSIGN expression SEMICOLON
    (176) exit_statement -> . EXIT SEMICOLON
    (177) exit_statement -> . EXIT name SEMICOLON
    (173) entry_call_statement -> . name SEMICOLON
    (174) entry_call_statement -> . name actual_parameter_part SEMICOLON
    (175) code_statement -> . qualified_expression SEMICOLON
    (156) if_statement -> . IF expression THEN sequence_of_statements if_statemant_loop
    (148) loop_statement -> . LOOP sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> . LOOP sequence_of_statements END LOOP name SEMICOLON
    (150) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (152) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 97
    EXIT            shift and go to state 99
    IF              shift and go to state 101
    LOOP            shift and go to state 102
    WHILE           shift and go to state 103
    FOR             shift and go to state 104
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    sequence_of_statements         shift and go to state 299
    statement                      shift and go to state 87
    simple_statement               shift and go to state 88
    compound_statement             shift and go to state 89
    null_statement                 shift and go to state 90
    assignment_statement           shift and go to state 91
    exit_statement                 shift and go to state 92
    entry_call_statement           shift and go to state 93
    code_statement                 shift and go to state 94
    if_statement                   shift and go to state 95
    loop_statement                 shift and go to state 96
    name                           shift and go to state 98
    qualified_expression           shift and go to state 100
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 258

    (148) loop_statement -> LOOP sequence_of_statements END . LOOP SEMICOLON
    (149) loop_statement -> LOOP sequence_of_statements END . LOOP name SEMICOLON

    LOOP            shift and go to state 300


state 259

    (150) loop_statement -> WHILE expression LOOP . sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> WHILE expression LOOP . sequence_of_statements END LOOP name SEMICOLON
    (160) sequence_of_statements -> . statement sequence_of_statements
    (161) sequence_of_statements -> . statement
    (162) statement -> . simple_statement
    (163) statement -> . compound_statement
    (168) simple_statement -> . null_statement
    (169) simple_statement -> . assignment_statement
    (170) simple_statement -> . exit_statement
    (171) simple_statement -> . entry_call_statement
    (172) simple_statement -> . code_statement
    (164) compound_statement -> . if_statement
    (165) compound_statement -> . loop_statement
    (178) null_statement -> . NULL
    (179) assignment_statement -> . name ASSIGN expression SEMICOLON
    (176) exit_statement -> . EXIT SEMICOLON
    (177) exit_statement -> . EXIT name SEMICOLON
    (173) entry_call_statement -> . name SEMICOLON
    (174) entry_call_statement -> . name actual_parameter_part SEMICOLON
    (175) code_statement -> . qualified_expression SEMICOLON
    (156) if_statement -> . IF expression THEN sequence_of_statements if_statemant_loop
    (148) loop_statement -> . LOOP sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> . LOOP sequence_of_statements END LOOP name SEMICOLON
    (150) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (152) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 97
    EXIT            shift and go to state 99
    IF              shift and go to state 101
    LOOP            shift and go to state 102
    WHILE           shift and go to state 103
    FOR             shift and go to state 104
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    sequence_of_statements         shift and go to state 301
    name                           shift and go to state 98
    statement                      shift and go to state 87
    simple_statement               shift and go to state 88
    compound_statement             shift and go to state 89
    null_statement                 shift and go to state 90
    assignment_statement           shift and go to state 91
    exit_statement                 shift and go to state 92
    entry_call_statement           shift and go to state 93
    code_statement                 shift and go to state 94
    if_statement                   shift and go to state 95
    loop_statement                 shift and go to state 96
    qualified_expression           shift and go to state 100
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 260

    (152) loop_statement -> FOR ID IN . discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> FOR ID IN . discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> FOR ID IN . REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> FOR ID IN . REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (166) discrete_subtype_definition -> . subtype_indication
    (167) discrete_subtype_definition -> . range
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    REVERSE         shift and go to state 303
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    discrete_subtype_definition    shift and go to state 302
    name                           shift and go to state 166
    subtype_indication             shift and go to state 304
    range                          shift and go to state 305
    range_attribute_reference      shift and go to state 66
    simple_expression              shift and go to state 205
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 261

    (132) use_clause -> LPAREN USE name use_clause_loop RPAREN .

    LPAREN          reduce using rule 132 (use_clause -> LPAREN USE name use_clause_loop RPAREN .)
    PROCEDURE       reduce using rule 132 (use_clause -> LPAREN USE name use_clause_loop RPAREN .)
    TYPE            reduce using rule 132 (use_clause -> LPAREN USE name use_clause_loop RPAREN .)
    COLON           reduce using rule 132 (use_clause -> LPAREN USE name use_clause_loop RPAREN .)
    FOR             reduce using rule 132 (use_clause -> LPAREN USE name use_clause_loop RPAREN .)
    BEGIN           reduce using rule 132 (use_clause -> LPAREN USE name use_clause_loop RPAREN .)


state 262

    (134) use_clause_loop -> COMMA name . use_clause_loop
    (135) use_clause_loop -> COMMA name .
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (134) use_clause_loop -> . COMMA name use_clause_loop
    (135) use_clause_loop -> . COMMA name
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 112 (function_call -> name .)
  ! shift/reduce conflict for COMMA resolved as shift
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35
    RPAREN          reduce using rule 112 (function_call -> name .)
    COMMA           shift and go to state 184

  ! RPAREN          [ reduce using rule 135 (use_clause_loop -> COMMA name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! COMMA           [ reduce using rule 112 (function_call -> name .) ]

    use_clause_loop                shift and go to state 306
    actual_parameter_part          shift and go to state 36

state 263

    (133) use_clause -> LPAREN TYPE name use_clause_loop RPAREN .

    LPAREN          reduce using rule 133 (use_clause -> LPAREN TYPE name use_clause_loop RPAREN .)
    PROCEDURE       reduce using rule 133 (use_clause -> LPAREN TYPE name use_clause_loop RPAREN .)
    TYPE            reduce using rule 133 (use_clause -> LPAREN TYPE name use_clause_loop RPAREN .)
    COLON           reduce using rule 133 (use_clause -> LPAREN TYPE name use_clause_loop RPAREN .)
    FOR             reduce using rule 133 (use_clause -> LPAREN TYPE name use_clause_loop RPAREN .)
    BEGIN           reduce using rule 133 (use_clause -> LPAREN TYPE name use_clause_loop RPAREN .)


state 264

    (147) identifier_list -> ID COMMA identifier_list .

    COLON           reduce using rule 147 (identifier_list -> ID COMMA identifier_list .)


state 265

    (136) discriminant_part -> identifier_list COLON name . ASSIGN expression
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    ASSIGN          shift and go to state 307
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35

  ! ASSIGN          [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 266

    (145) number_declaration -> COLON CONSTANT ASSIGN expression SEMICOLON .

    LPAREN          reduce using rule 145 (number_declaration -> COLON CONSTANT ASSIGN expression SEMICOLON .)
    PROCEDURE       reduce using rule 145 (number_declaration -> COLON CONSTANT ASSIGN expression SEMICOLON .)
    TYPE            reduce using rule 145 (number_declaration -> COLON CONSTANT ASSIGN expression SEMICOLON .)
    COLON           reduce using rule 145 (number_declaration -> COLON CONSTANT ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 145 (number_declaration -> COLON CONSTANT ASSIGN expression SEMICOLON .)
    BEGIN           reduce using rule 145 (number_declaration -> COLON CONSTANT ASSIGN expression SEMICOLON .)


state 267

    (16) attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE . expression SEMICOLON
    (17) attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE . name SEMICOLON
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    name                           shift and go to state 308
    expression                     shift and go to state 309
    relation                       shift and go to state 63
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    simple_expression              shift and go to state 178
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 268

    (129) enumeration_representation_clause -> FOR direct_name USE named_array_aggregate SEMICOLON .

    LPAREN          reduce using rule 129 (enumeration_representation_clause -> FOR direct_name USE named_array_aggregate SEMICOLON .)
    PROCEDURE       reduce using rule 129 (enumeration_representation_clause -> FOR direct_name USE named_array_aggregate SEMICOLON .)
    TYPE            reduce using rule 129 (enumeration_representation_clause -> FOR direct_name USE named_array_aggregate SEMICOLON .)
    COLON           reduce using rule 129 (enumeration_representation_clause -> FOR direct_name USE named_array_aggregate SEMICOLON .)
    FOR             reduce using rule 129 (enumeration_representation_clause -> FOR direct_name USE named_array_aggregate SEMICOLON .)
    BEGIN           reduce using rule 129 (enumeration_representation_clause -> FOR direct_name USE named_array_aggregate SEMICOLON .)


state 269

    (111) slice -> name LPAREN discrete_range RPAREN .
    (93) index_constraint -> LPAREN discrete_range RPAREN .

  ! reduce/reduce conflict for RPAREN resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for COMMA resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for PIPE resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for REFASSIGN resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for PLUS resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for MINUS resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for ID resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for SINGLEQUOTE resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for NULL resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for LPAREN resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for NUMBER_INT resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for NUMBER_FLOAT resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for NUMBER_EXPONENT resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
  ! reduce/reduce conflict for LOOP resolved using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    DOT             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    RANGE           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    DIGITS          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    POWER           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    TIMES           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    DIVIDE          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    MOD             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    REM             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    DOTDOT          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    EQUAL           reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    NOTEQUAL        reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    LESSTHAN        reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    LESSTHANEQUAL   reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    GREATERTHAN     reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    GREATERTHANEQUAL reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    IN              reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    NOT             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    CONCAT          reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    AND             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    OR              reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    XOR             reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .)
    RPAREN          reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    COMMA           reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    PIPE            reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    REFASSIGN       reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    PLUS            reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    MINUS           reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    ID              reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    SINGLEQUOTE     reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    NULL            reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    LPAREN          reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    NUMBER_INT      reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    NUMBER_FLOAT    reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    NUMBER_EXPONENT reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)
    LOOP            reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)

  ! RPAREN          [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! LPAREN          [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! SINGLEQUOTE     [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! COMMA           [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! PLUS            [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! MINUS           [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! PIPE            [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! REFASSIGN       [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! ID              [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! NULL            [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! NUMBER_INT      [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! NUMBER_FLOAT    [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! NUMBER_EXPONENT [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]
  ! LOOP            [ reduce using rule 111 (slice -> name LPAREN discrete_range RPAREN .) ]


state 270

    (94) index_constraint -> LPAREN discrete_range COMMA . discrete_range index_constraint RPAREN
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    discrete_range                 shift and go to state 310
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    name                           shift and go to state 166
    range_attribute_reference      shift and go to state 66
    simple_expression              shift and go to state 205
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 271

    (87) discriminant_constraint -> LPAREN discriminant_association COMMA . discriminant_association RPAREN
    (89) discriminant_association -> . selector_name PIPE selector_name REFASSIGN expression
    (90) discriminant_association -> . selector_name PIPE selector_name discriminant_association REFASSIGN expression
    (91) discriminant_association -> . PIPE selector_name
    (92) discriminant_association -> . expression
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PIPE            shift and go to state 199
    ID              shift and go to state 211
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    discriminant_association       shift and go to state 311
    selector_name                  shift and go to state 209
    expression                     shift and go to state 210
    character_literal              shift and go to state 212
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    indexed_component              shift and go to state 15

state 272

    (89) discriminant_association -> selector_name PIPE . selector_name REFASSIGN expression
    (90) discriminant_association -> selector_name PIPE . selector_name discriminant_association REFASSIGN expression
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE

    ID              shift and go to state 192
    SINGLEQUOTE     shift and go to state 16

    selector_name                  shift and go to state 312
    character_literal              shift and go to state 55

state 273

    (91) discriminant_association -> PIPE selector_name .

    COMMA           reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    RPAREN          reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    PIPE            reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    REFASSIGN       reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    PLUS            reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    MINUS           reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    ID              reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    SINGLEQUOTE     reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    NULL            reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    LPAREN          reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    NUMBER_INT      reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    NUMBER_FLOAT    reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    NUMBER_EXPONENT reduce using rule 91 (discriminant_association -> PIPE selector_name .)
    LOOP            reduce using rule 91 (discriminant_association -> PIPE selector_name .)


state 274

    (70) qualified_expression -> name SINGLEQUOTE LPAREN expression . RPAREN
    (77) discrete_choice -> expression .

    RPAREN          shift and go to state 313
    PIPE            reduce using rule 77 (discrete_choice -> expression .)
    REFASSIGN       reduce using rule 77 (discrete_choice -> expression .)


state 275

    (102) range_attribute_designator -> RANGE LPAREN . expression RPAREN
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    expression                     shift and go to state 314
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 276

    (95) digits_constraint -> DIGITS expression range_constraint .

    RPAREN          reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    COMMA           reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    PIPE            reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    REFASSIGN       reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    PLUS            reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    MINUS           reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    ID              reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    SINGLEQUOTE     reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    NULL            reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    LPAREN          reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    NUMBER_INT      reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    NUMBER_FLOAT    reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    NUMBER_EXPONENT reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)
    LOOP            reduce using rule 95 (digits_constraint -> DIGITS expression range_constraint .)


state 277

    (72) named_array_aggregate -> LPAREN array_component_association COMMA array_component_association . named_array_aggregate RPAREN
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association

    LPAREN          shift and go to state 194
    COMMA           shift and go to state 82

    named_array_aggregate          shift and go to state 315

state 278

    (74) array_component_association -> discrete_choice_list REFASSIGN expression .

    COMMA           reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    DOTDOT          reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    EQUAL           reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    NOTEQUAL        reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    LESSTHAN        reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    LESSTHANEQUAL   reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    GREATERTHAN     reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    GREATERTHANEQUAL reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    IN              reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    NOT             reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    PLUS            reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    MINUS           reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    CONCAT          reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    AND             reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    OR              reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    XOR             reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    NULL            reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    LPAREN          reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    NUMBER_INT      reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    NUMBER_FLOAT    reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    NUMBER_EXPONENT reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    ID              reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    SINGLEQUOTE     reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    RPAREN          reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    COLON           reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    PIPE            reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    REFASSIGN       reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    THEN            reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    LOOP            reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    SEMICOLON       reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    RANGE           reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    POWER           reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    TIMES           reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    DIVIDE          reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    MOD             reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)
    REM             reduce using rule 74 (array_component_association -> discrete_choice_list REFASSIGN expression .)


state 279

    (76) discrete_choice_list -> discrete_choice PIPE discrete_choice . discrete_choice_list
    (75) discrete_choice_list -> . discrete_choice
    (76) discrete_choice_list -> . discrete_choice PIPE discrete_choice discrete_choice_list
    (77) discrete_choice -> . expression
    (78) discrete_choice -> . discrete_range
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    discrete_choice                shift and go to state 131
    discrete_choice_list           shift and go to state 316
    expression                     shift and go to state 164
    discrete_range                 shift and go to state 132
    relation                       shift and go to state 63
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    simple_expression              shift and go to state 165
    name                           shift and go to state 166
    range_attribute_reference      shift and go to state 66
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 280

    (18) indexed_component -> name LPAREN . expression RPAREN
    (19) indexed_component -> name LPAREN . expression COLON indexed_component RPAREN
    (111) slice -> name LPAREN . discrete_range RPAREN
    (20) type_conversion -> name LPAREN . expression RPAREN
    (21) type_conversion -> name LPAREN . name RPAREN
    (114) actual_parameter_part -> LPAREN . parameter_association RPAREN
    (115) actual_parameter_part -> LPAREN . parameter_association actual_parameter_part_loop RPAREN
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (118) parameter_association -> . expression
    (119) parameter_association -> . name
    (120) parameter_association -> . selector_name REFASSIGN expression
    (121) parameter_association -> . selector_name REFASSIGN name
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 68
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    name                           shift and go to state 56
    expression                     shift and go to state 317
    indexed_component              shift and go to state 15
    discrete_range                 shift and go to state 58
    parameter_association          shift and go to state 60
    relation                       shift and go to state 63
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 64
    selector_name                  shift and go to state 65
    simple_expression              shift and go to state 165
    range_attribute_reference      shift and go to state 66
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 281

    (19) indexed_component -> name LPAREN expression COLON indexed_component RPAREN .

    DOT             reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    LPAREN          reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    SINGLEQUOTE     reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    RPAREN          reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    RANGE           reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    DIGITS          reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    COMMA           reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    POWER           reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    TIMES           reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    DIVIDE          reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    MOD             reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    REM             reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    DOTDOT          reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    EQUAL           reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    NOTEQUAL        reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    LESSTHAN        reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    LESSTHANEQUAL   reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    GREATERTHAN     reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    GREATERTHANEQUAL reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    IN              reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    NOT             reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    PLUS            reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    MINUS           reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    CONCAT          reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    AND             reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    OR              reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    XOR             reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    ASSIGN          reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    SEMICOLON       reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    PIPE            reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    REFASSIGN       reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    NULL            reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    NUMBER_INT      reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    NUMBER_FLOAT    reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    NUMBER_EXPONENT reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    ID              reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    COLON           reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    THEN            reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)
    LOOP            reduce using rule 19 (indexed_component -> name LPAREN expression COLON indexed_component RPAREN .)


state 282

    (116) actual_parameter_part_loop -> COMMA parameter_association actual_parameter_part_loop .

    RPAREN          reduce using rule 116 (actual_parameter_part_loop -> COMMA parameter_association actual_parameter_part_loop .)


state 283

    (23) attribute_reference -> name SINGLEQUOTE . attribute_designator
    (70) qualified_expression -> name SINGLEQUOTE . LPAREN expression RPAREN
    (71) qualified_expression -> name SINGLEQUOTE . named_array_aggregate
    (24) attribute_designator -> . ID
    (25) attribute_designator -> . ID LPAREN expression RPAREN
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association

    LPAREN          shift and go to state 201
    ID              shift and go to state 84
    COMMA           shift and go to state 82

    attribute_designator           shift and go to state 83
    named_array_aggregate          shift and go to state 202

state 284

    (27) expression -> relation AND relation expression .

    RPAREN          reduce using rule 27 (expression -> relation AND relation expression .)
    COLON           reduce using rule 27 (expression -> relation AND relation expression .)
    COMMA           reduce using rule 27 (expression -> relation AND relation expression .)
    PIPE            reduce using rule 27 (expression -> relation AND relation expression .)
    REFASSIGN       reduce using rule 27 (expression -> relation AND relation expression .)
    THEN            reduce using rule 27 (expression -> relation AND relation expression .)
    LOOP            reduce using rule 27 (expression -> relation AND relation expression .)
    SEMICOLON       reduce using rule 27 (expression -> relation AND relation expression .)
    RANGE           reduce using rule 27 (expression -> relation AND relation expression .)
    PLUS            reduce using rule 27 (expression -> relation AND relation expression .)
    MINUS           reduce using rule 27 (expression -> relation AND relation expression .)
    ID              reduce using rule 27 (expression -> relation AND relation expression .)
    SINGLEQUOTE     reduce using rule 27 (expression -> relation AND relation expression .)
    NULL            reduce using rule 27 (expression -> relation AND relation expression .)
    LPAREN          reduce using rule 27 (expression -> relation AND relation expression .)
    NUMBER_INT      reduce using rule 27 (expression -> relation AND relation expression .)
    NUMBER_FLOAT    reduce using rule 27 (expression -> relation AND relation expression .)
    NUMBER_EXPONENT reduce using rule 27 (expression -> relation AND relation expression .)
    DOTDOT          reduce using rule 27 (expression -> relation AND relation expression .)
    EQUAL           reduce using rule 27 (expression -> relation AND relation expression .)
    NOTEQUAL        reduce using rule 27 (expression -> relation AND relation expression .)
    LESSTHAN        reduce using rule 27 (expression -> relation AND relation expression .)
    LESSTHANEQUAL   reduce using rule 27 (expression -> relation AND relation expression .)
    GREATERTHAN     reduce using rule 27 (expression -> relation AND relation expression .)
    GREATERTHANEQUAL reduce using rule 27 (expression -> relation AND relation expression .)
    IN              reduce using rule 27 (expression -> relation AND relation expression .)
    NOT             reduce using rule 27 (expression -> relation AND relation expression .)
    CONCAT          reduce using rule 27 (expression -> relation AND relation expression .)
    AND             reduce using rule 27 (expression -> relation AND relation expression .)
    OR              reduce using rule 27 (expression -> relation AND relation expression .)
    XOR             reduce using rule 27 (expression -> relation AND relation expression .)
    POWER           reduce using rule 27 (expression -> relation AND relation expression .)
    TIMES           reduce using rule 27 (expression -> relation AND relation expression .)
    DIVIDE          reduce using rule 27 (expression -> relation AND relation expression .)
    MOD             reduce using rule 27 (expression -> relation AND relation expression .)
    REM             reduce using rule 27 (expression -> relation AND relation expression .)


state 285

    (28) expression -> relation AND THEN relation .
    (29) expression -> relation AND THEN relation . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_FLOAT resolved as shift
  ! shift/reduce conflict for NUMBER_EXPONENT resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    RPAREN          reduce using rule 28 (expression -> relation AND THEN relation .)
    COLON           reduce using rule 28 (expression -> relation AND THEN relation .)
    PIPE            reduce using rule 28 (expression -> relation AND THEN relation .)
    REFASSIGN       reduce using rule 28 (expression -> relation AND THEN relation .)
    THEN            reduce using rule 28 (expression -> relation AND THEN relation .)
    LOOP            reduce using rule 28 (expression -> relation AND THEN relation .)
    SEMICOLON       reduce using rule 28 (expression -> relation AND THEN relation .)
    RANGE           reduce using rule 28 (expression -> relation AND THEN relation .)
    DOTDOT          reduce using rule 28 (expression -> relation AND THEN relation .)
    EQUAL           reduce using rule 28 (expression -> relation AND THEN relation .)
    NOTEQUAL        reduce using rule 28 (expression -> relation AND THEN relation .)
    LESSTHAN        reduce using rule 28 (expression -> relation AND THEN relation .)
    LESSTHANEQUAL   reduce using rule 28 (expression -> relation AND THEN relation .)
    GREATERTHAN     reduce using rule 28 (expression -> relation AND THEN relation .)
    GREATERTHANEQUAL reduce using rule 28 (expression -> relation AND THEN relation .)
    IN              reduce using rule 28 (expression -> relation AND THEN relation .)
    NOT             reduce using rule 28 (expression -> relation AND THEN relation .)
    CONCAT          reduce using rule 28 (expression -> relation AND THEN relation .)
    AND             reduce using rule 28 (expression -> relation AND THEN relation .)
    OR              reduce using rule 28 (expression -> relation AND THEN relation .)
    XOR             reduce using rule 28 (expression -> relation AND THEN relation .)
    POWER           reduce using rule 28 (expression -> relation AND THEN relation .)
    TIMES           reduce using rule 28 (expression -> relation AND THEN relation .)
    DIVIDE          reduce using rule 28 (expression -> relation AND THEN relation .)
    MOD             reduce using rule 28 (expression -> relation AND THEN relation .)
    REM             reduce using rule 28 (expression -> relation AND THEN relation .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

  ! COMMA           [ reduce using rule 28 (expression -> relation AND THEN relation .) ]
  ! PLUS            [ reduce using rule 28 (expression -> relation AND THEN relation .) ]
  ! MINUS           [ reduce using rule 28 (expression -> relation AND THEN relation .) ]
  ! ID              [ reduce using rule 28 (expression -> relation AND THEN relation .) ]
  ! SINGLEQUOTE     [ reduce using rule 28 (expression -> relation AND THEN relation .) ]
  ! NULL            [ reduce using rule 28 (expression -> relation AND THEN relation .) ]
  ! LPAREN          [ reduce using rule 28 (expression -> relation AND THEN relation .) ]
  ! NUMBER_INT      [ reduce using rule 28 (expression -> relation AND THEN relation .) ]
  ! NUMBER_FLOAT    [ reduce using rule 28 (expression -> relation AND THEN relation .) ]
  ! NUMBER_EXPONENT [ reduce using rule 28 (expression -> relation AND THEN relation .) ]

    relation                       shift and go to state 63
    expression                     shift and go to state 318
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 286

    (31) expression -> relation OR relation expression .

    RPAREN          reduce using rule 31 (expression -> relation OR relation expression .)
    COLON           reduce using rule 31 (expression -> relation OR relation expression .)
    COMMA           reduce using rule 31 (expression -> relation OR relation expression .)
    PIPE            reduce using rule 31 (expression -> relation OR relation expression .)
    REFASSIGN       reduce using rule 31 (expression -> relation OR relation expression .)
    THEN            reduce using rule 31 (expression -> relation OR relation expression .)
    LOOP            reduce using rule 31 (expression -> relation OR relation expression .)
    SEMICOLON       reduce using rule 31 (expression -> relation OR relation expression .)
    RANGE           reduce using rule 31 (expression -> relation OR relation expression .)
    PLUS            reduce using rule 31 (expression -> relation OR relation expression .)
    MINUS           reduce using rule 31 (expression -> relation OR relation expression .)
    ID              reduce using rule 31 (expression -> relation OR relation expression .)
    SINGLEQUOTE     reduce using rule 31 (expression -> relation OR relation expression .)
    NULL            reduce using rule 31 (expression -> relation OR relation expression .)
    LPAREN          reduce using rule 31 (expression -> relation OR relation expression .)
    NUMBER_INT      reduce using rule 31 (expression -> relation OR relation expression .)
    NUMBER_FLOAT    reduce using rule 31 (expression -> relation OR relation expression .)
    NUMBER_EXPONENT reduce using rule 31 (expression -> relation OR relation expression .)
    DOTDOT          reduce using rule 31 (expression -> relation OR relation expression .)
    EQUAL           reduce using rule 31 (expression -> relation OR relation expression .)
    NOTEQUAL        reduce using rule 31 (expression -> relation OR relation expression .)
    LESSTHAN        reduce using rule 31 (expression -> relation OR relation expression .)
    LESSTHANEQUAL   reduce using rule 31 (expression -> relation OR relation expression .)
    GREATERTHAN     reduce using rule 31 (expression -> relation OR relation expression .)
    GREATERTHANEQUAL reduce using rule 31 (expression -> relation OR relation expression .)
    IN              reduce using rule 31 (expression -> relation OR relation expression .)
    NOT             reduce using rule 31 (expression -> relation OR relation expression .)
    CONCAT          reduce using rule 31 (expression -> relation OR relation expression .)
    AND             reduce using rule 31 (expression -> relation OR relation expression .)
    OR              reduce using rule 31 (expression -> relation OR relation expression .)
    XOR             reduce using rule 31 (expression -> relation OR relation expression .)
    POWER           reduce using rule 31 (expression -> relation OR relation expression .)
    TIMES           reduce using rule 31 (expression -> relation OR relation expression .)
    DIVIDE          reduce using rule 31 (expression -> relation OR relation expression .)
    MOD             reduce using rule 31 (expression -> relation OR relation expression .)
    REM             reduce using rule 31 (expression -> relation OR relation expression .)


state 287

    (32) expression -> relation OR ELSE relation .
    (33) expression -> relation OR ELSE relation . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_FLOAT resolved as shift
  ! shift/reduce conflict for NUMBER_EXPONENT resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    RPAREN          reduce using rule 32 (expression -> relation OR ELSE relation .)
    COLON           reduce using rule 32 (expression -> relation OR ELSE relation .)
    PIPE            reduce using rule 32 (expression -> relation OR ELSE relation .)
    REFASSIGN       reduce using rule 32 (expression -> relation OR ELSE relation .)
    THEN            reduce using rule 32 (expression -> relation OR ELSE relation .)
    LOOP            reduce using rule 32 (expression -> relation OR ELSE relation .)
    SEMICOLON       reduce using rule 32 (expression -> relation OR ELSE relation .)
    RANGE           reduce using rule 32 (expression -> relation OR ELSE relation .)
    DOTDOT          reduce using rule 32 (expression -> relation OR ELSE relation .)
    EQUAL           reduce using rule 32 (expression -> relation OR ELSE relation .)
    NOTEQUAL        reduce using rule 32 (expression -> relation OR ELSE relation .)
    LESSTHAN        reduce using rule 32 (expression -> relation OR ELSE relation .)
    LESSTHANEQUAL   reduce using rule 32 (expression -> relation OR ELSE relation .)
    GREATERTHAN     reduce using rule 32 (expression -> relation OR ELSE relation .)
    GREATERTHANEQUAL reduce using rule 32 (expression -> relation OR ELSE relation .)
    IN              reduce using rule 32 (expression -> relation OR ELSE relation .)
    NOT             reduce using rule 32 (expression -> relation OR ELSE relation .)
    CONCAT          reduce using rule 32 (expression -> relation OR ELSE relation .)
    AND             reduce using rule 32 (expression -> relation OR ELSE relation .)
    OR              reduce using rule 32 (expression -> relation OR ELSE relation .)
    XOR             reduce using rule 32 (expression -> relation OR ELSE relation .)
    POWER           reduce using rule 32 (expression -> relation OR ELSE relation .)
    TIMES           reduce using rule 32 (expression -> relation OR ELSE relation .)
    DIVIDE          reduce using rule 32 (expression -> relation OR ELSE relation .)
    MOD             reduce using rule 32 (expression -> relation OR ELSE relation .)
    REM             reduce using rule 32 (expression -> relation OR ELSE relation .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

  ! COMMA           [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]
  ! PLUS            [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]
  ! MINUS           [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]
  ! ID              [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]
  ! SINGLEQUOTE     [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]
  ! NULL            [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]
  ! LPAREN          [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]
  ! NUMBER_INT      [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]
  ! NUMBER_FLOAT    [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]
  ! NUMBER_EXPONENT [ reduce using rule 32 (expression -> relation OR ELSE relation .) ]

    relation                       shift and go to state 63
    expression                     shift and go to state 319
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 288

    (35) expression -> relation XOR relation expression .

    RPAREN          reduce using rule 35 (expression -> relation XOR relation expression .)
    COLON           reduce using rule 35 (expression -> relation XOR relation expression .)
    COMMA           reduce using rule 35 (expression -> relation XOR relation expression .)
    PIPE            reduce using rule 35 (expression -> relation XOR relation expression .)
    REFASSIGN       reduce using rule 35 (expression -> relation XOR relation expression .)
    THEN            reduce using rule 35 (expression -> relation XOR relation expression .)
    LOOP            reduce using rule 35 (expression -> relation XOR relation expression .)
    SEMICOLON       reduce using rule 35 (expression -> relation XOR relation expression .)
    RANGE           reduce using rule 35 (expression -> relation XOR relation expression .)
    PLUS            reduce using rule 35 (expression -> relation XOR relation expression .)
    MINUS           reduce using rule 35 (expression -> relation XOR relation expression .)
    ID              reduce using rule 35 (expression -> relation XOR relation expression .)
    SINGLEQUOTE     reduce using rule 35 (expression -> relation XOR relation expression .)
    NULL            reduce using rule 35 (expression -> relation XOR relation expression .)
    LPAREN          reduce using rule 35 (expression -> relation XOR relation expression .)
    NUMBER_INT      reduce using rule 35 (expression -> relation XOR relation expression .)
    NUMBER_FLOAT    reduce using rule 35 (expression -> relation XOR relation expression .)
    NUMBER_EXPONENT reduce using rule 35 (expression -> relation XOR relation expression .)
    DOTDOT          reduce using rule 35 (expression -> relation XOR relation expression .)
    EQUAL           reduce using rule 35 (expression -> relation XOR relation expression .)
    NOTEQUAL        reduce using rule 35 (expression -> relation XOR relation expression .)
    LESSTHAN        reduce using rule 35 (expression -> relation XOR relation expression .)
    LESSTHANEQUAL   reduce using rule 35 (expression -> relation XOR relation expression .)
    GREATERTHAN     reduce using rule 35 (expression -> relation XOR relation expression .)
    GREATERTHANEQUAL reduce using rule 35 (expression -> relation XOR relation expression .)
    IN              reduce using rule 35 (expression -> relation XOR relation expression .)
    NOT             reduce using rule 35 (expression -> relation XOR relation expression .)
    CONCAT          reduce using rule 35 (expression -> relation XOR relation expression .)
    AND             reduce using rule 35 (expression -> relation XOR relation expression .)
    OR              reduce using rule 35 (expression -> relation XOR relation expression .)
    XOR             reduce using rule 35 (expression -> relation XOR relation expression .)
    POWER           reduce using rule 35 (expression -> relation XOR relation expression .)
    TIMES           reduce using rule 35 (expression -> relation XOR relation expression .)
    DIVIDE          reduce using rule 35 (expression -> relation XOR relation expression .)
    MOD             reduce using rule 35 (expression -> relation XOR relation expression .)
    REM             reduce using rule 35 (expression -> relation XOR relation expression .)


state 289

    (45) relation -> simple_expression NOT IN range .

    AND             reduce using rule 45 (relation -> simple_expression NOT IN range .)
    OR              reduce using rule 45 (relation -> simple_expression NOT IN range .)
    XOR             reduce using rule 45 (relation -> simple_expression NOT IN range .)
    DOTDOT          reduce using rule 45 (relation -> simple_expression NOT IN range .)
    EQUAL           reduce using rule 45 (relation -> simple_expression NOT IN range .)
    NOTEQUAL        reduce using rule 45 (relation -> simple_expression NOT IN range .)
    LESSTHAN        reduce using rule 45 (relation -> simple_expression NOT IN range .)
    LESSTHANEQUAL   reduce using rule 45 (relation -> simple_expression NOT IN range .)
    GREATERTHAN     reduce using rule 45 (relation -> simple_expression NOT IN range .)
    GREATERTHANEQUAL reduce using rule 45 (relation -> simple_expression NOT IN range .)
    IN              reduce using rule 45 (relation -> simple_expression NOT IN range .)
    NOT             reduce using rule 45 (relation -> simple_expression NOT IN range .)
    PLUS            reduce using rule 45 (relation -> simple_expression NOT IN range .)
    MINUS           reduce using rule 45 (relation -> simple_expression NOT IN range .)
    CONCAT          reduce using rule 45 (relation -> simple_expression NOT IN range .)
    NULL            reduce using rule 45 (relation -> simple_expression NOT IN range .)
    LPAREN          reduce using rule 45 (relation -> simple_expression NOT IN range .)
    NUMBER_INT      reduce using rule 45 (relation -> simple_expression NOT IN range .)
    NUMBER_FLOAT    reduce using rule 45 (relation -> simple_expression NOT IN range .)
    NUMBER_EXPONENT reduce using rule 45 (relation -> simple_expression NOT IN range .)
    COMMA           reduce using rule 45 (relation -> simple_expression NOT IN range .)
    ID              reduce using rule 45 (relation -> simple_expression NOT IN range .)
    SINGLEQUOTE     reduce using rule 45 (relation -> simple_expression NOT IN range .)
    RPAREN          reduce using rule 45 (relation -> simple_expression NOT IN range .)
    COLON           reduce using rule 45 (relation -> simple_expression NOT IN range .)
    PIPE            reduce using rule 45 (relation -> simple_expression NOT IN range .)
    REFASSIGN       reduce using rule 45 (relation -> simple_expression NOT IN range .)
    THEN            reduce using rule 45 (relation -> simple_expression NOT IN range .)
    LOOP            reduce using rule 45 (relation -> simple_expression NOT IN range .)
    SEMICOLON       reduce using rule 45 (relation -> simple_expression NOT IN range .)
    RANGE           reduce using rule 45 (relation -> simple_expression NOT IN range .)
    POWER           reduce using rule 45 (relation -> simple_expression NOT IN range .)
    TIMES           reduce using rule 45 (relation -> simple_expression NOT IN range .)
    DIVIDE          reduce using rule 45 (relation -> simple_expression NOT IN range .)
    MOD             reduce using rule 45 (relation -> simple_expression NOT IN range .)
    REM             reduce using rule 45 (relation -> simple_expression NOT IN range .)


state 290

    (46) relation -> simple_expression NOT IN name .
    (100) range_attribute_reference -> name . SINGLEQUOTE range_attribute_designator
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (67) primary -> name .
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for OR resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for XOR resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for DOTDOT resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for EQUAL resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for IN resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for NOT resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for PLUS resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for MINUS resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for NULL resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for NUMBER_INT resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for NUMBER_FLOAT resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for NUMBER_EXPONENT resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for COMMA resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for ID resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for RPAREN resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for COLON resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for PIPE resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for REFASSIGN resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for THEN resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for LOOP resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for RANGE resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for POWER resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for TIMES resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for MOD resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for REM resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for POWER resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for TIMES resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for MOD resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for REM resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for DOTDOT resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for PLUS resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for MINUS resolved using rule 46 (relation -> simple_expression NOT IN name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 46 (relation -> simple_expression NOT IN name .)
    AND             reduce using rule 46 (relation -> simple_expression NOT IN name .)
    OR              reduce using rule 46 (relation -> simple_expression NOT IN name .)
    XOR             reduce using rule 46 (relation -> simple_expression NOT IN name .)
    DOTDOT          reduce using rule 46 (relation -> simple_expression NOT IN name .)
    EQUAL           reduce using rule 46 (relation -> simple_expression NOT IN name .)
    NOTEQUAL        reduce using rule 46 (relation -> simple_expression NOT IN name .)
    LESSTHAN        reduce using rule 46 (relation -> simple_expression NOT IN name .)
    LESSTHANEQUAL   reduce using rule 46 (relation -> simple_expression NOT IN name .)
    GREATERTHAN     reduce using rule 46 (relation -> simple_expression NOT IN name .)
    GREATERTHANEQUAL reduce using rule 46 (relation -> simple_expression NOT IN name .)
    IN              reduce using rule 46 (relation -> simple_expression NOT IN name .)
    NOT             reduce using rule 46 (relation -> simple_expression NOT IN name .)
    PLUS            reduce using rule 46 (relation -> simple_expression NOT IN name .)
    MINUS           reduce using rule 46 (relation -> simple_expression NOT IN name .)
    CONCAT          reduce using rule 46 (relation -> simple_expression NOT IN name .)
    NULL            reduce using rule 46 (relation -> simple_expression NOT IN name .)
    NUMBER_INT      reduce using rule 46 (relation -> simple_expression NOT IN name .)
    NUMBER_FLOAT    reduce using rule 46 (relation -> simple_expression NOT IN name .)
    NUMBER_EXPONENT reduce using rule 46 (relation -> simple_expression NOT IN name .)
    COMMA           reduce using rule 46 (relation -> simple_expression NOT IN name .)
    ID              reduce using rule 46 (relation -> simple_expression NOT IN name .)
    RPAREN          reduce using rule 46 (relation -> simple_expression NOT IN name .)
    COLON           reduce using rule 46 (relation -> simple_expression NOT IN name .)
    PIPE            reduce using rule 46 (relation -> simple_expression NOT IN name .)
    REFASSIGN       reduce using rule 46 (relation -> simple_expression NOT IN name .)
    THEN            reduce using rule 46 (relation -> simple_expression NOT IN name .)
    LOOP            reduce using rule 46 (relation -> simple_expression NOT IN name .)
    SEMICOLON       reduce using rule 46 (relation -> simple_expression NOT IN name .)
    RANGE           reduce using rule 46 (relation -> simple_expression NOT IN name .)
    POWER           reduce using rule 46 (relation -> simple_expression NOT IN name .)
    TIMES           reduce using rule 46 (relation -> simple_expression NOT IN name .)
    DIVIDE          reduce using rule 46 (relation -> simple_expression NOT IN name .)
    MOD             reduce using rule 46 (relation -> simple_expression NOT IN name .)
    REM             reduce using rule 46 (relation -> simple_expression NOT IN name .)
    SINGLEQUOTE     shift and go to state 216
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113

  ! LPAREN          [ reduce using rule 46 (relation -> simple_expression NOT IN name .) ]
  ! SINGLEQUOTE     [ reduce using rule 46 (relation -> simple_expression NOT IN name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! AND             [ reduce using rule 112 (function_call -> name .) ]
  ! OR              [ reduce using rule 112 (function_call -> name .) ]
  ! XOR             [ reduce using rule 112 (function_call -> name .) ]
  ! DOTDOT          [ reduce using rule 112 (function_call -> name .) ]
  ! EQUAL           [ reduce using rule 112 (function_call -> name .) ]
  ! NOTEQUAL        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHAN        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHANEQUAL   [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHAN     [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHANEQUAL [ reduce using rule 112 (function_call -> name .) ]
  ! IN              [ reduce using rule 112 (function_call -> name .) ]
  ! NOT             [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]
  ! NULL            [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_INT      [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_FLOAT    [ reduce using rule 112 (function_call -> name .) ]
  ! NUMBER_EXPONENT [ reduce using rule 112 (function_call -> name .) ]
  ! COMMA           [ reduce using rule 112 (function_call -> name .) ]
  ! ID              [ reduce using rule 112 (function_call -> name .) ]
  ! RPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! COLON           [ reduce using rule 112 (function_call -> name .) ]
  ! PIPE            [ reduce using rule 112 (function_call -> name .) ]
  ! REFASSIGN       [ reduce using rule 112 (function_call -> name .) ]
  ! THEN            [ reduce using rule 112 (function_call -> name .) ]
  ! LOOP            [ reduce using rule 112 (function_call -> name .) ]
  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! RANGE           [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 67 (primary -> name .) ]
  ! TIMES           [ reduce using rule 67 (primary -> name .) ]
  ! DIVIDE          [ reduce using rule 67 (primary -> name .) ]
  ! MOD             [ reduce using rule 67 (primary -> name .) ]
  ! REM             [ reduce using rule 67 (primary -> name .) ]
  ! DOTDOT          [ reduce using rule 67 (primary -> name .) ]
  ! PLUS            [ reduce using rule 67 (primary -> name .) ]
  ! MINUS           [ reduce using rule 67 (primary -> name .) ]
  ! CONCAT          [ reduce using rule 67 (primary -> name .) ]

    actual_parameter_part          shift and go to state 36

state 291

    (55) term -> factor TIMES factor term .

    DOTDOT          reduce using rule 55 (term -> factor TIMES factor term .)
    EQUAL           reduce using rule 55 (term -> factor TIMES factor term .)
    NOTEQUAL        reduce using rule 55 (term -> factor TIMES factor term .)
    LESSTHAN        reduce using rule 55 (term -> factor TIMES factor term .)
    LESSTHANEQUAL   reduce using rule 55 (term -> factor TIMES factor term .)
    GREATERTHAN     reduce using rule 55 (term -> factor TIMES factor term .)
    GREATERTHANEQUAL reduce using rule 55 (term -> factor TIMES factor term .)
    IN              reduce using rule 55 (term -> factor TIMES factor term .)
    NOT             reduce using rule 55 (term -> factor TIMES factor term .)
    PLUS            reduce using rule 55 (term -> factor TIMES factor term .)
    MINUS           reduce using rule 55 (term -> factor TIMES factor term .)
    CONCAT          reduce using rule 55 (term -> factor TIMES factor term .)
    AND             reduce using rule 55 (term -> factor TIMES factor term .)
    OR              reduce using rule 55 (term -> factor TIMES factor term .)
    XOR             reduce using rule 55 (term -> factor TIMES factor term .)
    NULL            reduce using rule 55 (term -> factor TIMES factor term .)
    LPAREN          reduce using rule 55 (term -> factor TIMES factor term .)
    NUMBER_INT      reduce using rule 55 (term -> factor TIMES factor term .)
    NUMBER_FLOAT    reduce using rule 55 (term -> factor TIMES factor term .)
    NUMBER_EXPONENT reduce using rule 55 (term -> factor TIMES factor term .)
    COMMA           reduce using rule 55 (term -> factor TIMES factor term .)
    ID              reduce using rule 55 (term -> factor TIMES factor term .)
    SINGLEQUOTE     reduce using rule 55 (term -> factor TIMES factor term .)
    RPAREN          reduce using rule 55 (term -> factor TIMES factor term .)
    COLON           reduce using rule 55 (term -> factor TIMES factor term .)
    PIPE            reduce using rule 55 (term -> factor TIMES factor term .)
    REFASSIGN       reduce using rule 55 (term -> factor TIMES factor term .)
    THEN            reduce using rule 55 (term -> factor TIMES factor term .)
    LOOP            reduce using rule 55 (term -> factor TIMES factor term .)
    SEMICOLON       reduce using rule 55 (term -> factor TIMES factor term .)
    RANGE           reduce using rule 55 (term -> factor TIMES factor term .)
    POWER           reduce using rule 55 (term -> factor TIMES factor term .)
    TIMES           reduce using rule 55 (term -> factor TIMES factor term .)
    DIVIDE          reduce using rule 55 (term -> factor TIMES factor term .)
    MOD             reduce using rule 55 (term -> factor TIMES factor term .)
    REM             reduce using rule 55 (term -> factor TIMES factor term .)


state 292

    (56) term -> factor DIVIDE factor term .

    DOTDOT          reduce using rule 56 (term -> factor DIVIDE factor term .)
    EQUAL           reduce using rule 56 (term -> factor DIVIDE factor term .)
    NOTEQUAL        reduce using rule 56 (term -> factor DIVIDE factor term .)
    LESSTHAN        reduce using rule 56 (term -> factor DIVIDE factor term .)
    LESSTHANEQUAL   reduce using rule 56 (term -> factor DIVIDE factor term .)
    GREATERTHAN     reduce using rule 56 (term -> factor DIVIDE factor term .)
    GREATERTHANEQUAL reduce using rule 56 (term -> factor DIVIDE factor term .)
    IN              reduce using rule 56 (term -> factor DIVIDE factor term .)
    NOT             reduce using rule 56 (term -> factor DIVIDE factor term .)
    PLUS            reduce using rule 56 (term -> factor DIVIDE factor term .)
    MINUS           reduce using rule 56 (term -> factor DIVIDE factor term .)
    CONCAT          reduce using rule 56 (term -> factor DIVIDE factor term .)
    AND             reduce using rule 56 (term -> factor DIVIDE factor term .)
    OR              reduce using rule 56 (term -> factor DIVIDE factor term .)
    XOR             reduce using rule 56 (term -> factor DIVIDE factor term .)
    NULL            reduce using rule 56 (term -> factor DIVIDE factor term .)
    LPAREN          reduce using rule 56 (term -> factor DIVIDE factor term .)
    NUMBER_INT      reduce using rule 56 (term -> factor DIVIDE factor term .)
    NUMBER_FLOAT    reduce using rule 56 (term -> factor DIVIDE factor term .)
    NUMBER_EXPONENT reduce using rule 56 (term -> factor DIVIDE factor term .)
    COMMA           reduce using rule 56 (term -> factor DIVIDE factor term .)
    ID              reduce using rule 56 (term -> factor DIVIDE factor term .)
    SINGLEQUOTE     reduce using rule 56 (term -> factor DIVIDE factor term .)
    RPAREN          reduce using rule 56 (term -> factor DIVIDE factor term .)
    COLON           reduce using rule 56 (term -> factor DIVIDE factor term .)
    PIPE            reduce using rule 56 (term -> factor DIVIDE factor term .)
    REFASSIGN       reduce using rule 56 (term -> factor DIVIDE factor term .)
    THEN            reduce using rule 56 (term -> factor DIVIDE factor term .)
    LOOP            reduce using rule 56 (term -> factor DIVIDE factor term .)
    SEMICOLON       reduce using rule 56 (term -> factor DIVIDE factor term .)
    RANGE           reduce using rule 56 (term -> factor DIVIDE factor term .)
    POWER           reduce using rule 56 (term -> factor DIVIDE factor term .)
    TIMES           reduce using rule 56 (term -> factor DIVIDE factor term .)
    DIVIDE          reduce using rule 56 (term -> factor DIVIDE factor term .)
    MOD             reduce using rule 56 (term -> factor DIVIDE factor term .)
    REM             reduce using rule 56 (term -> factor DIVIDE factor term .)


state 293

    (57) term -> factor MOD factor term .

    DOTDOT          reduce using rule 57 (term -> factor MOD factor term .)
    EQUAL           reduce using rule 57 (term -> factor MOD factor term .)
    NOTEQUAL        reduce using rule 57 (term -> factor MOD factor term .)
    LESSTHAN        reduce using rule 57 (term -> factor MOD factor term .)
    LESSTHANEQUAL   reduce using rule 57 (term -> factor MOD factor term .)
    GREATERTHAN     reduce using rule 57 (term -> factor MOD factor term .)
    GREATERTHANEQUAL reduce using rule 57 (term -> factor MOD factor term .)
    IN              reduce using rule 57 (term -> factor MOD factor term .)
    NOT             reduce using rule 57 (term -> factor MOD factor term .)
    PLUS            reduce using rule 57 (term -> factor MOD factor term .)
    MINUS           reduce using rule 57 (term -> factor MOD factor term .)
    CONCAT          reduce using rule 57 (term -> factor MOD factor term .)
    AND             reduce using rule 57 (term -> factor MOD factor term .)
    OR              reduce using rule 57 (term -> factor MOD factor term .)
    XOR             reduce using rule 57 (term -> factor MOD factor term .)
    NULL            reduce using rule 57 (term -> factor MOD factor term .)
    LPAREN          reduce using rule 57 (term -> factor MOD factor term .)
    NUMBER_INT      reduce using rule 57 (term -> factor MOD factor term .)
    NUMBER_FLOAT    reduce using rule 57 (term -> factor MOD factor term .)
    NUMBER_EXPONENT reduce using rule 57 (term -> factor MOD factor term .)
    COMMA           reduce using rule 57 (term -> factor MOD factor term .)
    ID              reduce using rule 57 (term -> factor MOD factor term .)
    SINGLEQUOTE     reduce using rule 57 (term -> factor MOD factor term .)
    RPAREN          reduce using rule 57 (term -> factor MOD factor term .)
    COLON           reduce using rule 57 (term -> factor MOD factor term .)
    PIPE            reduce using rule 57 (term -> factor MOD factor term .)
    REFASSIGN       reduce using rule 57 (term -> factor MOD factor term .)
    THEN            reduce using rule 57 (term -> factor MOD factor term .)
    LOOP            reduce using rule 57 (term -> factor MOD factor term .)
    SEMICOLON       reduce using rule 57 (term -> factor MOD factor term .)
    RANGE           reduce using rule 57 (term -> factor MOD factor term .)
    POWER           reduce using rule 57 (term -> factor MOD factor term .)
    TIMES           reduce using rule 57 (term -> factor MOD factor term .)
    DIVIDE          reduce using rule 57 (term -> factor MOD factor term .)
    MOD             reduce using rule 57 (term -> factor MOD factor term .)
    REM             reduce using rule 57 (term -> factor MOD factor term .)


state 294

    (58) term -> factor REM factor term .

    DOTDOT          reduce using rule 58 (term -> factor REM factor term .)
    EQUAL           reduce using rule 58 (term -> factor REM factor term .)
    NOTEQUAL        reduce using rule 58 (term -> factor REM factor term .)
    LESSTHAN        reduce using rule 58 (term -> factor REM factor term .)
    LESSTHANEQUAL   reduce using rule 58 (term -> factor REM factor term .)
    GREATERTHAN     reduce using rule 58 (term -> factor REM factor term .)
    GREATERTHANEQUAL reduce using rule 58 (term -> factor REM factor term .)
    IN              reduce using rule 58 (term -> factor REM factor term .)
    NOT             reduce using rule 58 (term -> factor REM factor term .)
    PLUS            reduce using rule 58 (term -> factor REM factor term .)
    MINUS           reduce using rule 58 (term -> factor REM factor term .)
    CONCAT          reduce using rule 58 (term -> factor REM factor term .)
    AND             reduce using rule 58 (term -> factor REM factor term .)
    OR              reduce using rule 58 (term -> factor REM factor term .)
    XOR             reduce using rule 58 (term -> factor REM factor term .)
    NULL            reduce using rule 58 (term -> factor REM factor term .)
    LPAREN          reduce using rule 58 (term -> factor REM factor term .)
    NUMBER_INT      reduce using rule 58 (term -> factor REM factor term .)
    NUMBER_FLOAT    reduce using rule 58 (term -> factor REM factor term .)
    NUMBER_EXPONENT reduce using rule 58 (term -> factor REM factor term .)
    COMMA           reduce using rule 58 (term -> factor REM factor term .)
    ID              reduce using rule 58 (term -> factor REM factor term .)
    SINGLEQUOTE     reduce using rule 58 (term -> factor REM factor term .)
    RPAREN          reduce using rule 58 (term -> factor REM factor term .)
    COLON           reduce using rule 58 (term -> factor REM factor term .)
    PIPE            reduce using rule 58 (term -> factor REM factor term .)
    REFASSIGN       reduce using rule 58 (term -> factor REM factor term .)
    THEN            reduce using rule 58 (term -> factor REM factor term .)
    LOOP            reduce using rule 58 (term -> factor REM factor term .)
    SEMICOLON       reduce using rule 58 (term -> factor REM factor term .)
    RANGE           reduce using rule 58 (term -> factor REM factor term .)
    POWER           reduce using rule 58 (term -> factor REM factor term .)
    TIMES           reduce using rule 58 (term -> factor REM factor term .)
    DIVIDE          reduce using rule 58 (term -> factor REM factor term .)
    MOD             reduce using rule 58 (term -> factor REM factor term .)
    REM             reduce using rule 58 (term -> factor REM factor term .)


state 295

    (25) attribute_designator -> ID LPAREN expression RPAREN .

    DOT             reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    LPAREN          reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    SINGLEQUOTE     reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    RPAREN          reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    COMMA           reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    USE             reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    RANGE           reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    DIGITS          reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    POWER           reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    TIMES           reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    MOD             reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    REM             reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    EQUAL           reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    LESSTHANEQUAL   reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    GREATERTHANEQUAL reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    IN              reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    NOT             reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    PLUS            reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    MINUS           reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    CONCAT          reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    AND             reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    OR              reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    XOR             reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    NULL            reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    NUMBER_FLOAT    reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    NUMBER_EXPONENT reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    ID              reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    COLON           reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    PIPE            reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    REFASSIGN       reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    THEN            reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)
    LOOP            reduce using rule 25 (attribute_designator -> ID LPAREN expression RPAREN .)


state 296

    (1) subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON .

    $end            reduce using rule 1 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON .)
    LPAREN          reduce using rule 1 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON .)
    PROCEDURE       reduce using rule 1 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON .)
    TYPE            reduce using rule 1 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON .)
    COLON           reduce using rule 1 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON .)
    FOR             reduce using rule 1 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON .)
    BEGIN           reduce using rule 1 (subprogram_body -> subprogram_specification IS declarative_part BEGIN sequence_of_statements END designator SEMICOLON .)


state 297

    (3) designator -> name DOT . ID
    (22) selected_component -> name DOT . selector_name
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE

    ID              shift and go to state 320
    SINGLEQUOTE     shift and go to state 16

    selector_name                  shift and go to state 54
    character_literal              shift and go to state 55

state 298

    (179) assignment_statement -> name ASSIGN expression SEMICOLON .

    NULL            reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    EXIT            reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    IF              reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    LOOP            reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    ID              reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    SINGLEQUOTE     reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    END             reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    ELSIF           reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 179 (assignment_statement -> name ASSIGN expression SEMICOLON .)


state 299

    (156) if_statement -> IF expression THEN sequence_of_statements . if_statemant_loop
    (157) if_statemant_loop -> . ELSIF sequence_of_statements if_statemant_loop
    (158) if_statemant_loop -> . ELSE sequence_of_statements END IF SEMICOLON
    (159) if_statemant_loop -> . END IF SEMICOLON

    ELSIF           shift and go to state 322
    ELSE            shift and go to state 323
    END             shift and go to state 324

    if_statemant_loop              shift and go to state 321

state 300

    (148) loop_statement -> LOOP sequence_of_statements END LOOP . SEMICOLON
    (149) loop_statement -> LOOP sequence_of_statements END LOOP . name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    SEMICOLON       shift and go to state 325
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 326
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 301

    (150) loop_statement -> WHILE expression LOOP sequence_of_statements . END LOOP SEMICOLON
    (151) loop_statement -> WHILE expression LOOP sequence_of_statements . END LOOP name SEMICOLON

    END             shift and go to state 327


state 302

    (152) loop_statement -> FOR ID IN discrete_subtype_definition . LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> FOR ID IN discrete_subtype_definition . LOOP sequence_of_statements END LOOP name SEMICOLON

    LOOP            shift and go to state 328


state 303

    (154) loop_statement -> FOR ID IN REVERSE . discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> FOR ID IN REVERSE . discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (166) discrete_subtype_definition -> . subtype_indication
    (167) discrete_subtype_definition -> . range
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    discrete_subtype_definition    shift and go to state 329
    name                           shift and go to state 166
    subtype_indication             shift and go to state 304
    range                          shift and go to state 305
    range_attribute_reference      shift and go to state 66
    simple_expression              shift and go to state 205
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 304

    (166) discrete_subtype_definition -> subtype_indication .

    LOOP            reduce using rule 166 (discrete_subtype_definition -> subtype_indication .)


state 305

    (167) discrete_subtype_definition -> range .

    LOOP            reduce using rule 167 (discrete_subtype_definition -> range .)


state 306

    (134) use_clause_loop -> COMMA name use_clause_loop .

    RPAREN          reduce using rule 134 (use_clause_loop -> COMMA name use_clause_loop .)


state 307

    (136) discriminant_part -> identifier_list COLON name ASSIGN . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 156
    expression                     shift and go to state 330
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 308

    (17) attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE name . SEMICOLON
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (67) primary -> name .
    (70) qualified_expression -> name . SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> name . SINGLEQUOTE named_array_aggregate
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
  ! reduce/reduce conflict for POWER resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for REM resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for EQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for IN resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for NOT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for CONCAT resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for AND resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for OR resolved using rule 67 (primary -> name .)
  ! reduce/reduce conflict for XOR resolved using rule 67 (primary -> name .)
    SEMICOLON       shift and go to state 331
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 283
    POWER           reduce using rule 67 (primary -> name .)
    TIMES           reduce using rule 67 (primary -> name .)
    DIVIDE          reduce using rule 67 (primary -> name .)
    MOD             reduce using rule 67 (primary -> name .)
    REM             reduce using rule 67 (primary -> name .)
    EQUAL           reduce using rule 67 (primary -> name .)
    NOTEQUAL        reduce using rule 67 (primary -> name .)
    LESSTHAN        reduce using rule 67 (primary -> name .)
    LESSTHANEQUAL   reduce using rule 67 (primary -> name .)
    GREATERTHAN     reduce using rule 67 (primary -> name .)
    GREATERTHANEQUAL reduce using rule 67 (primary -> name .)
    IN              reduce using rule 67 (primary -> name .)
    NOT             reduce using rule 67 (primary -> name .)
    PLUS            reduce using rule 67 (primary -> name .)
    MINUS           reduce using rule 67 (primary -> name .)
    CONCAT          reduce using rule 67 (primary -> name .)
    AND             reduce using rule 67 (primary -> name .)
    OR              reduce using rule 67 (primary -> name .)
    XOR             reduce using rule 67 (primary -> name .)

  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]
  ! POWER           [ reduce using rule 112 (function_call -> name .) ]
  ! TIMES           [ reduce using rule 112 (function_call -> name .) ]
  ! DIVIDE          [ reduce using rule 112 (function_call -> name .) ]
  ! MOD             [ reduce using rule 112 (function_call -> name .) ]
  ! REM             [ reduce using rule 112 (function_call -> name .) ]
  ! EQUAL           [ reduce using rule 112 (function_call -> name .) ]
  ! NOTEQUAL        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHAN        [ reduce using rule 112 (function_call -> name .) ]
  ! LESSTHANEQUAL   [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHAN     [ reduce using rule 112 (function_call -> name .) ]
  ! GREATERTHANEQUAL [ reduce using rule 112 (function_call -> name .) ]
  ! IN              [ reduce using rule 112 (function_call -> name .) ]
  ! NOT             [ reduce using rule 112 (function_call -> name .) ]
  ! PLUS            [ reduce using rule 112 (function_call -> name .) ]
  ! MINUS           [ reduce using rule 112 (function_call -> name .) ]
  ! CONCAT          [ reduce using rule 112 (function_call -> name .) ]
  ! AND             [ reduce using rule 112 (function_call -> name .) ]
  ! OR              [ reduce using rule 112 (function_call -> name .) ]
  ! XOR             [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 309

    (16) attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE expression . SEMICOLON

    SEMICOLON       shift and go to state 332


state 310

    (94) index_constraint -> LPAREN discrete_range COMMA discrete_range . index_constraint RPAREN
    (93) index_constraint -> . LPAREN discrete_range RPAREN
    (94) index_constraint -> . LPAREN discrete_range COMMA discrete_range index_constraint RPAREN

    LPAREN          shift and go to state 333

    index_constraint               shift and go to state 334

state 311

    (87) discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association . RPAREN

    RPAREN          shift and go to state 335


state 312

    (89) discriminant_association -> selector_name PIPE selector_name . REFASSIGN expression
    (90) discriminant_association -> selector_name PIPE selector_name . discriminant_association REFASSIGN expression
    (89) discriminant_association -> . selector_name PIPE selector_name REFASSIGN expression
    (90) discriminant_association -> . selector_name PIPE selector_name discriminant_association REFASSIGN expression
    (91) discriminant_association -> . PIPE selector_name
    (92) discriminant_association -> . expression
    (122) selector_name -> . ID
    (123) selector_name -> . character_literal
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    REFASSIGN       shift and go to state 336
    PIPE            shift and go to state 199
    ID              shift and go to state 211
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    selector_name                  shift and go to state 209
    expression                     shift and go to state 210
    discriminant_association       shift and go to state 337
    character_literal              shift and go to state 212
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    indexed_component              shift and go to state 15

state 313

    (70) qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .

    POWER           reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    TIMES           reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    MOD             reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    REM             reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    EQUAL           reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    LESSTHANEQUAL   reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    GREATERTHANEQUAL reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    IN              reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    NOT             reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    PLUS            reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    MINUS           reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    CONCAT          reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    AND             reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    OR              reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    XOR             reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    NULL            reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    NUMBER_FLOAT    reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    NUMBER_EXPONENT reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    COMMA           reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    ID              reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    SINGLEQUOTE     reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    COLON           reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    PIPE            reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    REFASSIGN       reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    THEN            reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    LOOP            reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)
    RANGE           reduce using rule 70 (qualified_expression -> name SINGLEQUOTE LPAREN expression RPAREN .)


state 314

    (102) range_attribute_designator -> RANGE LPAREN expression . RPAREN

    RPAREN          shift and go to state 338


state 315

    (72) named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate . RPAREN

    RPAREN          shift and go to state 339


state 316

    (76) discrete_choice_list -> discrete_choice PIPE discrete_choice discrete_choice_list .

    REFASSIGN       reduce using rule 76 (discrete_choice_list -> discrete_choice PIPE discrete_choice discrete_choice_list .)


state 317

    (18) indexed_component -> name LPAREN expression . RPAREN
    (19) indexed_component -> name LPAREN expression . COLON indexed_component RPAREN
    (20) type_conversion -> name LPAREN expression . RPAREN
    (118) parameter_association -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 340
    COLON           shift and go to state 135
    COMMA           reduce using rule 118 (parameter_association -> expression .)

  ! RPAREN          [ reduce using rule 118 (parameter_association -> expression .) ]


state 318

    (29) expression -> relation AND THEN relation expression .

    RPAREN          reduce using rule 29 (expression -> relation AND THEN relation expression .)
    COLON           reduce using rule 29 (expression -> relation AND THEN relation expression .)
    COMMA           reduce using rule 29 (expression -> relation AND THEN relation expression .)
    PIPE            reduce using rule 29 (expression -> relation AND THEN relation expression .)
    REFASSIGN       reduce using rule 29 (expression -> relation AND THEN relation expression .)
    THEN            reduce using rule 29 (expression -> relation AND THEN relation expression .)
    LOOP            reduce using rule 29 (expression -> relation AND THEN relation expression .)
    SEMICOLON       reduce using rule 29 (expression -> relation AND THEN relation expression .)
    RANGE           reduce using rule 29 (expression -> relation AND THEN relation expression .)
    PLUS            reduce using rule 29 (expression -> relation AND THEN relation expression .)
    MINUS           reduce using rule 29 (expression -> relation AND THEN relation expression .)
    ID              reduce using rule 29 (expression -> relation AND THEN relation expression .)
    SINGLEQUOTE     reduce using rule 29 (expression -> relation AND THEN relation expression .)
    NULL            reduce using rule 29 (expression -> relation AND THEN relation expression .)
    LPAREN          reduce using rule 29 (expression -> relation AND THEN relation expression .)
    NUMBER_INT      reduce using rule 29 (expression -> relation AND THEN relation expression .)
    NUMBER_FLOAT    reduce using rule 29 (expression -> relation AND THEN relation expression .)
    NUMBER_EXPONENT reduce using rule 29 (expression -> relation AND THEN relation expression .)
    DOTDOT          reduce using rule 29 (expression -> relation AND THEN relation expression .)
    EQUAL           reduce using rule 29 (expression -> relation AND THEN relation expression .)
    NOTEQUAL        reduce using rule 29 (expression -> relation AND THEN relation expression .)
    LESSTHAN        reduce using rule 29 (expression -> relation AND THEN relation expression .)
    LESSTHANEQUAL   reduce using rule 29 (expression -> relation AND THEN relation expression .)
    GREATERTHAN     reduce using rule 29 (expression -> relation AND THEN relation expression .)
    GREATERTHANEQUAL reduce using rule 29 (expression -> relation AND THEN relation expression .)
    IN              reduce using rule 29 (expression -> relation AND THEN relation expression .)
    NOT             reduce using rule 29 (expression -> relation AND THEN relation expression .)
    CONCAT          reduce using rule 29 (expression -> relation AND THEN relation expression .)
    AND             reduce using rule 29 (expression -> relation AND THEN relation expression .)
    OR              reduce using rule 29 (expression -> relation AND THEN relation expression .)
    XOR             reduce using rule 29 (expression -> relation AND THEN relation expression .)
    POWER           reduce using rule 29 (expression -> relation AND THEN relation expression .)
    TIMES           reduce using rule 29 (expression -> relation AND THEN relation expression .)
    DIVIDE          reduce using rule 29 (expression -> relation AND THEN relation expression .)
    MOD             reduce using rule 29 (expression -> relation AND THEN relation expression .)
    REM             reduce using rule 29 (expression -> relation AND THEN relation expression .)


state 319

    (33) expression -> relation OR ELSE relation expression .

    RPAREN          reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    COLON           reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    COMMA           reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    PIPE            reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    REFASSIGN       reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    THEN            reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    LOOP            reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    SEMICOLON       reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    RANGE           reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    PLUS            reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    MINUS           reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    ID              reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    SINGLEQUOTE     reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    NULL            reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    LPAREN          reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    NUMBER_INT      reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    NUMBER_FLOAT    reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    NUMBER_EXPONENT reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    DOTDOT          reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    EQUAL           reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    NOTEQUAL        reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    LESSTHAN        reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    LESSTHANEQUAL   reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    GREATERTHAN     reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    GREATERTHANEQUAL reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    IN              reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    NOT             reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    CONCAT          reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    AND             reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    OR              reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    XOR             reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    POWER           reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    TIMES           reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    DIVIDE          reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    MOD             reduce using rule 33 (expression -> relation OR ELSE relation expression .)
    REM             reduce using rule 33 (expression -> relation OR ELSE relation expression .)


state 320

    (3) designator -> name DOT ID .
    (122) selector_name -> ID .

    SEMICOLON       reduce using rule 3 (designator -> name DOT ID .)
    DOT             reduce using rule 122 (selector_name -> ID .)
    LPAREN          reduce using rule 122 (selector_name -> ID .)
    SINGLEQUOTE     reduce using rule 122 (selector_name -> ID .)


state 321

    (156) if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .

    NULL            reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    EXIT            reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    IF              reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    LOOP            reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    WHILE           reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    FOR             reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    ID              reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    SINGLEQUOTE     reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    END             reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    ELSIF           reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)
    ELSE            reduce using rule 156 (if_statement -> IF expression THEN sequence_of_statements if_statemant_loop .)


state 322

    (157) if_statemant_loop -> ELSIF . sequence_of_statements if_statemant_loop
    (160) sequence_of_statements -> . statement sequence_of_statements
    (161) sequence_of_statements -> . statement
    (162) statement -> . simple_statement
    (163) statement -> . compound_statement
    (168) simple_statement -> . null_statement
    (169) simple_statement -> . assignment_statement
    (170) simple_statement -> . exit_statement
    (171) simple_statement -> . entry_call_statement
    (172) simple_statement -> . code_statement
    (164) compound_statement -> . if_statement
    (165) compound_statement -> . loop_statement
    (178) null_statement -> . NULL
    (179) assignment_statement -> . name ASSIGN expression SEMICOLON
    (176) exit_statement -> . EXIT SEMICOLON
    (177) exit_statement -> . EXIT name SEMICOLON
    (173) entry_call_statement -> . name SEMICOLON
    (174) entry_call_statement -> . name actual_parameter_part SEMICOLON
    (175) code_statement -> . qualified_expression SEMICOLON
    (156) if_statement -> . IF expression THEN sequence_of_statements if_statemant_loop
    (148) loop_statement -> . LOOP sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> . LOOP sequence_of_statements END LOOP name SEMICOLON
    (150) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (152) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 97
    EXIT            shift and go to state 99
    IF              shift and go to state 101
    LOOP            shift and go to state 102
    WHILE           shift and go to state 103
    FOR             shift and go to state 104
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    sequence_of_statements         shift and go to state 341
    statement                      shift and go to state 87
    simple_statement               shift and go to state 88
    compound_statement             shift and go to state 89
    null_statement                 shift and go to state 90
    assignment_statement           shift and go to state 91
    exit_statement                 shift and go to state 92
    entry_call_statement           shift and go to state 93
    code_statement                 shift and go to state 94
    if_statement                   shift and go to state 95
    loop_statement                 shift and go to state 96
    name                           shift and go to state 98
    qualified_expression           shift and go to state 100
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 323

    (158) if_statemant_loop -> ELSE . sequence_of_statements END IF SEMICOLON
    (160) sequence_of_statements -> . statement sequence_of_statements
    (161) sequence_of_statements -> . statement
    (162) statement -> . simple_statement
    (163) statement -> . compound_statement
    (168) simple_statement -> . null_statement
    (169) simple_statement -> . assignment_statement
    (170) simple_statement -> . exit_statement
    (171) simple_statement -> . entry_call_statement
    (172) simple_statement -> . code_statement
    (164) compound_statement -> . if_statement
    (165) compound_statement -> . loop_statement
    (178) null_statement -> . NULL
    (179) assignment_statement -> . name ASSIGN expression SEMICOLON
    (176) exit_statement -> . EXIT SEMICOLON
    (177) exit_statement -> . EXIT name SEMICOLON
    (173) entry_call_statement -> . name SEMICOLON
    (174) entry_call_statement -> . name actual_parameter_part SEMICOLON
    (175) code_statement -> . qualified_expression SEMICOLON
    (156) if_statement -> . IF expression THEN sequence_of_statements if_statemant_loop
    (148) loop_statement -> . LOOP sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> . LOOP sequence_of_statements END LOOP name SEMICOLON
    (150) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (152) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 97
    EXIT            shift and go to state 99
    IF              shift and go to state 101
    LOOP            shift and go to state 102
    WHILE           shift and go to state 103
    FOR             shift and go to state 104
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    sequence_of_statements         shift and go to state 342
    statement                      shift and go to state 87
    simple_statement               shift and go to state 88
    compound_statement             shift and go to state 89
    null_statement                 shift and go to state 90
    assignment_statement           shift and go to state 91
    exit_statement                 shift and go to state 92
    entry_call_statement           shift and go to state 93
    code_statement                 shift and go to state 94
    if_statement                   shift and go to state 95
    loop_statement                 shift and go to state 96
    name                           shift and go to state 98
    qualified_expression           shift and go to state 100
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 324

    (159) if_statemant_loop -> END . IF SEMICOLON

    IF              shift and go to state 343


state 325

    (148) loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .

    NULL            reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    EXIT            reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    IF              reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    LOOP            reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    WHILE           reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    FOR             reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    ID              reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    SINGLEQUOTE     reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    END             reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    ELSIF           reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)
    ELSE            reduce using rule 148 (loop_statement -> LOOP sequence_of_statements END LOOP SEMICOLON .)


state 326

    (149) loop_statement -> LOOP sequence_of_statements END LOOP name . SEMICOLON
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    SEMICOLON       shift and go to state 344
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35

  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 327

    (150) loop_statement -> WHILE expression LOOP sequence_of_statements END . LOOP SEMICOLON
    (151) loop_statement -> WHILE expression LOOP sequence_of_statements END . LOOP name SEMICOLON

    LOOP            shift and go to state 345


state 328

    (152) loop_statement -> FOR ID IN discrete_subtype_definition LOOP . sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> FOR ID IN discrete_subtype_definition LOOP . sequence_of_statements END LOOP name SEMICOLON
    (160) sequence_of_statements -> . statement sequence_of_statements
    (161) sequence_of_statements -> . statement
    (162) statement -> . simple_statement
    (163) statement -> . compound_statement
    (168) simple_statement -> . null_statement
    (169) simple_statement -> . assignment_statement
    (170) simple_statement -> . exit_statement
    (171) simple_statement -> . entry_call_statement
    (172) simple_statement -> . code_statement
    (164) compound_statement -> . if_statement
    (165) compound_statement -> . loop_statement
    (178) null_statement -> . NULL
    (179) assignment_statement -> . name ASSIGN expression SEMICOLON
    (176) exit_statement -> . EXIT SEMICOLON
    (177) exit_statement -> . EXIT name SEMICOLON
    (173) entry_call_statement -> . name SEMICOLON
    (174) entry_call_statement -> . name actual_parameter_part SEMICOLON
    (175) code_statement -> . qualified_expression SEMICOLON
    (156) if_statement -> . IF expression THEN sequence_of_statements if_statemant_loop
    (148) loop_statement -> . LOOP sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> . LOOP sequence_of_statements END LOOP name SEMICOLON
    (150) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (152) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 97
    EXIT            shift and go to state 99
    IF              shift and go to state 101
    LOOP            shift and go to state 102
    WHILE           shift and go to state 103
    FOR             shift and go to state 104
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    sequence_of_statements         shift and go to state 346
    name                           shift and go to state 98
    statement                      shift and go to state 87
    simple_statement               shift and go to state 88
    compound_statement             shift and go to state 89
    null_statement                 shift and go to state 90
    assignment_statement           shift and go to state 91
    exit_statement                 shift and go to state 92
    entry_call_statement           shift and go to state 93
    code_statement                 shift and go to state 94
    if_statement                   shift and go to state 95
    loop_statement                 shift and go to state 96
    qualified_expression           shift and go to state 100
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 329

    (154) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition . LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition . LOOP sequence_of_statements END LOOP name SEMICOLON

    LOOP            shift and go to state 347


state 330

    (136) discriminant_part -> identifier_list COLON name ASSIGN expression .

    SEMICOLON       reduce using rule 136 (discriminant_part -> identifier_list COLON name ASSIGN expression .)


state 331

    (17) attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON .

    LPAREN          reduce using rule 17 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON .)
    PROCEDURE       reduce using rule 17 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON .)
    TYPE            reduce using rule 17 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON .)
    COLON           reduce using rule 17 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON .)
    FOR             reduce using rule 17 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON .)
    BEGIN           reduce using rule 17 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE name SEMICOLON .)


state 332

    (16) attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON .

    LPAREN          reduce using rule 16 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON .)
    PROCEDURE       reduce using rule 16 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON .)
    TYPE            reduce using rule 16 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON .)
    COLON           reduce using rule 16 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON .)
    FOR             reduce using rule 16 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON .)
    BEGIN           reduce using rule 16 (attribute_definition_clause -> FOR name SINGLEQUOTE attribute_designator USE expression SEMICOLON .)


state 333

    (93) index_constraint -> LPAREN . discrete_range RPAREN
    (94) index_constraint -> LPAREN . discrete_range COMMA discrete_range index_constraint RPAREN
    (79) discrete_range -> . subtype_indication
    (80) discrete_range -> . range
    (81) subtype_indication -> . name
    (82) subtype_indication -> . name constraint
    (98) range -> . range_attribute_reference
    (99) range -> . simple_expression DOTDOT simple_expression
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (100) range_attribute_reference -> . name SINGLEQUOTE range_attribute_designator
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate

    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82

    discrete_range                 shift and go to state 348
    subtype_indication             shift and go to state 61
    range                          shift and go to state 62
    name                           shift and go to state 166
    range_attribute_reference      shift and go to state 66
    simple_expression              shift and go to state 205
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78

state 334

    (94) index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint . RPAREN

    RPAREN          shift and go to state 349


state 335

    (87) discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .

    RPAREN          reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    COMMA           reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    PIPE            reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    REFASSIGN       reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    PLUS            reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    MINUS           reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    ID              reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    SINGLEQUOTE     reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    NULL            reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    LPAREN          reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    NUMBER_INT      reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    NUMBER_FLOAT    reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    NUMBER_EXPONENT reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)
    LOOP            reduce using rule 87 (discriminant_constraint -> LPAREN discriminant_association COMMA discriminant_association RPAREN .)


state 336

    (89) discriminant_association -> selector_name PIPE selector_name REFASSIGN . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    expression                     shift and go to state 350
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 337

    (90) discriminant_association -> selector_name PIPE selector_name discriminant_association . REFASSIGN expression

    REFASSIGN       shift and go to state 351


state 338

    (102) range_attribute_designator -> RANGE LPAREN expression RPAREN .

    RPAREN          reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    COMMA           reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    PIPE            reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    REFASSIGN       reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    PLUS            reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    MINUS           reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    ID              reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    SINGLEQUOTE     reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    NULL            reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    NUMBER_FLOAT    reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    NUMBER_EXPONENT reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    LOOP            reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    EQUAL           reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    LESSTHANEQUAL   reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    GREATERTHANEQUAL reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    IN              reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    NOT             reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    CONCAT          reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    AND             reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    OR              reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    XOR             reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    COLON           reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    THEN            reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    RANGE           reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    POWER           reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    TIMES           reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    MOD             reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)
    REM             reduce using rule 102 (range_attribute_designator -> RANGE LPAREN expression RPAREN .)


state 339

    (72) named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .

    POWER           reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    TIMES           reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    DIVIDE          reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    MOD             reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    REM             reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    DOTDOT          reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    EQUAL           reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    NOTEQUAL        reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    LESSTHAN        reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    LESSTHANEQUAL   reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    GREATERTHAN     reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    GREATERTHANEQUAL reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    IN              reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    NOT             reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    PLUS            reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    MINUS           reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    CONCAT          reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    AND             reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    OR              reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    XOR             reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    NULL            reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    LPAREN          reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    NUMBER_INT      reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    NUMBER_FLOAT    reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    NUMBER_EXPONENT reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    COMMA           reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    ID              reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    SINGLEQUOTE     reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    RPAREN          reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    COLON           reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    PIPE            reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    REFASSIGN       reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    THEN            reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    LOOP            reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    SEMICOLON       reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)
    RANGE           reduce using rule 72 (named_array_aggregate -> LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN .)


state 340

    (18) indexed_component -> name LPAREN expression RPAREN .
    (20) type_conversion -> name LPAREN expression RPAREN .

  ! reduce/reduce conflict for LPAREN resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for DOT resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
  ! reduce/reduce conflict for SINGLEQUOTE resolved using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    LPAREN          reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    DOT             reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)
    SINGLEQUOTE     reduce using rule 18 (indexed_component -> name LPAREN expression RPAREN .)

  ! LPAREN          [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! DOT             [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]
  ! SINGLEQUOTE     [ reduce using rule 20 (type_conversion -> name LPAREN expression RPAREN .) ]


state 341

    (157) if_statemant_loop -> ELSIF sequence_of_statements . if_statemant_loop
    (157) if_statemant_loop -> . ELSIF sequence_of_statements if_statemant_loop
    (158) if_statemant_loop -> . ELSE sequence_of_statements END IF SEMICOLON
    (159) if_statemant_loop -> . END IF SEMICOLON

    ELSIF           shift and go to state 322
    ELSE            shift and go to state 323
    END             shift and go to state 324

    if_statemant_loop              shift and go to state 352

state 342

    (158) if_statemant_loop -> ELSE sequence_of_statements . END IF SEMICOLON

    END             shift and go to state 353


state 343

    (159) if_statemant_loop -> END IF . SEMICOLON

    SEMICOLON       shift and go to state 354


state 344

    (149) loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .

    NULL            reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    EXIT            reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    IF              reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    LOOP            reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    WHILE           reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    FOR             reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ID              reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    SINGLEQUOTE     reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    END             reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ELSIF           reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ELSE            reduce using rule 149 (loop_statement -> LOOP sequence_of_statements END LOOP name SEMICOLON .)


state 345

    (150) loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP . SEMICOLON
    (151) loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP . name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    SEMICOLON       shift and go to state 355
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 356
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 346

    (152) loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements . END LOOP SEMICOLON
    (153) loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements . END LOOP name SEMICOLON

    END             shift and go to state 357


state 347

    (154) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP . sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP . sequence_of_statements END LOOP name SEMICOLON
    (160) sequence_of_statements -> . statement sequence_of_statements
    (161) sequence_of_statements -> . statement
    (162) statement -> . simple_statement
    (163) statement -> . compound_statement
    (168) simple_statement -> . null_statement
    (169) simple_statement -> . assignment_statement
    (170) simple_statement -> . exit_statement
    (171) simple_statement -> . entry_call_statement
    (172) simple_statement -> . code_statement
    (164) compound_statement -> . if_statement
    (165) compound_statement -> . loop_statement
    (178) null_statement -> . NULL
    (179) assignment_statement -> . name ASSIGN expression SEMICOLON
    (176) exit_statement -> . EXIT SEMICOLON
    (177) exit_statement -> . EXIT name SEMICOLON
    (173) entry_call_statement -> . name SEMICOLON
    (174) entry_call_statement -> . name actual_parameter_part SEMICOLON
    (175) code_statement -> . qualified_expression SEMICOLON
    (156) if_statement -> . IF expression THEN sequence_of_statements if_statemant_loop
    (148) loop_statement -> . LOOP sequence_of_statements END LOOP SEMICOLON
    (149) loop_statement -> . LOOP sequence_of_statements END LOOP name SEMICOLON
    (150) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON
    (151) loop_statement -> . WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON
    (152) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (153) loop_statement -> . FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (154) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON
    (155) loop_statement -> . FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    NULL            shift and go to state 97
    EXIT            shift and go to state 99
    IF              shift and go to state 101
    LOOP            shift and go to state 102
    WHILE           shift and go to state 103
    FOR             shift and go to state 104
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    sequence_of_statements         shift and go to state 358
    name                           shift and go to state 98
    statement                      shift and go to state 87
    simple_statement               shift and go to state 88
    compound_statement             shift and go to state 89
    null_statement                 shift and go to state 90
    assignment_statement           shift and go to state 91
    exit_statement                 shift and go to state 92
    entry_call_statement           shift and go to state 93
    code_statement                 shift and go to state 94
    if_statement                   shift and go to state 95
    loop_statement                 shift and go to state 96
    qualified_expression           shift and go to state 100
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 348

    (93) index_constraint -> LPAREN discrete_range . RPAREN
    (94) index_constraint -> LPAREN discrete_range . COMMA discrete_range index_constraint RPAREN

    RPAREN          shift and go to state 359
    COMMA           shift and go to state 270


state 349

    (94) index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .

    RPAREN          reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    COMMA           reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    PIPE            reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    REFASSIGN       reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    PLUS            reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    MINUS           reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    ID              reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    SINGLEQUOTE     reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    NULL            reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    LPAREN          reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    NUMBER_INT      reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    NUMBER_FLOAT    reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    NUMBER_EXPONENT reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)
    LOOP            reduce using rule 94 (index_constraint -> LPAREN discrete_range COMMA discrete_range index_constraint RPAREN .)


state 350

    (89) discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .

    COMMA           reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    RPAREN          reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    PIPE            reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    REFASSIGN       reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    PLUS            reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    MINUS           reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    ID              reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    SINGLEQUOTE     reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    NULL            reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    LPAREN          reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    NUMBER_INT      reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    NUMBER_FLOAT    reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    NUMBER_EXPONENT reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)
    LOOP            reduce using rule 89 (discriminant_association -> selector_name PIPE selector_name REFASSIGN expression .)


state 351

    (90) discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN . expression
    (26) expression -> . relation AND relation
    (27) expression -> . relation AND relation expression
    (28) expression -> . relation AND THEN relation
    (29) expression -> . relation AND THEN relation expression
    (30) expression -> . relation OR relation
    (31) expression -> . relation OR relation expression
    (32) expression -> . relation OR ELSE relation
    (33) expression -> . relation OR ELSE relation expression
    (34) expression -> . relation XOR relation
    (35) expression -> . relation XOR relation expression
    (36) relation -> . simple_expression
    (37) relation -> . simple_expression EQUAL simple_expression
    (38) relation -> . simple_expression NOTEQUAL simple_expression
    (39) relation -> . simple_expression LESSTHAN simple_expression
    (40) relation -> . simple_expression LESSTHANEQUAL simple_expression
    (41) relation -> . simple_expression GREATERTHAN simple_expression
    (42) relation -> . simple_expression GREATERTHANEQUAL simple_expression
    (43) relation -> . simple_expression IN range
    (44) relation -> . simple_expression IN name
    (45) relation -> . simple_expression NOT IN range
    (46) relation -> . simple_expression NOT IN name
    (47) simple_expression -> . simple_expression PLUS term
    (48) simple_expression -> . simple_expression MINUS term
    (49) simple_expression -> . simple_expression CONCAT term
    (50) simple_expression -> . unaryExp
    (51) unaryExp -> . PLUS term
    (52) unaryExp -> . MINUS term
    (53) unaryExp -> . term
    (54) term -> . factor
    (55) term -> . factor TIMES factor term
    (56) term -> . factor DIVIDE factor term
    (57) term -> . factor MOD factor term
    (58) term -> . factor REM factor term
    (59) factor -> . primary
    (60) factor -> . primary POWER primary
    (64) primary -> . numeric_literal
    (65) primary -> . NULL
    (66) primary -> . named_array_aggregate
    (67) primary -> . name
    (68) primary -> . qualified_expression
    (69) primary -> . LPAREN expression RPAREN
    (61) numeric_literal -> . NUMBER_INT
    (62) numeric_literal -> . NUMBER_FLOAT
    (63) numeric_literal -> . NUMBER_EXPONENT
    (72) named_array_aggregate -> . LPAREN array_component_association COMMA array_component_association named_array_aggregate RPAREN
    (73) named_array_aggregate -> . COMMA array_component_association
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (70) qualified_expression -> . name SINGLEQUOTE LPAREN expression RPAREN
    (71) qualified_expression -> . name SINGLEQUOTE named_array_aggregate
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    PLUS            shift and go to state 69
    MINUS           shift and go to state 71
    NULL            shift and go to state 76
    LPAREN          shift and go to state 57
    NUMBER_INT      shift and go to state 79
    NUMBER_FLOAT    shift and go to state 80
    NUMBER_EXPONENT shift and go to state 81
    COMMA           shift and go to state 82
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    expression                     shift and go to state 360
    relation                       shift and go to state 63
    simple_expression              shift and go to state 178
    name                           shift and go to state 156
    term                           shift and go to state 70
    unaryExp                       shift and go to state 72
    factor                         shift and go to state 73
    primary                        shift and go to state 74
    numeric_literal                shift and go to state 75
    named_array_aggregate          shift and go to state 77
    qualified_expression           shift and go to state 78
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 352

    (157) if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .

    NULL            reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    EXIT            reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    IF              reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    LOOP            reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    WHILE           reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    FOR             reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    ID              reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    SINGLEQUOTE     reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    END             reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    ELSIF           reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)
    ELSE            reduce using rule 157 (if_statemant_loop -> ELSIF sequence_of_statements if_statemant_loop .)


state 353

    (158) if_statemant_loop -> ELSE sequence_of_statements END . IF SEMICOLON

    IF              shift and go to state 361


state 354

    (159) if_statemant_loop -> END IF SEMICOLON .

    NULL            reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    EXIT            reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    IF              reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    LOOP            reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    WHILE           reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    FOR             reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    ID              reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    SINGLEQUOTE     reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    END             reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    ELSIF           reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)
    ELSE            reduce using rule 159 (if_statemant_loop -> END IF SEMICOLON .)


state 355

    (150) loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .

    NULL            reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    EXIT            reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    IF              reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    LOOP            reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    WHILE           reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    FOR             reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    ID              reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    SINGLEQUOTE     reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    END             reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    ELSIF           reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)
    ELSE            reduce using rule 150 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP SEMICOLON .)


state 356

    (151) loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name . SEMICOLON
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    SEMICOLON       shift and go to state 362
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35

  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 357

    (152) loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END . LOOP SEMICOLON
    (153) loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END . LOOP name SEMICOLON

    LOOP            shift and go to state 363


state 358

    (154) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements . END LOOP SEMICOLON
    (155) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements . END LOOP name SEMICOLON

    END             shift and go to state 364


state 359

    (93) index_constraint -> LPAREN discrete_range RPAREN .

    RPAREN          reduce using rule 93 (index_constraint -> LPAREN discrete_range RPAREN .)


state 360

    (90) discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .

    COMMA           reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    RPAREN          reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    PIPE            reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    REFASSIGN       reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    PLUS            reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    MINUS           reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    ID              reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    SINGLEQUOTE     reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    NULL            reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    LPAREN          reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    NUMBER_INT      reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    NUMBER_FLOAT    reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    NUMBER_EXPONENT reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)
    LOOP            reduce using rule 90 (discriminant_association -> selector_name PIPE selector_name discriminant_association REFASSIGN expression .)


state 361

    (158) if_statemant_loop -> ELSE sequence_of_statements END IF . SEMICOLON

    SEMICOLON       shift and go to state 365


state 362

    (151) loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .

    NULL            reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    EXIT            reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    IF              reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    LOOP            reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    WHILE           reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    FOR             reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ID              reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    SINGLEQUOTE     reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    END             reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ELSIF           reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ELSE            reduce using rule 151 (loop_statement -> WHILE expression LOOP sequence_of_statements END LOOP name SEMICOLON .)


state 363

    (152) loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP . SEMICOLON
    (153) loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP . name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    SEMICOLON       shift and go to state 366
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 367
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 364

    (154) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END . LOOP SEMICOLON
    (155) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END . LOOP name SEMICOLON

    LOOP            shift and go to state 368


state 365

    (158) if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .

    NULL            reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    EXIT            reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    IF              reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    LOOP            reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    WHILE           reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    FOR             reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    ID              reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    SINGLEQUOTE     reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    END             reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    ELSIF           reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)
    ELSE            reduce using rule 158 (if_statemant_loop -> ELSE sequence_of_statements END IF SEMICOLON .)


state 366

    (152) loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .

    NULL            reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    EXIT            reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    IF              reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    LOOP            reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    WHILE           reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    FOR             reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    ID              reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    SINGLEQUOTE     reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    END             reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    ELSIF           reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    ELSE            reduce using rule 152 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)


state 367

    (153) loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name . SEMICOLON
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    SEMICOLON       shift and go to state 369
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35

  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 368

    (154) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP . SEMICOLON
    (155) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP . name SEMICOLON
    (103) name -> . direct_name
    (104) name -> . slice
    (105) name -> . selected_component
    (106) name -> . attribute_reference
    (107) name -> . type_conversion
    (108) name -> . function_call
    (109) name -> . character_literal
    (110) name -> . indexed_component
    (15) direct_name -> . ID
    (111) slice -> . name LPAREN discrete_range RPAREN
    (22) selected_component -> . name DOT selector_name
    (23) attribute_reference -> . name SINGLEQUOTE attribute_designator
    (20) type_conversion -> . name LPAREN expression RPAREN
    (21) type_conversion -> . name LPAREN name RPAREN
    (112) function_call -> . name
    (113) function_call -> . name actual_parameter_part
    (128) character_literal -> . SINGLEQUOTE graphic_character SINGLEQUOTE
    (18) indexed_component -> . name LPAREN expression RPAREN
    (19) indexed_component -> . name LPAREN expression COLON indexed_component RPAREN

    SEMICOLON       shift and go to state 370
    ID              shift and go to state 52
    SINGLEQUOTE     shift and go to state 16

    name                           shift and go to state 371
    direct_name                    shift and go to state 8
    slice                          shift and go to state 9
    selected_component             shift and go to state 10
    attribute_reference            shift and go to state 11
    type_conversion                shift and go to state 12
    function_call                  shift and go to state 13
    character_literal              shift and go to state 14
    indexed_component              shift and go to state 15

state 369

    (153) loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .

    NULL            reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    EXIT            reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    IF              reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    LOOP            reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    WHILE           reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    FOR             reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ID              reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    SINGLEQUOTE     reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    END             reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ELSIF           reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ELSE            reduce using rule 153 (loop_statement -> FOR ID IN discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)


state 370

    (154) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .

    NULL            reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    EXIT            reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    IF              reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    LOOP            reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    WHILE           reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    FOR             reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    ID              reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    SINGLEQUOTE     reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    END             reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    ELSIF           reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)
    ELSE            reduce using rule 154 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP SEMICOLON .)


state 371

    (155) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name . SEMICOLON
    (111) slice -> name . LPAREN discrete_range RPAREN
    (22) selected_component -> name . DOT selector_name
    (23) attribute_reference -> name . SINGLEQUOTE attribute_designator
    (20) type_conversion -> name . LPAREN expression RPAREN
    (21) type_conversion -> name . LPAREN name RPAREN
    (112) function_call -> name .
    (113) function_call -> name . actual_parameter_part
    (18) indexed_component -> name . LPAREN expression RPAREN
    (19) indexed_component -> name . LPAREN expression COLON indexed_component RPAREN
    (114) actual_parameter_part -> . LPAREN parameter_association RPAREN
    (115) actual_parameter_part -> . LPAREN parameter_association actual_parameter_part_loop RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE resolved as shift
    SEMICOLON       shift and go to state 372
    LPAREN          shift and go to state 34
    DOT             shift and go to state 113
    SINGLEQUOTE     shift and go to state 35

  ! SEMICOLON       [ reduce using rule 112 (function_call -> name .) ]
  ! LPAREN          [ reduce using rule 112 (function_call -> name .) ]
  ! DOT             [ reduce using rule 112 (function_call -> name .) ]
  ! SINGLEQUOTE     [ reduce using rule 112 (function_call -> name .) ]

    actual_parameter_part          shift and go to state 36

state 372

    (155) loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .

    NULL            reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    EXIT            reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    IF              reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    LOOP            reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    WHILE           reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    FOR             reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ID              reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    SINGLEQUOTE     reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    END             reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ELSIF           reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)
    ELSE            reduce using rule 155 (loop_statement -> FOR ID IN REVERSE discrete_subtype_definition LOOP sequence_of_statements END LOOP name SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 7 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 7 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 7 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 50 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 50 resolved as shift
WARNING: shift/reduce conflict for DOT in state 50 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 56 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 56 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 56 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 56 resolved as shift
WARNING: shift/reduce conflict for DOT in state 56 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 56 resolved as shift
WARNING: shift/reduce conflict for RANGE in state 56 resolved as shift
WARNING: shift/reduce conflict for DIGITS in state 56 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 56 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for MOD in state 73 resolved as shift
WARNING: shift/reduce conflict for REM in state 73 resolved as shift
WARNING: shift/reduce conflict for POWER in state 74 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 84 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 98 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 98 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 98 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 98 resolved as shift
WARNING: shift/reduce conflict for DOT in state 98 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 105 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 105 resolved as shift
WARNING: shift/reduce conflict for DOT in state 105 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 105 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 105 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 106 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 106 resolved as shift
WARNING: shift/reduce conflict for DOT in state 106 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 106 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 106 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 130 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 130 resolved as shift
WARNING: shift/reduce conflict for DOT in state 130 resolved as shift
WARNING: shift/reduce conflict for RANGE in state 130 resolved as shift
WARNING: shift/reduce conflict for DIGITS in state 130 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 130 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 156 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 156 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 156 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 156 resolved as shift
WARNING: shift/reduce conflict for DOT in state 156 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 166 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 166 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 166 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 166 resolved as shift
WARNING: shift/reduce conflict for DOT in state 166 resolved as shift
WARNING: shift/reduce conflict for RANGE in state 166 resolved as shift
WARNING: shift/reduce conflict for DIGITS in state 166 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 166 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 172 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 175 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 175 resolved as shift
WARNING: shift/reduce conflict for DOT in state 175 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 175 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 178 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 178 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 178 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 178 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 178 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 178 resolved as shift
WARNING: shift/reduce conflict for IN in state 178 resolved as shift
WARNING: shift/reduce conflict for NOT in state 178 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 178 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 178 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 178 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 196 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 203 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 206 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 206 resolved as shift
WARNING: shift/reduce conflict for DOT in state 206 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 218 resolved as shift
WARNING: shift/reduce conflict for DOT in state 218 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 218 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 223 resolved as shift
WARNING: shift/reduce conflict for DOT in state 223 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 223 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 224 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 224 resolved as shift
WARNING: shift/reduce conflict for NULL in state 224 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 224 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 224 resolved as shift
WARNING: shift/reduce conflict for NUMBER_FLOAT in state 224 resolved as shift
WARNING: shift/reduce conflict for NUMBER_EXPONENT in state 224 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 224 resolved as shift
WARNING: shift/reduce conflict for ID in state 224 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 224 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 226 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 226 resolved as shift
WARNING: shift/reduce conflict for NULL in state 226 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 226 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 226 resolved as shift
WARNING: shift/reduce conflict for NUMBER_FLOAT in state 226 resolved as shift
WARNING: shift/reduce conflict for NUMBER_EXPONENT in state 226 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 226 resolved as shift
WARNING: shift/reduce conflict for ID in state 226 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 226 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 228 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 228 resolved as shift
WARNING: shift/reduce conflict for NULL in state 228 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 228 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 228 resolved as shift
WARNING: shift/reduce conflict for NUMBER_FLOAT in state 228 resolved as shift
WARNING: shift/reduce conflict for NUMBER_EXPONENT in state 228 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 228 resolved as shift
WARNING: shift/reduce conflict for ID in state 228 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 228 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 230 resolved as shift
WARNING: shift/reduce conflict for DOT in state 230 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 230 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 231 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 231 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 231 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 232 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 232 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 232 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 233 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 233 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 233 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 234 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 234 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 234 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 235 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 235 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 235 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 236 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 236 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 236 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 237 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 237 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 237 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 239 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 239 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 239 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 239 resolved as shift
WARNING: shift/reduce conflict for DOT in state 239 resolved as shift
WARNING: shift/reduce conflict for DOT in state 252 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 252 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 252 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 262 resolved as shift
WARNING: shift/reduce conflict for DOT in state 262 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 262 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 262 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 265 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 265 resolved as shift
WARNING: shift/reduce conflict for DOT in state 265 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 265 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 285 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 285 resolved as shift
WARNING: shift/reduce conflict for NULL in state 285 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 285 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 285 resolved as shift
WARNING: shift/reduce conflict for NUMBER_FLOAT in state 285 resolved as shift
WARNING: shift/reduce conflict for NUMBER_EXPONENT in state 285 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 285 resolved as shift
WARNING: shift/reduce conflict for ID in state 285 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 285 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 287 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 287 resolved as shift
WARNING: shift/reduce conflict for NULL in state 287 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 287 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 287 resolved as shift
WARNING: shift/reduce conflict for NUMBER_FLOAT in state 287 resolved as shift
WARNING: shift/reduce conflict for NUMBER_EXPONENT in state 287 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 287 resolved as shift
WARNING: shift/reduce conflict for ID in state 287 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 287 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 290 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 290 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 290 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 290 resolved as shift
WARNING: shift/reduce conflict for DOT in state 290 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 308 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 308 resolved as shift
WARNING: shift/reduce conflict for DOT in state 308 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 308 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 317 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 326 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 326 resolved as shift
WARNING: shift/reduce conflict for DOT in state 326 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 326 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 356 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 356 resolved as shift
WARNING: shift/reduce conflict for DOT in state 356 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 356 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 367 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 367 resolved as shift
WARNING: shift/reduce conflict for DOT in state 367 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 367 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 371 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 371 resolved as shift
WARNING: shift/reduce conflict for DOT in state 371 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE in state 371 resolved as shift
WARNING: reduce/reduce conflict in state 56 resolved using rule (subtype_indication -> name)
WARNING: rejected rule (parameter_association -> name) in state 56
WARNING: reduce/reduce conflict in state 56 resolved using rule (subtype_indication -> name)
WARNING: rejected rule (function_call -> name) in state 56
WARNING: reduce/reduce conflict in state 56 resolved using rule (primary -> name)
WARNING: rejected rule (function_call -> name) in state 56
WARNING: reduce/reduce conflict in state 130 resolved using rule (subtype_indication -> name)
WARNING: rejected rule (function_call -> name) in state 130
WARNING: reduce/reduce conflict in state 130 resolved using rule (primary -> name)
WARNING: rejected rule (function_call -> name) in state 130
WARNING: reduce/reduce conflict in state 134 resolved using rule (indexed_component -> name LPAREN expression RPAREN)
WARNING: rejected rule (type_conversion -> name LPAREN expression RPAREN) in state 134
WARNING: reduce/reduce conflict in state 156 resolved using rule (primary -> name)
WARNING: rejected rule (function_call -> name) in state 156
WARNING: reduce/reduce conflict in state 166 resolved using rule (subtype_indication -> name)
WARNING: rejected rule (function_call -> name) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (primary -> name)
WARNING: rejected rule (function_call -> name) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (primary -> name)
WARNING: rejected rule (subtype_indication -> name) in state 166
WARNING: reduce/reduce conflict in state 196 resolved using rule (discriminant_association -> expression)
WARNING: rejected rule (parameter_association -> expression) in state 196
WARNING: reduce/reduce conflict in state 206 resolved using rule (primary -> name)
WARNING: rejected rule (function_call -> name) in state 206
WARNING: reduce/reduce conflict in state 223 resolved using rule (function_call -> name)
WARNING: rejected rule (parameter_association -> name) in state 223
WARNING: reduce/reduce conflict in state 223 resolved using rule (primary -> name)
WARNING: rejected rule (function_call -> name) in state 223
WARNING: reduce/reduce conflict in state 230 resolved using rule (function_call -> name)
WARNING: rejected rule (parameter_association -> selector_name REFASSIGN name) in state 230
WARNING: reduce/reduce conflict in state 230 resolved using rule (primary -> name)
WARNING: rejected rule (function_call -> name) in state 230
WARNING: reduce/reduce conflict in state 239 resolved using rule (relation -> simple_expression IN name)
WARNING: rejected rule (function_call -> name) in state 239
WARNING: reduce/reduce conflict in state 239 resolved using rule (relation -> simple_expression IN name)
WARNING: rejected rule (primary -> name) in state 239
WARNING: reduce/reduce conflict in state 262 resolved using rule (function_call -> name)
WARNING: rejected rule (use_clause_loop -> COMMA name) in state 262
WARNING: reduce/reduce conflict in state 269 resolved using rule (index_constraint -> LPAREN discrete_range RPAREN)
WARNING: rejected rule (slice -> name LPAREN discrete_range RPAREN) in state 269
WARNING: reduce/reduce conflict in state 290 resolved using rule (relation -> simple_expression NOT IN name)
WARNING: rejected rule (function_call -> name) in state 290
WARNING: reduce/reduce conflict in state 290 resolved using rule (relation -> simple_expression NOT IN name)
WARNING: rejected rule (primary -> name) in state 290
WARNING: reduce/reduce conflict in state 308 resolved using rule (primary -> name)
WARNING: rejected rule (function_call -> name) in state 308
WARNING: reduce/reduce conflict in state 340 resolved using rule (indexed_component -> name LPAREN expression RPAREN)
WARNING: rejected rule (type_conversion -> name LPAREN expression RPAREN) in state 340
WARNING: Rule (parameter_association -> name) is never reduced
WARNING: Rule (type_conversion -> name LPAREN expression RPAREN) is never reduced
WARNING: Rule (parameter_association -> selector_name REFASSIGN name) is never reduced
WARNING: Rule (use_clause_loop -> COMMA name) is never reduced
